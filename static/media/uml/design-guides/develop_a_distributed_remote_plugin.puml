@startuml
title
    Keyple 2.0 - Specific Remote Plugin - 2.0.0 (28/05/2021)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * <back:yellow>Public API for end users</back>
    * <back:lightBlue>Private API for internal use only</back>
end legend

package "org.eclipse.keyple.core.common" as commonApi {
    +interface KeyplePluginExtensionFactory {
    }
    +interface KeyplePluginExtension {
    }
    +interface KeypleReaderExtension {
    }
}

package "org.eclipse.keyple.core.distributed.remote.spi" as pluginSpi {
    +interface RemoteReaderSpi {
        ...
    }
    +interface AbstractRemotePluginSpi {
        ...
    }
    +interface RemotePluginFactorySpi {
        ...
    }
}

package "org.eclipse.keyple.plugin.xxx (specific plugin)" as specificPluginApi {
    +class "**final** xxxPluginFactoryProvider" as xxxPluginFactoryProvider {
        +{static} xxxPluginFactory getFactory ()
    }
    +interface xxxPluginFactory extends KeyplePluginExtensionFactory {
        ...
    }
    +interface xxxPlugin extends KeyplePluginExtension {
        ...
    }
    +interface xxxReader extends KeypleReaderExtension {
        ...
    }
    ' Adapters
    ~class "**final** xxxPluginFactoryAdapter" as xxxPluginFactoryAdapter implements xxxPluginFactory, RemotePluginFactorySpi {
        ...
    }
    ~class "**final** xxxPluginAdapter" as xxxPluginAdapter implements xxxPlugin, AbstractRemotePluginSpi {
        ...
    }
    ~class "**final** xxxReaderAdapter" as xxxReaderAdapter implements xxxReader, RemoteReaderSpi {
        ...
    }
}

' Associations

xxxPluginFactoryProvider .> xxxPluginFactory #C_LINK : provide >
xxxPluginFactoryAdapter *- "1" xxxPluginAdapter #C_LINK
xxxPluginAdapter *- "0..N" xxxReaderAdapter #C_LINK

' == LAYOUT ==

commonApi -[hidden]- specificPluginApi
xxxReaderAdapter -[hidden]- RemoteReaderSpi
xxxPluginAdapter -[hidden]- AbstractRemotePluginSpi
xxxPluginFactoryAdapter -[hidden]- RemotePluginFactorySpi

' == STYLE ==

package commonApi #C_GREY1 {}
package pluginSpi #C_GREY1 {}
package specificPluginApi #C_GREY1 {}

class xxxReaderAdapter <<blue>>
class xxxPluginAdapter <<blue>>
class xxxPluginFactoryAdapter <<blue>>
interface RemoteReaderSpi <<blue>>
interface AbstractRemotePluginSpi <<blue>>
interface RemotePluginFactorySpi <<blue>>

@enduml