<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Eclipse Keyple</title><link>https://keyple.org/</link><atom:link href="https://keyple.org/index.xml" rel="self" type="application/rss+xml"/><description>Eclipse Keyple</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Thu, 06 Mar 2025 00:00:00 +0100</lastBuildDate><image><url>https://keyple.org/media/logo.svg</url><title>Eclipse Keyple</title><link>https://keyple.org/</link></image><item><title>Build your first Java application</title><link>https://keyple.org/learn/build-your-first-app/java-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/build-your-first-app/java-app/</guid><description>&lt;br>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This quick start describes how to create a ready-to-execute Java command-line application that runs a simple transaction based on
a Calypso Card involving two smart card readers.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>The demonstration application created for this quick start requires:&lt;/p>
&lt;ul>
&lt;li>a Calypso Card (contactless smart card, NFC mobile phone with a Calypso applet or application),&lt;/li>
&lt;li>a Calypso SAM (Secure Access Module).&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;p>We will use three main components of Keyple:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="./components/core/">Keyple Service Java Library&lt;/a>
which is the base component to which all the others refer,&lt;/li>
&lt;li>&lt;a href="./components/card-extensions/keyple-card-calypso-lib/">Keyple Card Calypso&lt;/a>
add-on to handle the commands sent to the Calypso card and the Calypso SAM,&lt;/li>
&lt;li>&lt;a href="./components/standard-reader-plugins/keyple-plugin-pcsc-lib/">Keyple Plugin PC/SC&lt;/a>
add-on to provide the ability to manage PC/SC readers.&lt;/li>
&lt;/ul>
&lt;p>In this guide &lt;a href="https://gradle.org/" target="_blank" rel="noopener">Gradle&lt;/a> is used as build automation
tool, but it is easy to transpose these explanations to another tool
such as Maven for example.&lt;/p>
&lt;p>See &lt;a href="./components/overview/configuration-wizard/">here&lt;/a> for the configuration of the dependencies.&lt;/p>
&lt;p>The example can run on any machine: Linux, Windows and macOS. If not
installed in your machine, you will need to download :&lt;/p>
&lt;ul>
&lt;li>Java 1.6+&lt;/li>
&lt;li>&lt;a href="https://gradle.org/install/" target="_blank" rel="noopener">Gradle&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>We recommend that you use a Java IDE like
&lt;a href="https://www.eclipse.org/ide/" target="_blank" rel="noopener">Eclipse&lt;/a> or
&lt;a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">Intellij IDEA&lt;/a> to create your new
Gradle project.&lt;/p>
&lt;br>
&lt;h2 id="create-a-gradle-based-empty-project">Create a Gradle-based empty project&lt;/h2>
&lt;p>Create a new Java project and add the following statements to your
&lt;code>build.gradle&lt;/code> file to import the Keyple components into your
project:&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;java&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mavenCentral&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Import Keypop APIs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keypop:keypop-reader-java-api:2.0.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keypop:keypop-calypso-card-java-api:2.1.2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Import Keyple components
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-common-java-api:2.0.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-util-java-lib:2.4.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-service-java-lib:3.3.5&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-card-calypso-java-lib:3.1.7&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-plugin-pcsc-java-lib:2.4.2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>If necessary, also create the usual tree in which the Java code of this
guide will be placed, namely the folders: &lt;code>\src\main\java&lt;/code>&lt;/p>
&lt;br>
&lt;h2 id="lets-code">Let&amp;rsquo;s code&lt;/h2>
&lt;p>Now let&amp;rsquo;s see step by step how to create in one single class the
elements that allow a certified reading of data through a Calypso secure
session.&lt;/p>
&lt;p>In a real ticketing application, the organization of the code would
probably be different, but the point here is to show how Keyple makes it
possible to perform very simply operations that normally require a
quantity of code and knowledge that far exceeds what is implemented
here.&lt;/p>
&lt;p>You can either progressively copy each of the small portions of code
that follow or copy the whole class at the bottom of this page.&lt;/p>
&lt;h3 id="create-the-class-skeleton">Create the class skeleton&lt;/h3>
&lt;p>Copy the source code below in a new Java Class named
DemoCardAuthentication.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.card.calypso.CalypsoExtensionService&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.card.calypso.crypto.legacysam.LegacySamExtensionService&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.Plugin&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.SmartCardService&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.SmartCardServiceProvider&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.plugin.pcsc.PcscPluginFactoryBuilder&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.plugin.pcsc.PcscReader&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.CalypsoCardApiFactory&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.WriteAccessLevel&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.card.CalypsoCard&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.card.CalypsoCardSelectionExtension&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.transaction.ChannelControl&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.transaction.SymmetricCryptoSecuritySetting&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.crypto.legacysam.LegacySamApiFactory&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.crypto.legacysam.sam.LegacySam&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.reader.CardReader&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.reader.ReaderApiFactory&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.reader.selection.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DemoCardAuthentication&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// The names of the readers must be adapted to the actual configuration.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_READER_NAME&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;ASK LoGO 0&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SAM_READER_NAME&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Identive CLOUD 2700 R Smart Card Reader 0&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;315449432E49434131&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Keyple test kit profile 1, Application 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SFI_ENVIRONMENT_AND_HOLDER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0x07&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// ... &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="retrieve-the-main-services-and-factories">Retrieve the main services and factories&lt;/h3>
&lt;p>The &lt;code>SmartCardService&lt;/code> is used to register the plugins and check the extensions.
The &lt;code>ReaderApiFactory&lt;/code> creates the classes needed to manage the card selection.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get the instance of the SmartCardService&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get the ReaderApiFactory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ReaderApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderApiFactory&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="set-up-the-pcsc-plugin">Set up the PC/SC plugin&lt;/h3>
&lt;p>The first step to use Keyple is to initialize the plugin and smart card readers.&lt;/p>
&lt;p>In this snippet the PC/SC plugin is registered to the SmartCardService.&lt;/p>
&lt;p>Two readers needs to be connected to the local machine. Change
&amp;ldquo;CARD_READER_NAME&amp;rdquo; and &amp;ldquo;SAM_READER_NAME&amp;rdquo; with the name of your USB readers.&lt;/p>
&lt;p>If you don&amp;rsquo;t know the names of the readers, read how to find them in the &lt;a href="#faq">FAQ&lt;/a>.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Register the PcscPlugin with the SmartCardService, get a generic plugin instance in return&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscPluginFactoryBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get and set up the card reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CARD_READER_NAME&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Card reader &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_READER_NAME&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; not found.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Set the card reader type (for ratification management purpose)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_READER_NAME&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">setContactless&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isCardPresent&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;No card is present in the reader &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get and set up the SAM reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SAM_READER_NAME&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SAM reader &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SAM_READER_NAME&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; not found.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isCardPresent&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;No SAM is present in the reader &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="set-up-the-calypso-card-extension">Set up the Calypso card extension&lt;/h3>
&lt;p>The Calypso card extension service will provide means to handle cards, SAMs and to manage card transactions.
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get the Calypso card extension service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Verify that the extension&amp;#39;s API level is consistent with the current service.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">checkCardExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h3 id="select-the-legacy-sam">Select the Legacy SAM&lt;/h3>
&lt;p>Before executing a transaction each smart card should be selected. The
next step is the selection of the Calypso SAM resulting in a
CalypsoSam object.&lt;/p>
&lt;p>It is then combined with the SAM reader to form the SAM resource needed
later within the transaction service.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a SAM selection manager.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a card selector without filer&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">BasicCardSelector&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samCardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createBasicCardSelector&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">legacySamApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getLegacySamApiFactory&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a SAM selection using the Calypso card extension.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">samCardSelector&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">legacySamApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createLegacySamSelectionExtension&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LegacySam&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The SAM selection failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="select-the-calypso-card">Select the Calypso card&lt;/h3>
&lt;p>1st card exchange:&lt;/p>
&lt;p>The Calypso card selection is made using the card application&amp;rsquo;s AID
and results in a CalypsoCard object that will contain all the information extracted
from the Calypso card all along the transaction.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Retrieve the CalypsoCardApiFactory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoCardApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getCalypsoCardApiFactory&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Select the card&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a generic ISO selector&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">IsoCardSelector&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createIsoCardSelector&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">filterByDfName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a specific Calypso card selection extension&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoCardSelectionExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardSelectionExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCalypsoCardSelectionExtension&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">acceptInvalidatedCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Prepare the card selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardSelector&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardSelectionExtension&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Process the card selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The selection of the application &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoCard&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="set-up-the-security-settings">Set up the security settings&lt;/h3>
&lt;p>The security settings holds the means to communicate with the SAM and parameters used during the card transaction. They
may be reused each time a card is presented.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Prepare the security settings used during the Calypso transaction&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SymmetricCryptoSecuritySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">symmetricCryptoSecuritySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSymmetricCryptoSecuritySetting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getLegacySamApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSymmetricCryptoCardTransactionManagerFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="p">));&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="open-the-calypso-secure-session">Open the Calypso secure session&lt;/h3>
&lt;p>2nd card exchange :&lt;/p>
&lt;p>The secure session opening operated by the CardTransaction service is
combined with the reading of the environment file (SFI=07h).&lt;/p>
&lt;p>The mutual authentication process between Calypso card and Calypso SAM is initiated transparently.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Performs file reads using the card transaction manager in a secure session, keep the channel open.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SecureRegularModeTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardApiFactory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSecureRegularModeTransactionManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">symmetricCryptoSecuritySetting&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareOpenSecureSession&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WriteAccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">DEBIT&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareReadRecord&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_ENVIRONMENT_AND_HOLDER&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCommands&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ChannelControl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">KEEP_OPEN&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;= #### FILE CONTENT = &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_ENVIRONMENT_AND_HOLDER&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="close-the-calypso-secure-session">Close the Calypso secure session&lt;/h3>
&lt;p>3rd card exchange:&lt;/p>
&lt;p>Simply close the Calypso secure session&lt;/p>
&lt;p>The mutual authentication is finalized, it includes the authentication
of the data in the read file.&lt;/p>
&lt;p>Note: any technical, cryptographic or content-related incident in the Calypso card
would be signalled by an exception and would interrupt the thread of
execution.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Close the secure session, free the communication channel at the same time&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareCloseSecureSession&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCommands&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ChannelControl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CLOSE_AFTER&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;= #### The Secure Session ended successfully, the card is authenticated and the data read are certified.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= #### End of the Calypso card processing.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="unregister-the-plugin">Unregister the plugin&lt;/h3>
&lt;p>Finally unregister the plugin before shutting down the application&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Unregister the plugin before leaving the application&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unregisterPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Find the complete code source &lt;a href="#full-code">below&lt;/a>.&lt;/p>
&lt;br>
&lt;h2 id="run">Run&lt;/h2>
&lt;ol>
&lt;li>Connect two USB PC/SC Readers.&lt;/li>
&lt;li>Insert the Calypso SAM in the SAM reader.&lt;/li>
&lt;li>Insert the Calypso card in the card reader.&lt;/li>
&lt;li>Run the application.&lt;/li>
&lt;/ol>
&lt;div class="alert alert-note">
&lt;div>
All project dependencies, including Keyple
components, are downloaded during the first run, which can take some
time.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;h4 id="how-do-i-find-out-the-names-of-the-readers">How do I find out the names of the readers?&lt;/h4>
&lt;p>To find out the names of the readers connected to your computer, we will
use Keyple with the following class which prints in the console the
number and names of the readers present:&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.Plugin&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.SmartCardService&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.plugin.pcsc.PcscPluginFactoryBuilder&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.util.Set&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ReaderDiscovery&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscPluginFactoryBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Set&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">names&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderNames&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">names&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; readers found.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">names&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sc">&amp;#39;&amp;#34;&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sc">&amp;#39;&amp;#34;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>The console output should look something like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">2 readers found.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;ASK LoGO 0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;Identive CLOUD 2700 R Smart Card Reader 0&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Identify which reader will be the card (contactless) reader and the SAM
(contact) reader and replace &lt;code>CARD_READER_NAME&lt;/code> and
&lt;code>SAM_READER_NAME&lt;/code> with their values.&lt;/p>
&lt;h4 id="how-to-activate-the-keyples-logs">How to activate the Keyple&amp;rsquo;s logs?&lt;/h4>
&lt;p>As soon as the &lt;code>slf4j&lt;/code> library is imported into the project, Keyple
modules are able to produce logs.
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Import logger libs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.slf4j:slf4j-api:1.7.32&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.slf4j:slf4j-simple:1.7.32&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>However, to take full advantage of the possibilities of this library, it
is necessary to create a &lt;code>simplelogger.properties&lt;/code> file in the
&lt;code>/src/main/resources&lt;/code> folder of the project.&lt;/p>
&lt;p>The self-documented content of this file may be:&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># SLF4J&amp;#39;s SimpleLogger configuration file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Simple implementation of Logger that sends all enabled log messages, for all defined loggers, to System.err.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Default logging detail level for all instances of SimpleLogger.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Must be one of (&amp;#34;trace&amp;#34;, &amp;#34;debug&amp;#34;, &amp;#34;info&amp;#34;, &amp;#34;warn&amp;#34;, or &amp;#34;error&amp;#34;).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If not specified, defaults to &amp;#34;info&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.slf4j.simpleLogger.defaultLogLevel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">debug&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Logging detail level for a SimpleLogger instance named &amp;#34;xxxxx&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Must be one of (&amp;#34;trace&amp;#34;, &amp;#34;debug&amp;#34;, &amp;#34;info&amp;#34;, &amp;#34;warn&amp;#34;, or &amp;#34;error&amp;#34;).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If not specified, the default logging detail level is used.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#org.slf4j.simpleLogger.log.xxxxx=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set to true if you want the current date and time to be included in output messages.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Default is false, and will output the number of milliseconds elapsed since startup.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.slf4j.simpleLogger.showDateTime&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The date and time format to be used in the output messages.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The pattern describing the date and time format is the same that is used in java.text.SimpleDateFormat.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If the format is not specified or is invalid, the default format is used.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The default format is yyyy-MM-dd HH:mm:ss:SSS Z.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.slf4j.simpleLogger.dateTimeFormat&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">[HH:mm:ss:SSS]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set to true if you want to output the current thread name.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Defaults to true.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.slf4j.simpleLogger.showThreadName&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set to true if you want the Logger instance name to be included in output messages.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Defaults to true.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.slf4j.simpleLogger.showLogName&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set to true if you want the last component of the name to be included in output messages.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Defaults to false.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.slf4j.simpleLogger.showShortLogName&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.slf4j.simpleLogger.levelInBrackets&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">true&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="why-do-i-see-a-warning-in-the-console-about-illegal-reflexive-access">Why do I see a warning in the console about illegal reflexive access&lt;/h4>
&lt;p>when running the application?&lt;/p>
&lt;p>A known problem on Windows 8/10 platforms causes the smartcard service
to stop when the last reader is removed. This problem prevents a
&amp;ldquo;classic&amp;rdquo; monitoring of connections and disconnections of readers with
the smartcard.io library (Java PC/SC). So for the moment we are using a
workaround based on reflexivity to overcome this problem and allow a
correct monitoring of the readers in the PC/SC plugin. This has the
disadvantage of generating a warning message with recent versions of the
JVM. However, we have not found any problems with this implementation of
the PC/SC plugin so far.&lt;/p>
&lt;h4 id="full-code">Full code&lt;/h4>
&lt;p>Here is the complete code of this quick start in one single block.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.card.calypso.CalypsoExtensionService&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.card.calypso.crypto.legacysam.LegacySamExtensionService&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.Plugin&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.SmartCardService&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.SmartCardServiceProvider&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.plugin.pcsc.PcscPluginFactoryBuilder&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.plugin.pcsc.PcscReader&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.CalypsoCardApiFactory&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.WriteAccessLevel&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.card.CalypsoCard&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.card.CalypsoCardSelectionExtension&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.transaction.ChannelControl&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.transaction.SecureRegularModeTransactionManager&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.card.transaction.SymmetricCryptoSecuritySetting&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.crypto.legacysam.LegacySamApiFactory&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.calypso.crypto.legacysam.sam.LegacySam&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.reader.CardReader&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.reader.ReaderApiFactory&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keypop.reader.selection.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DemoCardAuthentication&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// The names of the readers must be adapted to the actual configuration.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_READER_NAME&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;ASK LoGO 0&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SAM_READER_NAME&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Identive CLOUD 2700 R Smart Card Reader 0&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;315449432E49434131&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Keyple test kit profile 1, Application 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SFI_ENVIRONMENT_AND_HOLDER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0x07&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get the instance of the SmartCardService&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get the ReaderApiFactory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ReaderApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderApiFactory&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Register the PcscPlugin with the SmartCardService, get a generic plugin instance in return&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscPluginFactoryBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get and set up the card reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CARD_READER_NAME&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Card reader &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_READER_NAME&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; not found.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Set the card reader type (for ratification management purpose)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_READER_NAME&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">setContactless&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isCardPresent&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;No card is present in the reader &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get and set up the SAM reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SAM_READER_NAME&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SAM reader &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SAM_READER_NAME&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; not found.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isCardPresent&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;No SAM is present in the reader &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get the Calypso card extension service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Verify that the extension&amp;#39;s API level is consistent with the current service.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">checkCardExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a SAM selection manager.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a card selector without filer&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">BasicCardSelector&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samCardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createBasicCardSelector&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">legacySamApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getLegacySamApiFactory&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a SAM selection using the Calypso card extension.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">samCardSelector&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">legacySamApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createLegacySamSelectionExtension&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LegacySam&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The SAM selection failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Retrieve the CalypsoCardApiFactory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoCardApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getCalypsoCardApiFactory&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Select the card&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a generic ISO selector&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">IsoCardSelector&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createIsoCardSelector&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">filterByDfName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a specific Calypso card selection extension&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoCardSelectionExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardSelectionExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCalypsoCardSelectionExtension&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">acceptInvalidatedCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Prepare the card selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardSelector&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardSelectionExtension&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Process the card selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The selection of the application &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoCard&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Prepare the security settings used during the Calypso transaction&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SymmetricCryptoSecuritySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">symmetricCryptoSecuritySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSymmetricCryptoSecuritySetting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getLegacySamApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSymmetricCryptoCardTransactionManagerFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Performs file reads using the card transaction manager in a secure session, keep the channel&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// open.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SecureRegularModeTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardApiFactory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSecureRegularModeTransactionManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">symmetricCryptoSecuritySetting&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareOpenSecureSession&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WriteAccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">DEBIT&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareReadRecord&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_ENVIRONMENT_AND_HOLDER&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCommands&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ChannelControl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">KEEP_OPEN&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;= #### FILE CONTENT = &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_ENVIRONMENT_AND_HOLDER&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Close the secure session, close the channel.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareCloseSecureSession&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">processCommands&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ChannelControl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CLOSE_AFTER&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;= #### The Secure Session ended successfully, the card is authenticated and the data read are certified.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= #### End of the Calypso card processing.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Unregister the plugin before leaving the application&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unregisterPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>The Keyple key concepts</title><link>https://keyple.org/learn/overview/key-concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/overview/key-concepts/</guid><description>&lt;br>
&lt;p>This page describes the core elements of Keyple, i.e. the concepts and APIs that are used to build any application implementing Keyple.&lt;/p>
&lt;p>It is essential for the future user of Keyple to be familiar with what is said in this chapter.&lt;/p>
&lt;br>
&lt;h2 id="reader">Reader&lt;/h2>
&lt;p>Keyple&amp;rsquo;s primary goal being to interact with smart cards (or smartphones) held by individuals, it is logical to put the Reader at the top of Keyple&amp;rsquo;s concepts.&lt;/p>
&lt;p>Indeed, it is through the reader interfaces that all interactions with the smart cards will take place, either directly via the Keyple Service or using a card extension (such as Keyple Calypso card extension add-on for example).&lt;/p>
&lt;p>These interfaces provide the means to&lt;/p>
&lt;ul>
&lt;li>identify the underlying physical reader,&lt;/li>
&lt;li>manage communication protocols,&lt;/li>
&lt;li>detect the presence and communicate with smart cards.&lt;/li>
&lt;/ul>
&lt;p>The reader concept also applies to the hardware interfaces used to communicate with security elements such as SAMs (Secure Access Modules),
which are sometimes integrated into devices and the virtual interfaces represented by the remote implementations.&lt;/p>
&lt;p>To define the interface between an application and a reader,
Keyple relies on the &lt;a href="https://keypop.org/apis/reader-layer/reader-api/" target="_blank" rel="noopener">Keypop Reader API&lt;/a> based on the standard Terminal API specifications proposed by Calypso Networks Association and thus inherits an existing modeling effort.&lt;/p>
&lt;p>Another benefit of using this terminal API is the ability to certify the functioning of a Keyple terminal via the associated certification process.&lt;/p>
&lt;p>This certification provides a guarantee that the terminal will function as expected.&lt;/p>
&lt;br>
&lt;h2 id="plugin">Plugin&lt;/h2>
&lt;p>In Keyple terminology, a plugin is an add-on that allows the management of readers of a certain type.
The plugin is responsible for informing the application about the availability of readers.
The readers of the same plugin are usually hardware linked to the same physical interface.&lt;/p>
&lt;p>Depending on its profile, an application may use different types of plugins to communicate with the different elements it needs (card, SAM).&lt;/p>
&lt;br>
&lt;h2 id="card-extension">Card extension&lt;/h2>
&lt;p>A card extension is an add-on that provides high-level access to the features of a particular card technology.&lt;/p>
&lt;p>Two card extensions are provided natively by the Keyple project:&lt;/p>
&lt;ul>
&lt;li>a generic card extension providing basic means to communicate with a card,&lt;/li>
&lt;li>a Calypso card extension providing high-level access to Calypso card features. It includes a Secure Session based transaction manager involving Calypso cards and SAMs.&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="smart-card-service">Smart card service&lt;/h2>
&lt;p>This is the main service of Keyple that concentrates the knowledge of active plugins and readers and provides card selection managers.&lt;/p>
&lt;p>At startup, a Keyple application must register the add-ons (plugins and card extensions) it uses.&lt;/p>
&lt;br>
&lt;h2 id="observation">Observation&lt;/h2>
&lt;p>The concept of observation applies to certain types of readers and plugins.&lt;/p>
&lt;p>It consists in monitoring changes such as reader connection/disconnection or card insertion/removal and informing the observing application through a dedicated interface.&lt;/p>
&lt;p>Not all plugins and readers are observable and for those which are, the observation is optional.&lt;/p>
&lt;br>
&lt;h2 id="selection">Selection&lt;/h2>
&lt;p>The Keyple &lt;strong>selection&lt;/strong> concept is derived from the application selection defined by the ISO7816-4 standard.&lt;/p>
&lt;p>It supplements it by managing cards that do not have the standard command using identification mechanisms based on power-on data and communication protocol,
and also by allowing the execution of commands immediately following application selection or detection.&lt;/p>
&lt;p>This principle optimizes the processing by allowing the application to elaborate advanced card discovery requests.&lt;/p>
&lt;p>Several targets can be defined by the application according to the different customer cards expected within a selection scenario.&lt;/p>
&lt;p>The &lt;strong>selection scenario&lt;/strong> principle consists in providing a set of selection cases corresponding to the expected cards and receiving a selection result containing not only the card identification but also the result of all additional commands that the application will have attached.&lt;/p>
&lt;p>The Keyple card selection process is generic, allowing the management of cards of different types or technologies within the same application.&lt;/p>
&lt;br>
&lt;h2 id="smart-card">Smart card&lt;/h2>
&lt;p>The Keyple &lt;strong>smart card&lt;/strong> is an object representation of the physical card.&lt;/p>
&lt;p>It is built by the specific card extension used (e.g. Keyple Calypso) and is provided to the user by the card selection service.&lt;/p>
&lt;br>
&lt;h2 id="protocol">Protocol&lt;/h2>
&lt;p>At the time of selection, Keyple offers the possibility to distinguish cards by their communication &lt;strong>protocol&lt;/strong>.&lt;/p>
&lt;p>In order to associate a type of &lt;strong>protocol&lt;/strong> (or card technology), Keyple proposes the concept of configurable reader with a method allowing to associate a &lt;strong>protocol&lt;/strong> identifier known by the reader (name of the physical &lt;strong>protocol&lt;/strong>) and another one known by the application (name of the logical &lt;strong>protocol&lt;/strong>).&lt;/p>
&lt;p>A configurable reader plugin is responsible for providing a means of identifying the &lt;strong>protocol&lt;/strong> and names each &lt;strong>protocol&lt;/strong> it supports.&lt;/p></description></item><item><title>Reader Plugin Add-on Developer Guide</title><link>https://keyple.org/learn/developer-guide/reader-plugin-add-on/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/developer-guide/reader-plugin-add-on/</guid><description>&lt;br>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This guide is intended to help developers who want to create a Keyple reader plugin add-on for a specific device.&lt;/p>
&lt;br>
&lt;h2 id="operating-mode">Operating mode&lt;/h2>
&lt;ol>
&lt;li>Learn the &lt;a href="#plugin-architecture">plugin architecture&lt;/a> concepts&lt;/li>
&lt;li>&lt;a href="#select-predefined-features">Select the predefined features&lt;/a> that meet your need&lt;/li>
&lt;li>&lt;a href="#define-specific-features">Define specific features&lt;/a> (optional)&lt;/li>
&lt;li>&lt;a href="#set-up-dev-environment">Set up the development environment&lt;/a>&lt;/li>
&lt;li>&lt;a href="#implement-the-solution">Implement the solution&lt;/a>&lt;/li>
&lt;/ol>
&lt;br>
&lt;h2 id="plugin-architecture">Plugin architecture&lt;/h2>
&lt;p>A Keyple reader plugin consists of three objects, a &lt;strong>plugin factory&lt;/strong>, a &lt;strong>plugin&lt;/strong> and a &lt;strong>reader&lt;/strong>, which meet the following two interface specifications:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Common API&lt;/strong>: public contract containing only generic types common to all plugins.&lt;/li>
&lt;li>&lt;strong>Plugin API&lt;/strong>: private contract based on two types of interfaces:
&lt;ul>
&lt;li>&lt;strong>API&lt;/strong> (Application Programming Interface): interface implemented by Keyple Service and directly usable by the plugin code.&lt;/li>
&lt;li>&lt;strong>SPI&lt;/strong> (Service Provider Interface): interface to be implemented by the plugin and directly used by Keyple Service.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>The component diagram below illustrates the internal API/SPI links between the plugin and Keyple Service, as well as the public APIs exposed to the application:
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/developer-guide/component-dependencies/plugin_api.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;br>
&lt;h2 id="select-predefined-features">Select predefined features&lt;/h2>
&lt;p>The diagram below helps you to determine exactly which interfaces to implement according to the characteristics of the reader:
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/developer-guide/design-guides/reader_plugin_activity_diagram.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>XxxPluginFactory&lt;/code>, &lt;code>XxxPlugin&lt;/code> and &lt;code>XxxReader&lt;/code> interfaces must be created.
They are specific to the plugin &lt;code>Xxx&lt;/code> to be created but can remain empty if there is no specific feature.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="define-specific-features">Define specific features&lt;/h2>
&lt;p>Depending on the characteristics of the reader, it may be necessary to add in the specific APIs configuration methods appropriate to the technical context.&lt;/p>
&lt;p>These features can be exposed at three levels:&lt;/p>
&lt;ul>
&lt;li>In the &lt;strong>plugin factory&lt;/strong> (&lt;code>XxxPluginFactory&lt;/code> interface), for the initial configuration of the plugin (e.g. set custom plugin name).&lt;/li>
&lt;li>In the &lt;strong>plugin&lt;/strong> (&lt;code>XxxPlugin&lt;/code> interface), for dynamic configurations that can be applied to all the readers (e.g. put the readers in sleep mode).&lt;br>
The API will then be directly accessible from the application through the &lt;code>getExtension(...)&lt;/code> method of the plugin registered with Keyple Service.&lt;/li>
&lt;li>In the &lt;strong>reader&lt;/strong> (&lt;code>XxxReader&lt;/code> interface), for dynamic configurations specific to each reader (e.g. activate/deactivate a LED).&lt;br>
The API will then be directly accessible from the application through the &lt;code>getReaderExtension(...)&lt;/code> method of the reader provided by the plugin registered with Keyple Service.&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="set-up-dev-environment">Set up dev environment&lt;/h2>
&lt;div class="alert alert-warning">
&lt;div>
For Java and Android projects, the code should be compliant with &lt;strong>Java 1.6&lt;/strong> in order to address a wide range of applications.
&lt;/div>
&lt;/div>
&lt;p>If the reader plugin add-on is to be integrated into the Eclipse Keyple® project, it must use one of the following project templates:&lt;/p>
&lt;dl>
&lt;dt>&lt;a href="./media/project-templates/java/keyple-plugin-[READER_PLUGIN_NAME]-java-lib.zip" target="_blank">Java template&lt;/a>&lt;/dt>
&lt;dd>adapt fields &lt;code>[READER_PLUGIN_NAME]&lt;/code>, &lt;code>Xxx&lt;/code>, &lt;code>xxx&lt;/code>, &lt;code>TODO&lt;/code>&lt;/dd>
&lt;dt>&lt;a href="./media/project-templates/android/keyple-plugin-[ANDROID_READER_PLUGIN_NAME]-java-lib.zip" target="_blank">Android template&lt;/a>&lt;/dt>
&lt;dd>adapt fields &lt;code>[ANDROID_READER_PLUGIN_NAME]&lt;/code>, &lt;code>Xxx&lt;/code>, &lt;code>xxx&lt;/code>, &lt;code>TODO&lt;/code>&lt;/dd>
&lt;/dl>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>Before pushing the project to GitHub the first time, you must give write permission to some scripts files via the following commands:&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">git update-index --chmod&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">+x &amp;#34;gradlew&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">git update-index --chmod&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">+x &amp;#34;scripts/check_version.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">git update-index --chmod&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">+x &amp;#34;scripts/prepare_javadoc.sh&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>If examples are proposed, they should be placed in the &lt;a href="https://github.com/eclipse-keyple/keyple-java-example" target="_blank" rel="noopener">keyple-java-example&lt;/a> repository.&lt;/p>
&lt;p>The contribution procedure is described &lt;a href="./community/contributing/">here&lt;/a>.&lt;/p>
&lt;br>
&lt;h2 id="implement-the-solution">Implement the solution&lt;/h2>
&lt;div class="alert alert-warning">
&lt;div>
It is important to hide the internal Keyple interfaces of the &lt;strong>Plugin API&lt;/strong> from the application.
&lt;/div>
&lt;/div>
&lt;p>For this purpose, it is suggested to respect the following programming pattern based on the use of:&lt;/p>
&lt;ul>
&lt;li>public interfaces,&lt;/li>
&lt;li>private interfaces adapters (package visibility) accessible from a public provider/builder.
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/developer-guide/design-guides/reader_plugin_class_diagram.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;/ul>
&lt;div class="alert alert-note">
&lt;div>
It is possible to use other alternatives to the factory provider depending on the need.
For example, if the plugin factory needs to expose specific configuration methods, it is recommended to use the builder pattern instead of the provider pattern in order to get a properly initialized factory.
Thus, the factory does not expose any method.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="api">API&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-common-java-api" target="_blank" rel="noopener">Keyple Common API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-plugin-java-api" target="_blank" rel="noopener">Keyple Plugin API&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="download">Download&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/components/overview/configuration-wizard/">Java components&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Standalone Application User Guide</title><link>https://keyple.org/learn/user-guide/standalone-application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/user-guide/standalone-application/</guid><description>&lt;br>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>A standalone application is an application that runs in a device in contact
with the end user.&lt;/p>
&lt;p>It has at least one local smart card reader and manages itself the
interaction with the user.&lt;/p>
&lt;p>The diagram below illustrates the organization of a standalone application based on Keyple:
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/standalone-application/standalone_application_overview.drawio.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;br>
&lt;h2 id="operating-mode">Operating mode&lt;/h2>
&lt;div class="alert alert-warning">
&lt;div>
If you are new to Keyple, read the &lt;a href="./learn/overview/key-concepts/">key concepts&lt;/a> page and familiarize yourself with the fundamentals behind Keyple.
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>Access to the &lt;a href="#the-smart-card-service">smart card service&lt;/a>&lt;/li>
&lt;li>&lt;a href="#set-up-a-plugin">Set up a plugin&lt;/a>&lt;/li>
&lt;li>&lt;a href="#set-up-a-reader">Set up a reader&lt;/a>&lt;/li>
&lt;li>&lt;a href="#select-a-card">Select a card&lt;/a>&lt;/li>
&lt;li>&lt;a href="#perform-a-transaction">Perform a transaction&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="the-smart-card-service">The smart card service&lt;/h2>
&lt;p>As part of Keyple Service component, the smart card service is the main service of Keyple. Its role is to centralize the add-on resources and to manage their
life cycle.&lt;/p>
&lt;p>The service is accessible by calling the &lt;code>SmartCardServiceProvider.getService()&lt;/code> static method.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">SmartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="set-up-a-plugin">Set up a plugin&lt;/h2>
&lt;p>The Keyple application developer will choose the reader plugins he needs
according to the equipment on which the Keyple application will run.&lt;/p>
&lt;p>For example, if the environment is PC-based, the PC/SC plugin will probably, but not necessarily, be chosen.
For an Andoid terminal environment, the plugin could be the standard
Android NFC plugin or one of the plugins available from the industrial
partners of the project.&lt;/p>
&lt;p>For a complete list of available plugins, please see
the &lt;a href="https://keyple.org/components/standard-reader-plugins/">standard reader plugins&lt;/a>,
the &lt;a href="https://keyple.org/components/specific-reader-plugins/">specific reader plugins&lt;/a>
or one of our &lt;a href="https://keyple.org/external-resources/">partners reader plugins&lt;/a>.&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
A new plugin can also be &lt;a href="./learn/developer-guide/reader-plugin-add-on/">created&lt;/a> if there is no plugin for the intended hardware.
&lt;/div>
&lt;/div>
&lt;h3 id="access-to-a-plugin">Access to a plugin&lt;/h3>
&lt;p>To access a plugin at the application level, it must first be registered with the smart card service via the &lt;code>registerPlugin(...)&lt;/code> method.
It will be necessary to provide an implementation of the &lt;code>KeyplePluginExtensionFactory&lt;/code> interface.
This factory is provided by the API of the used plugin.&lt;/p>
&lt;p>Depending on the capabilities of the hardware, the plugin factory may or may not offer specific configuration options.
Please refer to the API of the plugin component you are considering to see what is appropriate for your application.&lt;/p>
&lt;p>The registration provides in return an implementation of one of the &lt;code>Plugin&lt;/code>, &lt;code>ObservablePlugin&lt;/code> or &lt;code>PoolPlugin&lt;/code> interfaces depending on the type of target plugin.&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
A plugin is identified by a unique name in the system so that it can be retrieved at any time from the smart card service.
&lt;/div>
&lt;/div>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Here is for example the registration of the PC/SC plugin&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscPluginFactoryBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="configure-a-plugin">Configure a plugin&lt;/h3>
&lt;p>Some plugin types may offer specific options.&lt;/p>
&lt;p>Static options are usually directly exposed by the plugin factory API while dynamic options are exposed by the plugin extension API.&lt;/p>
&lt;p>To access the plugin extension it is necessary to call the &lt;code>getExtension(...)&lt;/code> method on the registered &lt;code>Plugin&lt;/code> by specifying the expected class of the extension which must extends the &lt;code>KeyplePluginExtension&lt;/code> interface.
After that, the dedicated methods are available from the resulting object.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Here is a snippet showing the usage of the extension of the Stub plugin&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">StubPlugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unplugReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="monitor-a-plugin">Monitor a plugin&lt;/h3>
&lt;div class="alert alert-warning">
&lt;div>
The plugin monitoring only applies to hardware environments in which the readers are removable.
Moreover, only plugins of type &lt;code>ObservablePlugin&lt;/code> can be monitored.
&lt;/div>
&lt;/div>
&lt;p>The observation of reader connections and disconnections is achieved
through a background task managed by Keyple Service.&lt;/p>
&lt;p>To enable these observation mechanisms, it is imperative to provide:&lt;/p>
&lt;ul>
&lt;li>a plugin observer implementing the &lt;code>PluginObserverSpi&lt;/code> interface to be notified of plugin events,&lt;/li>
&lt;li>an exception handler implementing the &lt;code>PluginObservationExceptionHandlerSpi&lt;/code> interface to be notified of errors that may occur during the monitoring or events notifications.&lt;/li>
&lt;/ul>
&lt;p>These two interfaces are available in the &lt;code>org.eclipse.keyple.core.service.spi&lt;/code> package of the Keyple Service component.&lt;/p>
&lt;p>Here is an example of a plugin observer class including an exception handler:&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">PluginObserver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PluginObserverSpi&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PluginObservationExceptionHandlerSpi&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">onPluginEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PluginEvent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">switch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getEventType&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">READER_CONNECTED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// here the processing to be done when a reader is connected&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">READER_DISCONNECTED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// here the processing to be done when a reader is disconnected&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">onPluginObservationError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pluginName&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// handle here the plugin exceptions raised while observing the readers&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>In order to access the dedicated setters, the plugin has to be cast to &lt;code>ObservablePlugin&lt;/code>.&lt;/p>
&lt;p>Since adding an observer will cause the Keyple Service to check for the presence of an exception handler,
the definition of the exception handler must be done first.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">PluginObserver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pluginObserver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PluginObserver&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservablePlugin&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">setPluginObservationExceptionHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pluginObserver&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservablePlugin&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pluginObserver&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
Note that the monitoring thread only works if there is at least one observer registered, and the notification process is sequential and synchronous.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="set-up-a-reader">Set up a reader&lt;/h2>
&lt;p>The readers are provided by the plugins, that&amp;rsquo;s why you have to &lt;a href="#set-up-a-plugin">set up the plugin&lt;/a> first.&lt;/p>
&lt;h3 id="access-to-a-reader">Access to a reader&lt;/h3>
&lt;p>The hardware readers already connected are referenced in the system during the registration of the plugin.
For observable plugins, the references of the connected readers are updated in real time.&lt;/p>
&lt;p>Readers are accessible directly from the associated &lt;code>Plugin&lt;/code> instance.&lt;/p>
&lt;p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Here is an example to get the 1st available reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerName&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderNames&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">readerName&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
Depending on the type of plugin, the reader names are
more or less dynamic (e.g. a PC/SC based system vs. an embedded
terminal), it is sometimes necessary to implement an identification
mechanism in order to assign the right reader to the right place in the
system (for example by using regular expressions).
&lt;/div>
&lt;/div>
&lt;h3 id="configure-a-reader">Configure a reader&lt;/h3>
&lt;p>There are two types of configuration. Their availability depends on the characteristics of the reader:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The reader is an instance of &lt;code>ConfigurableCardReader&lt;/code>:&lt;br>
It is then possible to activate or deactivate the protocols supported by the reader.&lt;/p>
&lt;div class="alert alert-note">&lt;div>Use of these methods may be optional if the application does not intend to target products by protocol filtering.&lt;/div>&lt;/div>
&lt;/li>
&lt;li>
&lt;p>The reader&amp;rsquo;s extension API exposes specific options:&lt;br>
To access the reader extension it is necessary to call the &lt;code>getReaderExtension(...)&lt;/code> method on the &lt;code>Plugin&lt;/code> instance by specifying the expected class of the extension (which must extends the &lt;code>KeypleReaderExtension&lt;/code> interface) and the reader&amp;rsquo;s name.
After that, the dedicated methods, if any, are available from the resulting object.
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Here is a snippet showing how to get and use the extension of the Stub reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">StubReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerName&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">removeCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="monitor-a-reader">Monitor a reader&lt;/h3>
&lt;div class="alert alert-warning">
&lt;div>
The reader monitoring only applies to hardware environments in which the smart cards are removable.
Moreover, only readers of type &lt;code>ObservableCardReader&lt;/code> can be monitored.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
Observation of the readers is optional in Keyple. It facilitates an event-driven programming mode, but an application
developer can choose not to observe a reader, either because this reader is not designed to manage card insertions/withdrawals (for example an
Android OMAPI reader or a SAM reader), or because the application is designed to directly manage the presence of a card (see to &lt;code>isCardPresent&lt;/code> method of the
&lt;code>CardReader&lt;/code> interface).
&lt;/div>
&lt;/div>
&lt;p>The observation of card insertions and removals is achieved
through a background task managed by Keyple Service.&lt;/p>
&lt;p>To enable these observation mechanisms, it is imperative to provide:&lt;/p>
&lt;ul>
&lt;li>a reader observer implementing the &lt;code>CardReaderObserverSpi&lt;/code> interface to be notified of reader events,&lt;/li>
&lt;li>an exception handler implementing the &lt;code>CardReaderObservationExceptionHandlerSpi&lt;/code> interface to be notified of errors that may occur during the monitoring or events notifications.&lt;/li>
&lt;/ul>
&lt;p>These two interfaces are available in the &lt;code>org.eclipse.keypop.reader.spi&lt;/code> package of the &lt;strong>Keypop Reader API&lt;/strong> component.&lt;/p>
&lt;p>Here is an example of a reader observer class including an exception handler:&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">ReaderObserver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardReaderObserverSpi&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardReaderObservationExceptionHandlerSpi&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">onReaderEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardReaderEvent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">switch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getType&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardReaderEvent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Type&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CARD_INSERTED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// here the processing to be done when a card is inserted&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardReaderEvent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Type&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CARD_REMOVED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// here the processing to be done when a card is removed&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">onReaderObservationError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pluginName&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerName&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// handle here the reader exceptions raised while observing the cards&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>In order to access the dedicated setters, the reader has to be cast to &lt;code>ObservableCardReader&lt;/code>.&lt;/p>
&lt;p>Since adding an observer will cause the Keyple Service to check for the presence of an exception handler,
the definition of the exception handler must be done first.&lt;/p>
&lt;p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ReaderObserver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerObserver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ReaderObserver&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">setReaderObservationExceptionHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">readerObserver&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">readerObserver&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">startCardDetection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">DetectionMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">REPEATING&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
Note that the &lt;code>startCardDetection(...)&lt;/code> and &lt;code>stopCardDetection()&lt;/code> methods start and stop the monitoring thread.
The API offers different options to manage the needs around card detection.&lt;br>
Moreover, the notification process is sequential and synchronous.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="select-a-card">Select a card&lt;/h2>
&lt;p>The starting point of any processing done with a card in the Keyple environment, is to reference this card in the system.
It is the role of the selection step to obtain this reference.&lt;/p>
&lt;p>You have first to prepare a selection scenario defining the eligible cards for a transaction, then to execute the scenario when a card is present.&lt;/p>
&lt;h3 id="prepare-a-scenario">Prepare a scenario&lt;/h3>
&lt;p>To prepare a scenario, you have to get a new instance of &lt;code>CardSelectionManager&lt;/code> from the smart card service using the
&lt;code>getReaderApiFactory().createCardSelectionManager()&lt;/code> method,
then configure it with scenario cases using dedicated methods provided by one or more card extensions.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderApiFactory&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>The &lt;code>prepareSelection(...)&lt;/code> method allows to add a selection case to the scenario by providing a specific &lt;code>CardSelector&lt;/code>
and an implementation of the &lt;code>CardSelectionExtension&lt;/code> interface.
The method will return the index of the added case in order to be able to identify later the case that matched.&lt;/p>
&lt;p>Please note that the order of addition is important because it will impact the selection cycle and favor the performance
of the first added cases.&lt;/p>
&lt;p>Providing one or more selection cases to the &lt;code>CardSelectionManager&lt;/code> constitutes a selection scenario.
The scenario is run by Keyple Service when a card is detected, the different cases being evaluated
sequentially as long as the card does not match the criteria of the defined cases.&lt;/p>
&lt;p>The selection process for a case offers several options for selecting a processing based on the type of card presented
to the reader.&lt;/p>
&lt;p>It is based on a filtering process according to three possible criteria, each of which is optional:&lt;/p>
&lt;ul>
&lt;li>the communication protocol of the card (usually also identifying a card technology),&lt;/li>
&lt;li>the power-on data collected by the reader when the card is detected (e.g. the Answer To Reset),&lt;/li>
&lt;li>the ISO standard application identifier (AID) used to perform a Select Application command.&lt;/li>
&lt;/ul>
&lt;p>When a card is inserted, it is evaluated according to these criteria and will be given the status &amp;ldquo;selected&amp;rdquo; or not.&lt;/p>
&lt;p>When a card is not selected, no other operation will be possible with it.&lt;/p>
&lt;p>The same card could correspond to several cases of the same scenario, especially when filtering by AID.
By default, the selection process will stop at the first case that matches.
It is however possible to choose another strategy using the &lt;code>setMultipleSelectionMode()&lt;/code> method.
In this case, the process will continue to the last selection case in the scenario and return all results,
but only the last matching application will be selected.&lt;/p>
&lt;p>When a card is selected, the &lt;code>CardSelectionManager&lt;/code> will make available the result
as a &lt;code>SmartCard&lt;/code> (or &lt;code>IsoSmartCard&lt;/code> if an &lt;code>IsoCardSelector&lt;/code> is used) containing all the information known about the
card at that stage.&lt;/p>
&lt;p>Depending on the card extension that is used, this &lt;code>SmartCard&lt;/code> object can be cast to a more
comprehensive object with specific features defined by the extension.&lt;/p>
&lt;p>In addition to the selection process itself, specific APDU commands may be sent to the card if the selection is
successful.
The output of these commands is available in the instance of the &lt;code>SmartCard&lt;/code> object.&lt;/p>
&lt;p>The following snippet shows the preparation of two selection cases using the generic card extension:
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// prepare a selection for application 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">firstCaseIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createIsoCardSelector&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterByDfName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID1&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">GenericExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createGenericCardSelectionExtension&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// prepare a selection for application 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">secondCaseIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createIsoCardSelector&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterByDfName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID2&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">GenericExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createGenericCardSelectionExtension&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h3 id="run-a-scenario">Run a scenario&lt;/h3>
&lt;p>If we know that the card is in the reader it is possible to run a selection scenario by calling the &lt;code>processCardSelectionScenario(...)&lt;/code> method on the corresponding reader.
The result of the selection is then directly returned.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Actual card communication: run the selection scenario.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Get the SmartCard resulting of the selection.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">SmartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Check the selection result.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">smartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The selection of the card failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="schedule-a-scenario">Schedule a scenario&lt;/h3>
&lt;p>If the reader is of type &lt;code>ObservableCardReader&lt;/code> then it is possible to schedule in advance the execution of a selection scenario as soon as a card is presented.&lt;/p>
&lt;p>Call the &lt;code>scheduleCardSelectionScenario(...)&lt;/code> method to register the previously prepared scenario in the observable reader.&lt;/p>
&lt;p>In this case, it is necessary to register a reader observer and to have started the card detection in order to be able to retrieve the result of the selection which will be contained in a &lt;code>CardReaderEvent&lt;/code>.&lt;/p>
&lt;p>Use the &lt;code>parseScheduledCardSelectionsResponse(...)&lt;/code> method to extract the selection result from the event.&lt;/p>
&lt;p>Note that the scheduling of the execution of a scenario includes the &lt;code>NotificationMode&lt;/code> option allowing to choose if
only the cards matching the selection (successfully selected) should trigger an event.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">onReaderEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardReaderEvent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">switch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getType&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardReaderEvent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Type&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CARD_MATCHED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Retrieve the selected smart card&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">parseScheduledCardSelectionsResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getScheduledCardSelectionsResponse&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Perform the transaction&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Ensures that the communication channel is closed, regardless of the processing with the card.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="na">finalizeCardProcessing&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">...&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;div class="alert alert-note">
&lt;div>
&lt;p>The &lt;code>finalizeCardProcessing()&lt;/code> method must be called at the end of the transaction to ensure that the communication
channel is closed.
This switches the underlying monitoring thread into a state of waiting for the card to be removed.&lt;/p>
&lt;p>Not doing this can lead to blocking states of the card insertion/removal monitoring mechanism.&lt;/p>
&lt;/div>
&lt;/div>
&lt;h3 id="importexport-a-scenario">Import/Export a scenario&lt;/h3>
&lt;p>In some cases, it may be useful or even necessary to be able to import/export a prepared or processed card selection
scenario.&lt;/p>
&lt;p>This feature is particularly useful and &lt;strong>strongly recommended&lt;/strong> for distributed applications with lightweight client
terminals (i.e. with no Keyple card extension installed locally).&lt;/p>
&lt;p>It increases performance by reducing the number of network exchanges,
as the selection scenario can be performed autonomously by the terminal as soon as a card is presented.&lt;/p>
&lt;p>Use &lt;code>exportCardSelectionScenario()&lt;/code> method to export the content of the current prepared card selection scenario as a
JSON string. The resulting string can be stored and later reloaded on the same or another card selection manager.&lt;/p>
&lt;p>Use &lt;code>importCardSelectionScenario(...)&lt;/code> method to import a previously exported card selection scenario.
The scenario can now be processed or scheduled on the card.&lt;/p>
&lt;p>Use &lt;code>exportProcessedCardSelectionScenario()&lt;/code> method to export a previously processed card selection scenario as a JSON
string. Please note that the resulting string can only be imported into the same or another card selection manager
using all the card extensions involved in the processed scenario.&lt;/p>
&lt;p>Use &lt;code>importProcessedCardSelectionScenario(...)&lt;/code> method to import a previously exported processed scenario and returns
the corresponding &lt;code>CardSelectionResult&lt;/code>.&lt;/p>
&lt;p>The diagram below summarizes the workflow:&lt;/p>
&lt;figure id="figure-importexport-card-selection-scenario---use-case-for-lightweight-client-terminals">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/standalone-application/Sequence_ImportExportScenario.svg" alt="Import/Export card selection scenario - Use case for lightweight client terminals" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Import/Export card selection scenario - Use case for lightweight client terminals
&lt;/figcaption>&lt;/figure>
&lt;div class="alert alert-note">
&lt;div>
&lt;p>&lt;strong>Important information regarding &lt;code>CardSelectionScenarioJsonString&lt;/code>!&lt;/strong>&lt;/p>
&lt;p>Keyple does not provide support for retrieving the export of the card selection scenario. It is up to
the client to define the most appropriate way to retrieve it, depending on the context.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;p>&lt;strong>Important information regarding &lt;code>ProcessedCardSelectionScenarioJsonString&lt;/code>!&lt;/strong>&lt;/p>
&lt;p>By mutual agreement with the server, the client may transmit the &lt;code>ProcessedCardSelectionScenarioJsonString&lt;/code> data when
calling the &amp;ldquo;Execute Remote Service&amp;rdquo; function. This data can be included in either the &lt;code>initialCardContent&lt;/code> or
&lt;code>inputData&lt;/code> field.&lt;/p>
&lt;p>In both cases, it must be encapsulated within an object recognized by the server.&lt;/p>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="perform-a-transaction">Perform a transaction&lt;/h2>
&lt;p>Once the smart card is referenced in the system it is possible to perform the desired transaction using the appropriate
card extension.&lt;/p>
&lt;p>When the transaction is completed, if the reader is observed, it is imperative to call the &lt;code>finalizeCardProcessing()&lt;/code>
method on the observable reader (see the above note).&lt;/p>
&lt;br>
&lt;h2 id="unregister-a-plugin">Unregister a plugin&lt;/h2>
&lt;p>To shut down a Keyple application properly, it is necessary to free the resources and in particular to close opened card
physical channels and stop the observation threads.&lt;/p>
&lt;p>This is done by unregistering the plugins in the following way:&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unregisterPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="api">API&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keypop.org/apis/reader-layer/reader-api/" target="_blank" rel="noopener">Keypop Reader API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-common-java-api" target="_blank" rel="noopener">Keyple Common API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-service-java-lib" target="_blank" rel="noopener">Keyple Service API&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/eclipse-keyple/keyple-java-example" target="_blank" rel="noopener">Java examples&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="download">Download&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/components/overview/configuration-wizard/">Java components&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Build your first Android application</title><link>https://keyple.org/learn/build-your-first-app/android-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/build-your-first-app/android-app/</guid><description>&lt;br>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The development of an Android application based on Keyple follows the same principles as those exposed in the Java part.&lt;/p>
&lt;p>However, this guide points out the specificities of this environment based on the &lt;strong>Android NFC application&lt;/strong> example provided in the &lt;a href="https://github.com/eclipse-keyple/keyple-java-example" target="_blank" rel="noopener">keyple-java-example&lt;/a> repository.&lt;/p>
&lt;p>We recommend that Android application developers clone this example to better understand how Keyple works on Android.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>The application available in the example repository requires:&lt;/p>
&lt;ul>
&lt;li>a retail Device with NFC powered by android.nfc library (integrated into standard Android SDK),&lt;/li>
&lt;li>Android OS 19+,&lt;/li>
&lt;li>a Calypso card (contactless smart card, NFC mobile phone with a Calypso applet or application).&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;p>It uses three main components of Keyple:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="./components/core/">Keyple Service Java Library&lt;/a>
which is the base component to which all the others refer,&lt;/li>
&lt;li>&lt;a href="./components/card-extensions/keyple-card-generic-lib/">Keyple Card Generic&lt;/a>
add-on to handle the commands sent to the Calypso card,&lt;/li>
&lt;li>&lt;a href="./components/standard-reader-plugins/keyple-plugin-android-nfc-lib/">Keyple Plugin Android NFC&lt;/a>
add-on to provide the ability to drive the NFC reader.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://gradle.org/" target="_blank" rel="noopener">Gradle&lt;/a> is used as build automation tool, but it is easy to transpose these explanations to another tool
such as Maven for example.&lt;/p>
&lt;br>
&lt;h2 id="project-setup">Project setup&lt;/h2>
&lt;p>The dependencies to be imported into the project are accessible with the &lt;a href="./components/overview/configuration-wizard/">configuration wizard&lt;/a>.&lt;/p>
&lt;p>Depending on the nature of the hardware resources required, it is necessary to declare certain permissions in the project manifest file.
In the case of the Android NFC example, access to NFC functions is declared as follows:
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;manifest&lt;/span> &lt;span class="na">xmlns:android=&lt;/span>&lt;span class="s">&amp;#34;http://schemas.android.com/apk/res/android&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uses-permission&lt;/span> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;android.permission.NFC&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uses-feature&lt;/span> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;android.hardware.nfc&amp;#34;&lt;/span> &lt;span class="na">android:required=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;application&lt;/span> &lt;span class="err">...&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;activity&lt;/span> &lt;span class="err">...&lt;/span> &lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;intent-filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;action&lt;/span> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;android.nfc.action.TECH_DISCOVERED&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/intent-filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;meta-data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;android.nfc.action.TECH_DISCOVERED&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:resource=&lt;/span>&lt;span class="s">&amp;#34;@xml/tech_list&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/activity&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/application&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/manifest&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>You will have to adapt this section according to the reader plugin used.&lt;/p>
&lt;br>
&lt;h2 id="focus-on-keyple-specific-code">Focus on Keyple specific code&lt;/h2>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MainActivity&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">AppCompatActivity&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">CardReaderObserverSpi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CardReaderObservationExceptionHandlerSpi&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">private&lt;/span> &lt;span class="k">lateinit&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="py">reader&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ObservableCardReader&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">private&lt;/span> &lt;span class="k">lateinit&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="py">cardSelectionManager&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">CardSelectionManager&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">private&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">readerApiFactory&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ReaderApiFactory&lt;/span> &lt;span class="p">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getService&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">readerApiFactory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">private&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="py">calypsoExtensionService&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nc">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getInstance&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">private&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">calypsoCardApiFactory&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">CalypsoCardApiFactory&lt;/span> &lt;span class="p">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getCalypsoCardApiFactory&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onCreate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">savedInstanceState&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Bundle&lt;/span>&lt;span class="p">?)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Retrieve the NFC reader
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">plugin&lt;/span> &lt;span class="p">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getService&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">AndroidNfcPluginFactoryProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">provideFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AndroidNfcConfig&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">AndroidNfcConstants&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">READER_NAME&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">ObservableCardReader&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setReaderObservationExceptionHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">reader&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">ConfigurableCardReader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">activateProtocol&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">AndroidNfcSupportedProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;ISODEP&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Configure the card selection
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">cardSelectionManager&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">createCardSelectionManager&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Create a generic ISO selector
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">cardSelector&lt;/span> &lt;span class="p">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">createIsoCardSelector&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">filterByDfName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">CalypsoConstants&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">KEYPLE_KIT_AID&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Create a specific Calypso card selection extension
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">calypsoCardSelectionExtension&lt;/span> &lt;span class="p">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">calypsoCardApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">createCalypsoCardSelectionExtension&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">acceptInvalidatedCard&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardSelector&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">calypsoCardSelectionExtension&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Start the card detection
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">scheduleCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">ObservableCardReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">NotificationMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ALWAYS&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">startCardDetection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">ObservableCardReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">DetectionMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">REPEATING&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onDestroy&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getService&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">unregisterPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">AndroidNfcConstants&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PLUGIN_NAME&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onReaderEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">readerEvent&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">CardReaderEvent&lt;/span>&lt;span class="p">?)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">CoroutineScope&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">Dispatchers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">launch&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">readerEvent&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">let&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">event&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">when&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">CardReaderEvent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">Type&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CARD_INSERTED&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// handle card inserted event
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">finalizeCardProcessing&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">CardReaderEvent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">Type&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CARD_MATCHED&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// handle card matched event
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">finalizeCardProcessing&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">CardReaderEvent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">Type&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CARD_REMOVED&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// handle card removed event
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Handle other event types if necessary
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onReaderObservationError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">contextInfo&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">?,&lt;/span> &lt;span class="n">readerName&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">?,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Throwable&lt;/span>&lt;span class="p">?)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Handle the error
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;h4 id="how-to-fix-_more-than-one-file-was-found-with-os-independent-path-meta-infnoticemd_">How to fix &amp;ldquo;&lt;em>More than one file was found with OS independent path &amp;lsquo;META-INF/NOTICE.md&amp;rsquo;&lt;/em>&amp;rdquo;.&lt;/h4>
&lt;p>Add lines below to your :app build.gradle file&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">android&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">packagingOptions&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exclude&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">META&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">INF&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nc">NOTICE&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">md&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Architecture</title><link>https://keyple.org/learn/overview/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/overview/architecture/</guid><description>&lt;br>
&lt;p>Keyple is designed to operate exchanges with secure data media such as smart cards, tags or smartphones.&lt;/p>
&lt;p>Keyple is as much as possible agnostic towards the secured media as towards the hardware allowing to communicate with them.&lt;/p>
&lt;p>In order to achieve these objectives Keyple consists of a central core to which can be attached add-ons providing solutions to the specific needs of the targeted application.
The core provides the basic services for registering add-ons and also provides generic interfaces independent of card and reader technologies.&lt;/p>
&lt;p>Add-ons are organized into four categories:&lt;/p>
&lt;ul>
&lt;li>Card extensions, offering high-level interfaces for managing exchanges between an application and a particular card technology.&lt;/li>
&lt;li>Reader plugins, which interface with the hardware through unified APIs.&lt;/li>
&lt;li>Distributed libraries to manage readers remotely.&lt;/li>
&lt;li>Additional services such as the dynamic allocation of card resources.&lt;/li>
&lt;/ul>
&lt;p>The diagram below shows an overview of the Keyple layers:&lt;/p>
&lt;figure id="figure-keyple-architecture-layers-overview">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/overview/architecture/keyple_layers_overview.drawio.svg" alt="Keyple architecture layers overview" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Keyple architecture layers overview
&lt;/figcaption>&lt;/figure></description></item><item><title>Card Extension Add-on Developer Guide</title><link>https://keyple.org/learn/developer-guide/card-extension-add-on/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/developer-guide/card-extension-add-on/</guid><description>&lt;br>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This guide is intended to help developers who want to create a Keyple card extension add-on for a specific card
technology.&lt;/p>
&lt;br>
&lt;h2 id="operating-mode">Operating mode&lt;/h2>
&lt;ol>
&lt;li>Learn the &lt;a href="#card-extension-architecture">card extension architecture&lt;/a> concepts&lt;/li>
&lt;li>Take note of the &lt;a href="#minimal-requirements">minimal requirements&lt;/a>&lt;/li>
&lt;li>&lt;a href="#define-the-card-commands">Define the card commands&lt;/a>&lt;/li>
&lt;li>&lt;a href="#set-up-dev-environment">Set up the development environment&lt;/a>&lt;/li>
&lt;li>&lt;a href="#implement-the-solution">Implement the solution&lt;/a>&lt;/li>
&lt;/ol>
&lt;br>
&lt;h2 id="card-extension-architecture">Card extension architecture&lt;/h2>
&lt;p>A Keyple card extension contains a set of objects which meet the following three interface specifications:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Common API&lt;/strong>: public contract including a generic type common to all card extensions.&lt;/li>
&lt;li>&lt;strong>Keypop Reader API&lt;/strong>: public contract provided by the Eclipse Keypop project including two specific
interfaces to be implemented by the card extension and required by the card selection manager.&lt;/li>
&lt;li>&lt;strong>Keypop Card API&lt;/strong>: private contract provided by the Eclipse Keypop project based on two types of
interfaces:
&lt;ul>
&lt;li>&lt;strong>API&lt;/strong> (Application Programming Interface): interface implemented by Keyple Service and directly usable by the
card extension code.&lt;/li>
&lt;li>&lt;strong>SPI&lt;/strong> (Service Provider Interface): interface to be implemented by the card extension and directly used by
Keyple Service.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>The component diagram below illustrates the internal API/SPI links between the card extension and Keyple Service, as
well as the public APIs exposed to the application:
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/developer-guide/component-dependencies/card_api.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;br>
&lt;h2 id="minimal-requirements">Minimal requirements&lt;/h2>
&lt;p>The table below lists the objects that must be created and indicates the interfaces to be implemented for each of them:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Object&lt;/th>
&lt;th style="text-align:center">Common API&lt;/th>
&lt;th style="text-align:center">Keypop Reader API&lt;/th>
&lt;th style="text-align:center">Keypop Card API&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Card extension service&lt;/td>
&lt;td style="text-align:center">&lt;code>KeypleCardExtension&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Card selection parser&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>CardSelectionExtension&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>CardSelectionExtensionSpi&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Smart card object&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>SmartCard&lt;/code> or &lt;code>IsoSmartCard&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>SmartCardSpi&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Card selection request DTO&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>CardSelectionRequestSpi&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Card request DTO&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>CardRequestSpi&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APDU request DTO&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>ApduRequestSpi&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>In the case where the smart card object has fields of type &lt;code>interface&lt;/code>,
it will then be necessary to define for each of them and recursively a JSON deserializer and register it during the
service initialization with the method &lt;code>JsonUtil.registerTypeAdapter(...)&lt;/code> provided by the
&lt;a href="https://keyple.org/components/core/keyple-util-lib/" target="_blank" rel="noopener">Keyple Util&lt;/a> library.&lt;/p>
&lt;p>This will allow the transport of this object through the network when using the Keyple Distributed solution.&lt;/p>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="define-the-card-commands">Define the card commands&lt;/h2>
&lt;p>The card extension takes part in the communication with the card in two ways:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>implicitly&lt;/strong>, when the card is being selected, which is done directly by the application via the Keyple Service
selection manager;&lt;/li>
&lt;li>&lt;strong>explicitly&lt;/strong>, when the card has been selected, on request of the application, by direct use of the APIs exposed by
the Card API.&lt;/li>
&lt;/ul>
&lt;p>For explicit communication, the card extension must require the application to provide a reference to a &lt;code>CardReader&lt;/code> of
the Reader API.
This can then be cast internally to a &lt;code>ProxyReaderApi&lt;/code> of the Card API through which it will be possible to transmit
card commands.&lt;/p>
&lt;p>Each card extension is free to define the APIs it considers relevant to perform card transactions.&lt;/p>
&lt;br>
&lt;h2 id="set-up-dev-environment">Set up dev environment&lt;/h2>
&lt;div class="alert alert-warning">
&lt;div>
For Java and Android projects, the code should be compliant with &lt;strong>Java 1.6&lt;/strong> in order to address a wide range of
applications.
&lt;/div>
&lt;/div>
&lt;p>If the card extension add-on is to be integrated into the Eclipse Keyple® project, it must use the following project
template:&lt;/p>
&lt;dl>
&lt;dt>&lt;a href="./media/project-templates/java/keyple-card-[CARD_EXTENSION_NAME]-java-lib.zip" target="_blank">Java template&lt;/a>&lt;/dt>
&lt;dd>adapt fields &lt;code>[CARD_EXTENSION_NAME]&lt;/code>, &lt;code>Xxx&lt;/code>, &lt;code>xxx&lt;/code>, &lt;code>TODO&lt;/code>&lt;/dd>
&lt;/dl>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>Before pushing the project to GitHub the first time, you must give write permission to some scripts files via the
following commands:&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">git update-index --chmod&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">+x &amp;#34;gradlew&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">git update-index --chmod&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">+x &amp;#34;scripts/check_version.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">git update-index --chmod&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">+x &amp;#34;scripts/prepare_javadoc.sh&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>If examples are proposed, they should be placed in
the &lt;a href="https://github.com/eclipse-keyple/keyple-java-example" target="_blank" rel="noopener">keyple-java-example&lt;/a> repository.&lt;/p>
&lt;p>The contribution procedure is described &lt;a href="./community/contributing/">here&lt;/a>.&lt;/p>
&lt;br>
&lt;h2 id="implement-the-solution">Implement the solution&lt;/h2>
&lt;div class="alert alert-warning">
&lt;div>
It is important to hide the internal interfaces of the &lt;strong>Keypop Card API&lt;/strong> from the application.
&lt;/div>
&lt;/div>
&lt;p>For this purpose, it is suggested to respect the following programming pattern based on the use of:&lt;/p>
&lt;ul>
&lt;li>public interfaces,&lt;/li>
&lt;li>private interfaces adapters (package visibility) not accessible from a public service.
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/developer-guide/design-guides/card_extension_class_diagram.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="api">API&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-common-java-api" target="_blank" rel="noopener">Keyple Common API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://keypop.org/apis/reader-layer/reader-api/" target="_blank" rel="noopener">Keypop Reader API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://keypop.org/apis/reader-layer/card-api/" target="_blank" rel="noopener">Keypop Card API&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="download">Download&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/components/overview/configuration-wizard/">Java components&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Distributed Application User Guide</title><link>https://keyple.org/learn/user-guide/distributed-application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/user-guide/distributed-application/</guid><description>&lt;br>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Keyple provides the &amp;ldquo;Keyple Distributed&amp;rdquo; solution which allows an application to communicate with a smart card reader
interfaced with another host.&lt;/p>
&lt;p>In this way, you can manage transactions seamlessly within a distributed architecture.&lt;/p>
&lt;p>The &amp;ldquo;Keyple Distributed&amp;rdquo; solution can be deployed in two ways:&lt;/p>
&lt;ul>
&lt;li>both client and server embed Keyple components,&lt;/li>
&lt;li>only the server embeds Keyple components, the client has its own libraries to communicate with its card reader.&lt;/li>
&lt;/ul>
&lt;p>The diagram below illustrates the first way, the use of the Keyple Distributed components when both client and
server embed Keyple components (note that the card reader can be either client-side or server-side):&lt;/p>
&lt;figure id="figure-keyple-on-both-client-and-server-sides">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/distributed-application/distributed_solution_1_layers_overview.drawio.svg" alt="Keyple on both client and server sides" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple on both client and server sides
&lt;/figcaption>&lt;/figure>
&lt;p>The diagram below illustrates the second way, the architecture with a client not running Keyple but connected to a
Keyple-based server:&lt;/p>
&lt;figure id="figure-keyple-on-server-side-only">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/distributed-application/distributed_solution_2_layers_overview.drawio.svg" alt="Keyple on server side only" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple on server side only
&lt;/figcaption>&lt;/figure>
&lt;h3 id="user-guides">User guides&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="#full-keyple-distributed-application">How to build a full Keyple distributed application&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://keyple.org/user-guides/non-keyple-client/overview/">How to make a non-Keyple client interact with a Keyple-based server application&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="heading">&lt;/h2>
&lt;hr>
&lt;h2 id="full-keyple-distributed-application">Full Keyple distributed application&lt;/h2>
&lt;p>Steps:&lt;/p>
&lt;ol>
&lt;li>In pre-requisite, read &lt;a href="./learn/user-guide/standalone-application/">Standalone Application User Guide&lt;/a> to understand the main concepts of Keyple in a standalone application.&lt;/li>
&lt;li>Learn &lt;a href="#concepts">main terms and concepts&lt;/a> of the Keyple Distributed solution.&lt;/li>
&lt;li>Find your &lt;a href="#usage-modes">usage mode&lt;/a>. This will help you to determine exactly which library and API to use.&lt;/li>
&lt;li>&lt;a href="#download">Import&lt;/a> into your project the libraries specified by your usage mode.&lt;/li>
&lt;li>Implement the transport layer adapted to your &lt;a href="#network-configuration">network configuration&lt;/a>.&lt;/li>
&lt;li>Implement your ticketing services as specified in the associated usage mode.&lt;/li>
&lt;/ol>
&lt;br>
&lt;h2 id="concepts">Concepts&lt;/h2>
&lt;p>Here are the main concepts to keep in mind before continuing to read this user guide:&lt;/p>
&lt;div id="concepts-table-1">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Concept&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Remote Lib&lt;/strong>&lt;/td>
&lt;td>This is the &lt;code>keyple-distributed-remote-java-lib&lt;/code> library.&lt;br>It must be imported and used by the application installed on the host not having local access to the smart card reader and that wishes to interact with the reader remotely.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Local Lib&lt;/strong>&lt;/td>
&lt;td>This is the &lt;code>keyple-distributed-local-java-lib&lt;/code> library.&lt;br>It must be imported and used by the application installed on the host having local access to the smart card reader but wishes to delegate all or part of the ticketing processing to a remote application.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Network Lib&lt;/strong>&lt;/td>
&lt;td>This is the &lt;code>keyple-distributed-network-java-lib&lt;/code> library.&lt;br>It must always be imported because it contains the network elements used by &lt;strong>Remote Lib&lt;/strong> and &lt;strong>Local Lib&lt;/strong>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Remote Plugin&lt;/strong>&lt;/td>
&lt;td>Part of the &lt;strong>Remote Lib&lt;/strong>, this is a Keyple reader plugin extension which provides only &lt;strong>Remote Readers&lt;/strong> to the application. It manages data exchanges with the &lt;strong>Local Service&lt;/strong>. This reader plugin extension must be registered to the smart card service like any Keyple reader plugin.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Remote Reader&lt;/strong>&lt;/td>
&lt;td>Part of the &lt;strong>Remote Lib&lt;/strong>, this is a Keyple reader extension which has some specificities:&lt;br>- each remote reader is connected to a local reader;&lt;br>- any command sent by the application to a remote reader will be forwarded to the associated local reader;&lt;br>- in some cases only, an event occurring on a local reader or plugin will be automatically forwarded to the associated remote reader or plugin.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Local Service&lt;/strong>&lt;/td>
&lt;td>Part of the &lt;strong>Local Lib&lt;/strong>, this is a Keyple distributed local service extension which ensures data exchange between the &lt;strong>Remote Plugin&lt;/strong> and local plugins and readers. It must be registered to the smart card service.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Factory&lt;/strong>&lt;/td>
&lt;td>&lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> each have a specific factory class to initialize them.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Node&lt;/strong>&lt;/td>
&lt;td>&lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> each are bind to a specific internal node which is responsible for the interfacing with the &lt;strong>Network Endpoint&lt;/strong>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Network Endpoint&lt;/strong>&lt;/td>
&lt;td>At the user&amp;rsquo;s charge, this component ensures the network exchanges between the &lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> nodes.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;style>
#concepts-table-1 table th:first-of-type {
width: 170px;
}
&lt;/style>
&lt;p>The diagram below illustrates the main functional concepts through a standard use case:&lt;/p>
&lt;figure id="figure-concepts---main-use-case">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/distributed-application/distributed_concepts_1.svg" alt="Concepts - Main use case" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Concepts - Main use case
&lt;/figcaption>&lt;/figure>
&lt;p>The second diagram below illustrates an arbitrary more complex possible use case with several hardware readers connected to different hosts.&lt;/p>
&lt;p>These could be for example a ticketing reloading service, where the business logic would be on the host without local readers, with thin clients on A &amp;amp; B hosts communicating locally with the cards.&lt;/p>
&lt;p>In this use case, the Keyple Distributed solution is use for card communication.&lt;/p>
&lt;figure id="figure-concepts---one-remote-plugin-connected-to-many-local-services">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/distributed-application/distributed_concepts_2.svg" alt="Concepts - One remote plugin connected to many local services" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Concepts - One remote plugin connected to many local services
&lt;/figcaption>&lt;/figure>
&lt;p>Here is another example, but this time it illustrates several remote plugins connected to the same local service.&lt;/p>
&lt;p>These could be for example ticketing terminals with transaction logic, which communicate locally with cards, but which do not have SAM, and which use a SAM server with hardware reader.&lt;/p>
&lt;p>In this use case, the Keyple Distributed solution is use for SAM communication.&lt;/p>
&lt;figure id="figure-concepts---many-remote-plugins-connected-to-one-local-service">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/distributed-application/distributed_concepts_3.svg" alt="Concepts - Many remote plugins connected to one local service" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Concepts - Many remote plugins connected to one local service
&lt;/figcaption>&lt;/figure>
&lt;br>
&lt;h2 id="usage-modes">Usage modes&lt;/h2>
&lt;p>The Keyple Distributed solution offers two different usage modes, each one having a specific API designed on a &lt;strong>Client-Server&lt;/strong> model:&lt;/p>
&lt;div id="plugins-table-1">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Usage mode&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="#reader-client-side">Reader Client Side&lt;/a>&lt;/td>
&lt;td>Allows a &lt;strong>server&lt;/strong> application to interact with a smart card reader available on a &lt;strong>client&lt;/strong> (e.g. Card reader).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#reader-server-side">Reader Server Side&lt;/a>&lt;/td>
&lt;td>Allows a &lt;strong>client&lt;/strong> application to interact with a smart card reader available on a &lt;strong>server&lt;/strong> (e.g. SAM reader, HSM).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;style>
#plugins-table-1 table th:first-of-type {
width: 190px;
}
&lt;/style>
&lt;p>Each mode provides a different &lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> and their associated factories.&lt;/p>
&lt;p>In an application, it is possible to use simultaneously several usage modes and as many instances of a usage mode as you want, as long as the components are initialized with different names.&lt;/p>
&lt;h3 id="reader-client-side">Reader Client Side&lt;/h3>
&lt;p>This usage mode allows a &lt;strong>server&lt;/strong> application to interact with a smart card reader available on a &lt;strong>client&lt;/strong> (e.g. Card reader).&lt;/p>
&lt;p>In this mode, the client is the initiator of the application processing following the local plugin or reader events (reader connection/disconnection or card insertion/removal).&lt;/p>
&lt;p>He can hand over to the server whenever he wants to perform a remote ticketing service on a card present in one of his local readers.&lt;/p>
&lt;p>The table below shows the classes and interfaces available for this usage mode.&lt;br>
Interfaces marked with an asterisk &amp;ldquo;*&amp;rdquo; come from the &lt;strong>Keypop Reader API&lt;/strong>.&lt;br>
Interfaces marked with an asterisk &amp;ldquo;**&amp;rdquo; come from the &lt;strong>Keyple Service API&lt;/strong>:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>API&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Library to use&lt;/strong>&lt;/td>
&lt;td>Local Lib&lt;/td>
&lt;td>Remote Lib&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Factory builder to be used&lt;/strong>&lt;/td>
&lt;td>&lt;code>LocalServiceClientFactoryBuilder&lt;/code>&lt;/td>
&lt;td>&lt;code>RemotePluginServerFactoryBuilder&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Factory to be registered&lt;/strong>&lt;/td>
&lt;td>&lt;code>LocalServiceClientFactory&lt;/code>&lt;/td>
&lt;td>&lt;code>RemotePluginServerFactory&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Local Service / Remote Plugin&lt;/strong>&lt;/td>
&lt;td>&lt;code>DistributedLocalService&lt;/code> **&lt;/td>
&lt;td>&lt;code>ObservablePlugin&lt;/code> **&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Local Service / Remote Plugin extension&lt;/strong>&lt;/td>
&lt;td>&lt;code>LocalServiceClient&lt;/code>&lt;/td>
&lt;td>&lt;code>RemotePluginServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Reader&lt;/strong>&lt;/td>
&lt;td>Any kind of reader&lt;/td>
&lt;td>&lt;code>CardReader&lt;/code> *&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Reader extension&lt;/strong>&lt;/td>
&lt;td>Device specific&lt;/td>
&lt;td>&lt;code>RemoteReaderServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-warning">
&lt;div>
It is the responsibility of the client application to observe and configure the local plugins and readers.
&lt;/div>
&lt;/div>
&lt;h4 id="operating-mode">OPERATING MODE&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>Server&lt;/strong>
&lt;ol>
&lt;li>Build an instance of the &lt;code>RemotePluginServerFactory&lt;/code> using the &lt;code>RemotePluginServerFactoryBuilder&lt;/code> class, specifying a unique name for the &lt;strong>Remote Plugin&lt;/strong> to be registered and your network endpoint implementation if required.&lt;/li>
&lt;li>Register the &lt;strong>Remote Plugin&lt;/strong> to the smart card service by providing the previously built factory.&lt;/li>
&lt;li>Cast the registered plugin into an &lt;code>ObservablePlugin&lt;/code> and add an event observer to it.&lt;br>&lt;div class="alert alert-note">&lt;div>Please note that this remote plugin is observable only to trigger ticketing services on the server side, but does not allow observation on the local plugin such as reader connection or disconnection.&lt;/div>&lt;/div>&lt;/li>
&lt;li>Await for events of type &lt;code>PluginEvent.Type.READER_CONNECTED&lt;/code>.&lt;br>&lt;div class="alert alert-note">&lt;div>This type of event indicates to the server that a client asks it to perform a specific ticketing service using the connected remote reader.&lt;/div>&lt;/div>&lt;/li>
&lt;li>When an event occurs, you must retrieve the connected remote reader from the registered plugin using the name of the reader contained in the event.&lt;br>&lt;div class="alert alert-note">&lt;div>Please note that the remote reader is strictly an instance of &lt;code>CardReader&lt;/code>, even if the local reader is an &lt;code>ObservableCardReader&lt;/code>.&lt;br>This usage mode does not allow to observe reader events such as card insertion or removal from the server.&lt;br>It is the responsibility of the client to observe the local reader if needed, then to ask the server to execute a specific remote service depending on the case.&lt;/div>&lt;/div>&lt;/li>
&lt;li>Use information inside the &lt;code>RemoteReaderServer&lt;/code> extension of the remote reader to identify the ticketing service to execute.&lt;/li>
&lt;li>Execute the specified ticketing service using the remote reader and all of its other information.&lt;/li>
&lt;li>End the remote ticketing service by calling the associated method provided by the &lt;code>RemotePluginServer&lt;/code> extension of the remote plugin.&lt;br>It is then possible to send additional information to the client if necessary.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;strong>Client&lt;/strong>
&lt;ol>
&lt;li>Build an instance of the &lt;code>LocalServiceClientFactory&lt;/code> using the &lt;code>LocalServiceClientFactoryBuilder&lt;/code> class, specifying a unique name for the &lt;strong>Local Service&lt;/strong> to be registered and your network endpoint implementation.&lt;/li>
&lt;li>Register the &lt;strong>Local Service&lt;/strong> to the smart card service by providing the previously built factory.&lt;/li>
&lt;li>Register at least a local plugin to the smart card service and get the name of the local reader to connect to the server.&lt;/li>
&lt;li>Execute the desired remote service by calling the associated method provided by the &lt;code>LocalServiceClient&lt;/code>
extension of the local service by specifying the identifier of the ticketing service to be executed,
the name of the target local reader, and transmitting to the server if necessary the contents of the previously
read smart card or additional information.&lt;br>&lt;div class="alert alert-note">&lt;div>&lt;p>Please note that if the
client does not use Keyple card extension locally, it is strongly recommended to use the card selection scenario
import/export feature to reduce the number of network exchanges during the card transaction.&lt;/p>&lt;p>
It will then be possible to process the card selection scenario locally following the detection of a card,
then export the result of the selection and transmit it to the server in the &lt;code>inputData&lt;/code> field.&lt;/p>
&lt;a href="./learn/user-guide/standalone-application/#importexport-a-scenario">More information&lt;/a>&lt;/div>&lt;/div>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3 id="reader-server-side">Reader Server Side&lt;/h3>
&lt;p>This usage mode allows a &lt;strong>client&lt;/strong> application to interact with a smart card reader or a pool of smart card readers available on a &lt;strong>server&lt;/strong> (e.g. SAM reader, HSM).&lt;/p>
&lt;p>The Keyple Distributed solution offers for this usage mode a remote control of all types of plugins (&lt;code>Plugin&lt;/code>, &lt;code>ObservablePlugin&lt;/code>, &lt;code>PoolPlugin&lt;/code>):&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Regular plugin&lt;/strong> (&lt;code>Plugin&lt;/code> or &lt;code>ObservablePlugin&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>During the remote plugin registration process, the client automatically creates a remote reader for each local reader of the set of local plugins on the server.&lt;/p>
&lt;p>If the factory has been properly configured, then the remote plugin and reader behave like the local plugins and readers.&lt;/p>
&lt;p>It is then possible to observe directly from the client the plugin and/or reader events (reader connection/disconnection or card insertion/removal) if desired.&lt;/p>
&lt;p>The table below shows the classes and interfaces available for this usage mode in the case of a &lt;strong>regular plugin&lt;/strong>.&lt;br>
Interfaces marked with an asterisk &amp;ldquo;*&amp;rdquo; come from the &lt;strong>Keypop Reader API&lt;/strong>.&lt;br>
Interfaces marked with an asterisk &amp;ldquo;**&amp;rdquo; come from the &lt;strong>Keyple Service API&lt;/strong>:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>API&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Library to use&lt;/strong>&lt;/td>
&lt;td>Remote Lib&lt;/td>
&lt;td>Local Lib&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Factory builder to be used&lt;/strong>&lt;/td>
&lt;td>&lt;code>RemotePluginClientFactoryBuilder&lt;/code>&lt;/td>
&lt;td>&lt;code>LocalServiceServerFactoryBuilder&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Factory to be registered&lt;/strong>&lt;/td>
&lt;td>&lt;code>RemotePluginClientFactory&lt;/code>&lt;/td>
&lt;td>&lt;code>LocalServiceServerFactory&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Remote Plugin / Local Service&lt;/strong>&lt;/td>
&lt;td>&lt;code>Plugin&lt;/code> ** or&lt;br>&lt;code>ObservablePlugin&lt;/code> **&lt;/td>
&lt;td>&lt;code>DistributedLocalService&lt;/code> **&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Remote Plugin / Local Service extension&lt;/strong>&lt;/td>
&lt;td>&lt;code>RemotePluginClient&lt;/code>&lt;/td>
&lt;td>&lt;code>LocalServiceServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Reader&lt;/strong>&lt;/td>
&lt;td>&lt;code>CardReader&lt;/code> * or&lt;br>&lt;code>ObservableCardReader&lt;/code> *&lt;/td>
&lt;td>Any kind of reader&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Reader extension&lt;/strong>&lt;/td>
&lt;td>&lt;code>RemoteReaderClient&lt;/code>&lt;/td>
&lt;td>Device specific&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>&lt;strong>Pool plugin&lt;/strong> (&lt;code>PoolPlugin&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>The dynamic reader allocation process will search for the first available reader among all or a subset of the pool plugins registered on the server.&lt;/p>
&lt;p>It is possible to define during the configuration phase of the local service factory a filter on the names of the pool plugins to use.&lt;/p>
&lt;p>The table below shows the classes and interfaces available for this usage mode in the case of a &lt;strong>pool plugin&lt;/strong>.&lt;br>
Interfaces marked with an asterisk &amp;ldquo;*&amp;rdquo; come from the &lt;strong>Keypop Reader API&lt;/strong>.&lt;br>
Interfaces marked with an asterisk &amp;ldquo;**&amp;rdquo; come from the &lt;strong>Keyple Service API&lt;/strong>:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>API&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Library to use&lt;/strong>&lt;/td>
&lt;td>Remote Lib&lt;/td>
&lt;td>Local Lib&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Factory builder to be used&lt;/strong>&lt;/td>
&lt;td>&lt;code>RemotePoolPluginClientFactoryBuilder&lt;/code>&lt;/td>
&lt;td>&lt;code>LocalServiceServerFactoryBuilder&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Factory to be registered&lt;/strong>&lt;/td>
&lt;td>&lt;code>RemotePluginClientFactory&lt;/code>&lt;/td>
&lt;td>&lt;code>LocalServiceServerFactory&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Remote Plugin / Local Service&lt;/strong>&lt;/td>
&lt;td>&lt;code>PoolPlugin&lt;/code> **&lt;/td>
&lt;td>&lt;code>DistributedLocalService&lt;/code> **&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Remote Plugin / Local Service extension&lt;/strong>&lt;/td>
&lt;td>&lt;code>RemotePluginClient&lt;/code>&lt;/td>
&lt;td>&lt;code>LocalServiceServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Reader&lt;/strong>&lt;/td>
&lt;td>&lt;code>CardReader&lt;/code> *&lt;/td>
&lt;td>Any kind of reader&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Reader extension&lt;/strong>&lt;/td>
&lt;td>&lt;code>RemoteReaderClient&lt;/code>&lt;/td>
&lt;td>Device specific&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-warning">
&lt;div>
Whatever the type of plugin, it is the responsibility of the server application to configure the local plugins and readers.
&lt;/div>
&lt;/div>
&lt;h4 id="operating-mode-1">OPERATING MODE&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>Server&lt;/strong>
&lt;ol>
&lt;li>Build an instance of the &lt;code>LocalServiceServerFactory&lt;/code> using the &lt;code>LocalServiceServerFactoryBuilder&lt;/code> class, specifying a unique name for the &lt;strong>Local Service&lt;/strong> to be registered and your network endpoint implementation if required.&lt;/li>
&lt;li>Register the &lt;strong>Local Service&lt;/strong> to the smart card service by providing the previously built factory.&lt;/li>
&lt;li>Register at least a local plugin or pool plugin to the smart card service, depending on your case.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;strong>Client&lt;/strong>
&lt;ol>
&lt;li>Build an instance of the &lt;code>RemotePluginClientFactory&lt;/code> using the &lt;code>RemotePluginClientFactoryBuilder&lt;/code> or &lt;code>RemotePoolPluginClientFactoryBuilder&lt;/code> class depends on the type of plugin that you want to manage, specifying a unique name for the &lt;strong>Remote Plugin&lt;/strong> to be registered and your network endpoint implementation.&lt;/li>
&lt;li>Register the &lt;strong>Remote Plugin&lt;/strong> to the smart card service by providing the previously built factory.&lt;/li>
&lt;li>Use the registered remote plugin as a local plugin.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="network-configuration">Network configuration&lt;/h2>
&lt;p>The Keyple Distributed solution &lt;strong>does not provide&lt;/strong> the network layer implementation, but it provides a set of SPIs (Service Provider Interfaces) to be implemented by the user in order to enable it to exchange data between &lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> components.&lt;/p>
&lt;h3 id="synchronous">Synchronous&lt;/h3>
&lt;p>Choose this mode if you want to implement a Client-Server &lt;strong>synchronous&lt;/strong> communication protocol, such as standard HTTP for example.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Network endpoint SPI to be implemented&lt;/td>
&lt;td>&lt;code>SyncEndpointClientSpi&lt;/code>&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Node API&lt;/td>
&lt;td>&lt;code>SyncNodeClient&lt;/code>&lt;/td>
&lt;td>&lt;code>SyncNodeServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Method to be used when initializing the factory&lt;/td>
&lt;td>&lt;code>withSyncNode(...)&lt;/code>&lt;/td>
&lt;td>&lt;code>withSyncNode(...)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Method provided by the remote plugin or local service extension&lt;br>to use to access the node&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;code>getSyncNode()&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Here is the minimal algorithm to implement in a context with a &lt;strong>single server instance&lt;/strong>:&lt;/p>
&lt;figure id="figure-synchronous-network-implementation">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/distributed-application/distributed_synchronous.svg" alt="Synchronous network implementation" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Synchronous network implementation
&lt;/figcaption>&lt;/figure>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>In a context with several server instances, a mechanism must be implemented to ensure that all messages associated to
a functional transaction are routed to the same server instance.&lt;/p>
&lt;p>For the &lt;strong>Reader Client Side&lt;/strong> usage mode,
the client endpoint can use the value of the &lt;code>sessionId&lt;/code> field contained in the &lt;code>MessageDto&lt;/code> object
transmitted by the Keyple client node to identify transactions.
This value is generated for each new execution of a remote service.
When the client endpoint detects a new value, it can, for example,
transmit the first message without a session cookie in order to be routed to the first available server,
then transmit the session cookie returned by the server in subsequent exchanges until a new transaction is detected.&lt;/p>
&lt;p>For the &lt;strong>Reader Server Side&lt;/strong> usage mode with &lt;strong>pool plugins&lt;/strong>,
if there are several server instances,
each reader cycle (from reader allocation to reader release) must be performed on the same server instance.
A mechanism must be put in place to inform the client endpoint that a new reader cycle is about to begin
because the &lt;code>sessionId&lt;/code> field is not relevant here.
So, for example, when requested by the Keyple client node,
the client endpoint can transmit the first message without a session cookie in order to be routed to the first
available server,
and then transmit the session cookie returned by the server in subsequent exchanges until the start of a new cycle.&lt;/p>
&lt;p>For the &lt;strong>Reader Server Side&lt;/strong> usage mode with &lt;strong>regular plugins (non-pool)&lt;/strong>,
if several server instances exist,
a remote plugin must be created for each server instance,
and each remote plugin must be associated with a distinct client endpoint dedicated to a server instance.&lt;/p>
&lt;/div>
&lt;/div>
&lt;h3 id="asynchronous">Asynchronous&lt;/h3>
&lt;p>Choose this mode if you want to implement a Full-Duplex &lt;strong>asynchronous&lt;/strong> communication protocol, such as Web Sockets for example.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Network endpoint SPI to be implemented&lt;/td>
&lt;td>&lt;code>AsyncEndpointClientSpi&lt;/code>&lt;/td>
&lt;td>&lt;code>AsyncEndpointServerSpi&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Node API&lt;/td>
&lt;td>&lt;code>AsyncNodeClient&lt;/code>&lt;/td>
&lt;td>&lt;code>AsyncNodeServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Method to be used when initializing the factory&lt;/td>
&lt;td>&lt;code>withAsyncNode(...)&lt;/code>&lt;/td>
&lt;td>&lt;code>withAsyncNode(...)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Method provided by the remote plugin or local service extension&lt;br>to use to access the node&lt;/td>
&lt;td>&lt;code>getAsyncNode()&lt;/code>&lt;/td>
&lt;td>&lt;code>getAsyncNode()&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Here is the minimal algorithm to implement:&lt;/p>
&lt;figure id="figure-asynchronous-network-implementation">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/distributed-application/distributed_asynchronous.svg" alt="Asynchronous network implementation" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Asynchronous network implementation
&lt;/figcaption>&lt;/figure>
&lt;h3 id="exchanged-data">Exchanged data&lt;/h3>
&lt;p>The data exchanged between &lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> components are contained in the DTO (Data Transfer Object) &lt;code>MessageDto&lt;/code>. It is built and processed by the plugin and &lt;strong>you don&amp;rsquo;t need to modify it&lt;/strong>.&lt;/p>
&lt;p>However, it is necessary in some contexts to access certain information such as the &lt;code>sessionId&lt;/code> in the case of communication with several server instances.&lt;/p>
&lt;br>
&lt;h2 id="api">API&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-distributed-local-java-lib" target="_blank" rel="noopener">Local API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-distributed-network-java-lib" target="_blank" rel="noopener">Network API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-distributed-remote-java-lib" target="_blank" rel="noopener">Remote API&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/eclipse-keyple/keyple-java-example" target="_blank" rel="noopener">Java examples&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="download">Download&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/components/overview/configuration-wizard/">Java components&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Build your first C++ application</title><link>https://keyple.org/learn/build-your-first-app/cpp-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/build-your-first-app/cpp-app/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
This page is still under construction and may contain inaccurate information.
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This quick start describes how to create a ready-to-execute command-line application that runs a simple transaction based on
a Calypso Card involving two smart card readers.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>The demonstration application created for this quick start requires:&lt;/p>
&lt;ul>
&lt;li>a Calypso Card (contactless smart card, NFC mobile phone with a Calypso applet or application),&lt;/li>
&lt;li>a Calypso SAM (Secure Access Module).&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;p>We will use three main components of Keyple:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Keyple Service C++ Library&lt;/strong>
which is the base component to which all the others refer,&lt;/li>
&lt;li>&lt;strong>Keyple Card Calypso C++ Library&lt;/strong>
add-on to handle the commands sent to the Calypso card and the Calypso SAM,&lt;/li>
&lt;li>&lt;strong>Keyple Plugin PC/SC C++ Library&lt;/strong>
add-on to provide the ability to manage PC/SC readers.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-note">
&lt;div>
&lt;p>&lt;strong>Prerequisites&lt;/strong>&lt;/p>
&lt;p>Here are the prerequisites to build the keyple components (dynamic libraries):&lt;/p>
&lt;ul>
&lt;li>G++ 6 and higher, MSVC++ 14 (other compilers untested)&lt;/li>
&lt;li>&lt;a href="https://cmake.org/" target="_blank" rel="noopener">CMake&lt;/a>&lt;/li>
&lt;li>libpcsclite1 and libpcsclite-dev packages installed (Linux) to build the PC/SC plugin&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;p>In this guide, the Keyple components and application are build under Linux using CMake as build automation tool.&lt;/p>
&lt;br>
&lt;h2 id="create-the-build-environment">Create the build environment&lt;/h2>
&lt;p>The building of all the necessary components is facilitated by a dedicated &amp;ldquo;meta-project&amp;rdquo; allowing to get all the
components and dependencies in a single step.&lt;/p>
&lt;p>Git checkout the &lt;a href="https://github.com/eclipse-keyple/keyple-cpp-meta" target="_blank" rel="noopener">meta project&lt;/a> into a directory of you local disk, then
enter the created directory and execute the following commands:&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmake -DCMAKE_TOOLCHAIN_FILE&lt;span class="o">=&lt;/span>../toolchain/gcc-linux.cmake ..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;code>gcc-linux&lt;/code> may be replaced by one of the build configurations available &lt;a href="https://github.com/eclipse-keyple/keyple-cpp-meta/tree/master/toolchain" target="_blank" rel="noopener">here&lt;/a>.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="lets-code">Let&amp;rsquo;s code&lt;/h2>
&lt;p>Now let&amp;rsquo;s see step by step how to create in one single class the elements that allow a certified reading of data through
a Calypso secure session.&lt;/p>
&lt;p>In a real ticketing application, the organization of the code would probably be different, but the point here is to show
how Keyple makes it possible to perform very simply operations that normally require a quantity of code and knowledge
that far exceeds what is implemented here.&lt;/p>
&lt;p>You can either progressively copy each of the small portions of code
that follow or copy the whole class at the bottom of this page.&lt;/p>
&lt;h3 id="create-a-directory-dedicated-to-the-application">Create a directory dedicated to the application&lt;/h3>
&lt;p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir app
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> app&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
We assume here that the current directory was the previously created &lt;code>build&lt;/code> directory.&lt;/p>
&lt;p>Create a file named &lt;code>CMakeLists.txt&lt;/code> with the following content:
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-make" data-lang="make">&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(CALYPSONET_CALYPSO_DIR&lt;/span> &lt;span class="s2">&amp;#34;../../calypsonet-terminal-calypso-cpp-api&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(CALYPSONET_CARD_DIR&lt;/span> &lt;span class="s2">&amp;#34;../../calypsonet-terminal-card-cpp-api&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(CALYPSONET_READER_DIR&lt;/span> &lt;span class="s2">&amp;#34;../../calypsonet-terminal-reader-cpp-api&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(KEYPLE_CALYPSO_DIR&lt;/span> &lt;span class="s2">&amp;#34;../../keyple-card-calypso-cpp-lib&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(KEYPLE_COMMON_DIR&lt;/span> &lt;span class="s2">&amp;#34;../../keyple-common-cpp-api&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(KEYPLE_PLUGIN_DIR&lt;/span> &lt;span class="s2">&amp;#34;../../keyple-plugin-cpp-api&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(KEYPLE_PCSC_DIR&lt;/span> &lt;span class="s2">&amp;#34;../../keyple-plugin-pcsc-cpp-lib&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(KEYPLE_SERVICE_DIR&lt;/span> &lt;span class="s2">&amp;#34;../../keyple-service-cpp-lib&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(KEYPLE_UTIL_DIR&lt;/span> &lt;span class="s2">&amp;#34;../../keyple-util-cpp-lib&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(KEYPLE_CALYPSO_LIB&lt;/span> &lt;span class="s2">&amp;#34;keyplecardcalypsocpplib&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(KEYPLE_PCSC_LIB&lt;/span> &lt;span class="s2">&amp;#34;keyplepluginpcsccpplib&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(KEYPLE_SERVICE_LIB&lt;/span> &lt;span class="s2">&amp;#34;keypleservicecpplib&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(KEYPLE_UTIL_LIB&lt;/span> &lt;span class="s2">&amp;#34;keypleutilcpplib&amp;#34;&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">INCLUDE_DIRECTORIES(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CMAKE_CURRENT_SOURCE_DIR}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CMAKE_CURRENT_SOURCE_DIR}/src/main/common&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CMAKE_CURRENT_SOURCE_DIR}/src/main/spi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CALYPSONET_CALYPSO_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CALYPSONET_CALYPSO_DIR}/src/main/card&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CALYPSONET_CALYPSO_DIR}/src/main/sam&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CALYPSONET_CALYPSO_DIR}/src/main/transaction&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CALYPSONET_CARD_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CALYPSONET_CARD_DIR}/src/main/spi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CALYPSONET_READER_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CALYPSONET_READER_DIR}/src/main/selection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CALYPSONET_READER_DIR}/src/main/selection/spi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${CALYPSONET_READER_DIR}/src/main/spi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_CALYPSO_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_CARD_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_COMMON_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_PCSC_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_PLUGIN_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_PLUGIN_DIR}/src/main/spi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_PLUGIN_DIR}/src/main/spi/reader&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_PLUGIN_DIR}/src/main/spi/reader/observable/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_PLUGIN_DIR}/src/main/spi/reader/observable/state/insertion&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_PLUGIN_DIR}/src/main/spi/reader/observable/state/processing&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_PLUGIN_DIR}/src/main/spi/reader/observable/state/removal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_RESOURCE_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_RESOURCE_DIR}/src/main/spi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_SERVICE_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_SERVICE_DIR}/src/main/cpp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_SERVICE_DIR}/src/main/spi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_STUB_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_UTIL_DIR}/src/main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_UTIL_DIR}/src/main/cpp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_UTIL_DIR}/src/main/cpp/exception&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">${KEYPLE_UTIL_DIR}/src/main/protocol&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">IF(APPLE&lt;/span> &lt;span class="err">OR&lt;/span> &lt;span class="err">UNIX)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(THREAD_LIB&lt;/span> &lt;span class="err">pthread)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">ELSE()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">ENDIF(APPLE&lt;/span> &lt;span class="err">OR&lt;/span> &lt;span class="err">UNIX)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(USECASE1&lt;/span> &lt;span class="err">UseCase1_ExplicitSelectionAid)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">SET(USECASE1_STUB&lt;/span> &lt;span class="err">${USECASE1}_Stub)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">ADD_EXECUTABLE(${USECASE1_STUB}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">${CMAKE_CURRENT_SOURCE_DIR}/src/main/common/CalypsoConstants.cpp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">${CMAKE_CURRENT_SOURCE_DIR}/src/main/common/StubSmartCardFactory.cpp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">${CMAKE_CURRENT_SOURCE_DIR}/src/main/${USECASE1}/Main_ExplicitSelectionAid_Stub.cpp)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">TARGET_LINK_LIBRARIES(${USECASE1_STUB}&lt;/span> &lt;span class="err">${KEYPLE_CARD_LIB}&lt;/span> &lt;span class="err">${KEYPLE_STUB_LIB}&lt;/span> &lt;span class="err">${KEYPLE_SERVICE_LIB}&lt;/span> &lt;span class="err">${KEYPLE_UTIL_LIB}&lt;/span> &lt;span class="err">${KEYPLE_CALYPSO_LIB}&lt;/span> &lt;span class="err">${THREAD_LIB})&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h3 id="create-a-directory-for-the-source-code">Create a directory for the source code&lt;/h3>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> src&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="create-the-class-skeleton">Create the class skeleton&lt;/h3>
&lt;p>Copy the source code below in a new C++ file named &lt;code>DemoCardAuthentication.cpp&lt;/code>&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;CalypsoExtensionService.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ConfigurableReader.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SmartCardService.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SmartCardServiceProvider.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ByteArrayUtil.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ContactCardCommonProtocol.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ContactlessCardCommonProtocol.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;IllegalStateException.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;LoggerFactory.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;StringUtils.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscPlugin.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscPluginFactory.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscPluginFactoryBuilder.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscReader.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscSupportedContactlessProtocol.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;CardResource.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;CardResourceServiceProvider.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;CalypsoConstants.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ConfigurationUtil.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">card&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">service&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">service&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">resource&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cpp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">exception&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">protocol&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">pcsc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Main_CardAuthentication_Pcsc&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">unique_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Logger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LoggerFactory&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">getLogger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">typeid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Main_CardAuthentication_Pcsc&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="set-up-the-pcsc-plugin">Set up the PC/SC plugin&lt;/h3>
&lt;p>The first step to use Keyple is to initialize the plugin and smart card readers.&lt;/p>
&lt;p>In this snippet the PC/SC plugin is registered to the SmartCardService.&lt;/p>
&lt;p>Two readers needs to be connected to the local machine. Change
&amp;ldquo;CARD_READER_NAME&amp;rdquo; and &amp;ldquo;SAM_READER_NAME&amp;rdquo; with the name of your USB readers.&lt;/p>
&lt;p>If you don&amp;rsquo;t know the names of the readers, read how to find them in the &lt;a href="#faq">FAQ&lt;/a>.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Get the instance of the SmartCardService
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">smartCardService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">getService&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Register the PcscPlugin with the SmartCardService, retrieve anc configure the readers
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Plugin&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">plugin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">smartCardService&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscPluginFactoryBuilder&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Reader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardReader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ConfigurableReader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;CARD_READER_NAME&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Reader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">samReader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ConfigurableReader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SAM_READER_NAME&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="set-up-the-calypso-card-extension">Set up the Calypso card extension&lt;/h3>
&lt;p>The Calypso card extension service will provide means to handle cards, SAMs and to manage card transactions.
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Get the Calypso card extension service
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardExtension&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">getInstance&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Verify that the extension&amp;#39;s API level is consistent with the current service
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">checkCardExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardExtension&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;h3 id="select-the-calypso-sam">Select the Calypso SAM&lt;/h3>
&lt;p>Before executing a transaction each smart card should be selected. The
next step is the selection of the Calypso SAM resulting in a
CalypsoSam object.&lt;/p>
&lt;p>It is then combined with the SAM reader to form the SAM resource needed
later within the transaction service.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Select the SAM
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">samSelectionManager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">samSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">createSamSelection&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">samSelectionResult&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">samSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">calypsoSam&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">samSelectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">calypsoSam&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="k">nullptr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="nf">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The SAM selection failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="select-the-calypso-card">Select the Calypso card&lt;/h3>
&lt;p>1st card exchange:&lt;/p>
&lt;p>The Calypso card selection is made using the card application&amp;rsquo;s AID
and results in a CalypsoCard object that will contain all the information extracted
from the Calypso card all along the transaction.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Select the card
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardSelectionManager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">createCardSelection&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">filterByDfName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardSelectionResult&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoCard&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">calypsoCard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoCard&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardSelectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">calypsoCard&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="k">nullptr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="nf">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The card selection failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="open-the-calypso-secure-session">Open the Calypso secure session&lt;/h3>
&lt;p>2nd card exchange :&lt;/p>
&lt;p>The secure session opening operated by the CardTransaction service is
combined with the reading of the environment file (SFI=07h).&lt;/p>
&lt;p>The mutual authentication process between Calypso card and Calypso SAM is initiated transparently.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Prepare the security settings used during the Calypso transaction
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardSecuritySetting&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardSecuritySetting&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">calypsoExtensionService&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">createCardSecuritySetting&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">setControlSamResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">calypsoSam&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Performs file reads using the card transaction manager in a secure session.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardTransactionManager&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardTransactionManager&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">calypsoExtensionService&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">createCardTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">calypsoCard&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cardSecuritySetting&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">prepareReadRecord&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_ENVIRONMENT_AND_HOLDER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">processOpening&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WriteAccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">DEBIT&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="close-the-calypso-secure-session">Close the Calypso secure session&lt;/h3>
&lt;p>3rd card exchange:&lt;/p>
&lt;p>Simply close the Calypso secure session&lt;/p>
&lt;p>The mutual authentication is finalized, it includes the authentication
of the data in the read file.&lt;/p>
&lt;p>Note: any technical, cryptographic or content-related incident in the Calypso card
would be signalled by an exception and would interrupt the thread of
execution.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Close the secure session, free the communication channel at the same time
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareReleaseCardChannel&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">processClosing&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;= #### The Secure Session ended successfully, the card is authenticated and the data read are certified.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">= #### FILE CONTENT = &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">calypsoCard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_ENVIRONMENT_AND_HOLDER&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">= #### End of the Calypso card processing.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="unregister-the-plugin">Unregister the plugin&lt;/h3>
&lt;p>Finally unregister the plugin before shutting down the application&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Unregister the plugin before leaving the application
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unregisterPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getName&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Find the complete code source &lt;a href="#full-code">below&lt;/a>.&lt;/p>
&lt;br>
&lt;h2 id="run">Run&lt;/h2>
&lt;ol>
&lt;li>Connect two USB PC/SC Readers.&lt;/li>
&lt;li>Insert the Calypso SAM in the SAM reader.&lt;/li>
&lt;li>Insert the Calypso card in the card reader.&lt;/li>
&lt;li>Run the application.&lt;/li>
&lt;/ol>
&lt;div class="alert alert-note">
&lt;div>
All project dependencies, including Keyple
components, are downloaded during the first run, which can take some
time.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;h4 id="how-do-i-find-out-the-names-of-the-readers">How do I find out the names of the readers?&lt;/h4>
&lt;p>To find out the names of the readers connected to your computer, we will
use Keyple with the following class which prints in the console the
number and names of the readers present:&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SmartCardService.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SmartCardServiceProvider.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscPlugin.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscPluginFactory.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscPluginFactoryBuilder.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscReader.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">service&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">pcsc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ReaderDiscovery&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">smartCardService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">getService&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Plugin&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">plugin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">smartCardService&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscPluginFactoryBuilder&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">plugin&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getReaderNames&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34; reader(s) found.&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="k">auto&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="nl">readerName&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">plugin&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getReaderNames&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">readerName&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>The console output should look something like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">2 reader(s) found.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;ASK LoGO 0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;Identive CLOUD 2700 R Smart Card Reader 0&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Identify which reader will be the card (contactless) reader and the SAM
(contact) reader and replace &lt;code>CARD_READER_NAME&lt;/code> and
&lt;code>SAM_READER_NAME&lt;/code> with their values.&lt;/p>
&lt;h4 id="the-program-is-terminated-with-the-samcard-selection-failed">The program is terminated with &amp;lsquo;The SAM/card selection failed&amp;rsquo;&lt;/h4>
&lt;p>Check the presence of the SAM and/or the card. The expected SAM is a Calypso S1 SAM and the expected card must have an
application identifier (DFNAME) corresponding to the AID used.&lt;/p>
&lt;h4 id="the-program-is-terminated-with-an-exception">The program is terminated with an exception&lt;/h4>
&lt;p>The cause is probably an error in the name of one of the two readers or the absence of a card on the contactless reader.&lt;/p>
&lt;p>To better identify the origin of the problem, it is always possible to surround the code with try/catch and display the cause.&lt;/p>
&lt;h4 id="full-code">Full code&lt;/h4>
&lt;p>Here is the complete code of this quick start in one single block.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;CalypsoExtensionService.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ConfigurableReader.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SmartCardService.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SmartCardServiceProvider.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ByteArrayUtil.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ContactCardCommonProtocol.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ContactlessCardCommonProtocol.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;IllegalStateException.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;LoggerFactory.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;StringUtils.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscPlugin.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscPluginFactory.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscPluginFactoryBuilder.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscReader.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscSupportedContactlessProtocol.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">card&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">service&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">service&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">resource&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cpp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">exception&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">protocol&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">pcsc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">AID&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;315449432E49434131&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">uint8_t&lt;/span> &lt;span class="n">SFI_ENVIRONMENT_AND_HOLDER&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x07&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">uint8_t&lt;/span> &lt;span class="n">RECORD_NUMBER_1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Main_CardAuthentication_Pcsc&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Get the instance of the SmartCardService
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">smartCardService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">getService&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Register the PcscPlugin with the SmartCardService, retrieve anc configure the readers
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Plugin&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">plugin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">smartCardService&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscPluginFactoryBuilder&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Reader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardReader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ConfigurableReader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;CARD_READER_NAME&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Reader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">samReader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ConfigurableReader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SAM_READER_NAME&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Get the Calypso card extension service
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">calypsoExtensionService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">getInstance&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Verify that the extension&amp;#39;s API level is consistent with the current service
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">smartCardService&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">checkCardExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Select the SAM
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">samSelectionManager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">smartCardService&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">samSelectionManager&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">createSamSelection&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">samSelectionResult&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">samSelectionManager&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">calypsoSam&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samSelectionResult&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getActiveSmartCard&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">calypsoSam&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="k">nullptr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The SAM selection failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Select the card
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardSelectionManager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">smartCardService&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoCardSelection&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardSelection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">createCardSelection&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cardSelection&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">filterByDfName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardSelection&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardSelectionResult&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoCard&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">calypsoCard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoCard&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardSelectionResult&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getActiveSmartCard&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">calypsoCard&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="k">nullptr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The card selection failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Prepare the security settings used during the Calypso transaction
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardSecuritySetting&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardSecuritySetting&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">createCardSecuritySetting&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cardSecuritySetting&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setSamResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">calypsoSam&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Performs file reads using the card transaction manager in a secure session.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CardTransactionManager&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">cardTransactionManager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">createCardTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">calypsoCard&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cardSecuritySetting&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prepareReadRecord&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_ENVIRONMENT_AND_HOLDER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">processOpening&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WriteAccessLevel&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">DEBIT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Close the secure session, free the communication channel at the same time
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prepareReleaseCardChannel&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">processClosing&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= #### The Secure Session ended successfully, the card is &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;authenticated and the data read are certified.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// printf(&amp;#34;\n= #### FILE CONTENT = &amp;#34; +
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// calypsoCard-&amp;gt;getFileBySfi(SFI_ENVIRONMENT_AND_HOLDER));
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">= #### End of the Calypso card processing.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keypop API</title><link>https://keyple.org/learn/overview/keypop-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/overview/keypop-api/</guid><description>&lt;br>
&lt;p>Keyple is compliant with the &lt;strong>Terminal API&lt;/strong> specifications provided by the &lt;a href="https://calypsonet.org" target="_blank" rel="noopener">Calypso Networks Association&lt;/a> that standardize how to manage cards, readers, reader events and card selection.&lt;/p>
&lt;p>This compliance allows Keyple to obtain certifications from the Calypso Networks Association.
It is a guarantee of reliability and reproducibility of the processes implemented on a variety of devices.&lt;/p>
&lt;p>The open source &lt;a href="https://keypop.org" target="_blank" rel="noopener">Eclipse Keypop&lt;/a> project exposes the &lt;strong>Terminal API&lt;/strong> specifications in the form of
&lt;strong>Java&lt;/strong> and &lt;strong>C++&lt;/strong> interfaces,
and Keyple is based on these interfaces.&lt;/p>
&lt;p>Keyple also defines additional public interface for plugin integration, remote reader management, etc.&lt;/p></description></item><item><title>Non-Keyple Client User Guide</title><link>https://keyple.org/learn/user-guide/non-keyple-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/user-guide/non-keyple-client/</guid><description>&lt;meta http-equiv="refresh" content="0; url=./user-guides/non-keyple-client/overview/"></description></item><item><title>Calypso Application User Guide</title><link>https://keyple.org/learn/user-guide/calypso-application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/user-guide/calypso-application/</guid><description>&lt;br>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Keyple provides a card extension add-on dedicated to the Calypso® card technology.&lt;/p>
&lt;p>This component allows operating commands with a Calypso card and to manage a secure Calypso transaction in a simple way.
It completely hides the details of APDU orders that are sent to Calypso cards and SAMs, which are usually tedious operations.&lt;/p>
&lt;p>The main features are:&lt;/p>
&lt;ul>
&lt;li>support for different card revisions;&lt;/li>
&lt;li>object mapping of card data structures;&lt;/li>
&lt;li>complete management of the secure session with SAMs;&lt;/li>
&lt;li>PIN code management;&lt;/li>
&lt;li>Stored Value operations management;&lt;/li>
&lt;li>card invalidation / rehabilitation.&lt;/li>
&lt;/ul>
&lt;p>The diagram below illustrates the organization of a Calypso application based on Keyple:
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/calypso-application/calypso_application_overview.drawio.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;br>
&lt;h2 id="operating-mode">Operating mode&lt;/h2>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>Pre-requisites:&lt;/p>
&lt;ul>
&lt;li>Have a global view of Calypso product concepts (cards, SAM, security principles)&lt;/li>
&lt;li>Have read the &lt;a href="./learn/user-guide/standalone-application/">Standalone Application User Guide&lt;/a> to understand the main concepts of Keyple in a standalone application&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>Access to the &lt;a href="#the-calypso-extension-service">Calypso card extension service&lt;/a>&lt;/li>
&lt;li>&lt;a href="#select-a-card">Select a card&lt;/a>&lt;/li>
&lt;li>&lt;a href="#set-up-security-settings">Set up the security settings&lt;/a> (optional)&lt;/li>
&lt;li>&lt;a href="#operate-a-card-transaction">Operate a card transaction&lt;/a>&lt;/li>
&lt;/ol>
&lt;br>
&lt;h2 id="the-calypso-extension-service">The Calypso extension service&lt;/h2>
&lt;p>As part of the Calypso card extension add-on, the Calypso extension service is the provider of the API implementations.&lt;/p>
&lt;p>The service is accessible by calling the &lt;code>CalypsoExtensionService.getInstance()&lt;/code> static method.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>During initialization, it is recommended to check the extension with the smart card service to ensure the compatibility of the different libraries involved.&lt;/p>
&lt;p>In case of incompatibility a warning will be produced in the log file.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">checkCardExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="select-a-card">Select a card&lt;/h2>
&lt;p>In order to perform a transaction it is necessary to have selected the card first.&lt;/p>
&lt;p>To do this, you must create a selection case for a selection scenario by calling the &lt;code>createCardSelection()&lt;/code> method.&lt;/p>
&lt;p>In addition to the filtering capabilities offered by Keyple Service, the Calypso Selection API allows you to add
commands that will be sent to the card after a successful selection (the details of these features are described in the
API documentation).&lt;/p>
&lt;p>The resulting &lt;code>IsoSmartCard&lt;/code> can be cast to a &lt;code>CalypsoCard&lt;/code> object which concentrate all known information about the
card being processed.
Its content is dynamically updated during the transaction.
The application will use it to get the data necessary for its business logic.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Create a card selection manager.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderApiFactory&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Create a card selection using the Calypso card extension.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createIsoCardSelector&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterByDfName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getCalypsoCardApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCalypsoCardSelectionExtension&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Actual card communication: process the card selection.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Get the SmartCard resulting of the selection.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CalypsoCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoCard&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Check the selection result.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The card selection failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="set-up-security-settings">Set up security settings&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
The security settings must be initialized only for secure transactions.
&lt;/div>
&lt;/div>
&lt;p>The API offers several types of settings such as choosing the SAM to use, enabling various modes, specifying keys for
legacy cards, etc&amp;hellip; (see the API documentation for more information).&lt;/p>
&lt;p>If the card transaction is to be secured using a symmetrical key cryptographic module (such as a SAM), it will be
necessary to initialize a &lt;code>SymmetricSecuritySetting&lt;/code>, associated with an implementation of the cryptographic module
to be used (e.g. Calypso Crypto Legacy SAM Lib).&lt;/p>
&lt;p>The SAM must first be selected via the Calypso Crypto Legacy SAM Lib.&lt;/p>
&lt;p>In the case of the Card Resource Service, you have to create a profile extension, specifying the previously built
selection case, and then associate it to a dedicated profile in the service (see
the &lt;a href="./learn/user-guide/card-resource-service/">Card Resource Service User Guide&lt;/a>).&lt;/p>
&lt;p>The following snippet shows the selection of the SAM and the initialization of the security settings:
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Create a SAM selection manager.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Create a card selector without filer&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">IsoCardSelector&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createIsoCardSelector&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Retrieve the Legacy SAM API factory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">LegacySamApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">legacySamApiFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getLegacySamApiFactory&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Create a SAM selection using the Calypso Legacy SAM card extension.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">samSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelector&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">legacySamApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createLegacySamSelectionExtension&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// SAM communication: run the selection scenario.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Check the selection result.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samSelectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The selection of the SAM failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Get the Calypso SAM SmartCard resulting of the selection.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">LegacySam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LegacySam&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Build the security settings&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">symmetricCryptoSecuritySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardApiFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSymmetricCryptoSecuritySetting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getLegacySamApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSymmetricCryptoCardTransactionManagerFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="p">));&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>&lt;/p>
&lt;br>
&lt;h2 id="operate-a-card-transaction">Operate a card transaction&lt;/h2>
&lt;p>It is possible to perform secure or non-secure transactions depending on the need.
A transaction is managed by a dedicated &lt;code>CardTransactionManager&lt;/code> which is provided by the Calypso card extension service.&lt;/p>
&lt;p>The transaction manager provides high-level API to manage transactions with a Calypso card.
The provided &lt;code>CalypsoCard&lt;/code> object is kept and updated dynamically all along the transaction process.&lt;/p>
&lt;p>The transaction takes place in several repeatable steps:&lt;/p>
&lt;ul>
&lt;li>Preparation of the commands to be sent to the card. Several command preparations can be stacked (no communication
neither with the card nor with the SAM).&lt;/li>
&lt;li>Processing of the prepared commands. Performs all necessary communications with the card and/or the SAM to carry out
the previously prepared operations.&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Execute the transaction: the environment file is read within a secure session to ensure data&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// authenticity.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">calypsoCardApiFactory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSecureRegularModeTransactionManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">symmetricCryptoSecuritySetting&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareOpenSecureSession&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WriteAccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">DEBIT&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareReadRecords&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_ENVIRONMENT_AND_HOLDER&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">29&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareCloseSecureSession&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCommands&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ChannelControl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CLOSE_AFTER&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="specific-security-measures">Specific security measures&lt;/h2>
&lt;h3 id="legacy-card-authentication">Legacy card authentication&lt;/h3>
&lt;p>In order to &lt;strong>securely manage legacy card solutions configured with DES or DES-X keys&lt;/strong>, it is &lt;strong>imperative&lt;/strong> to exchange
with these cards in secure sessions only APDU commands for which the size of the response data can be predetermined.&lt;/p>
&lt;p>For a Keyple-based processing, this means that the following methods of the &lt;code>TransactionManager&lt;/code> must not be used
within a secure session: &lt;code>prepareReadRecord(...)&lt;/code>, &lt;code>prepareReadRecordsPartially(...)&lt;/code>, &lt;code>prepareSearchRecords(...)&lt;/code> and
&lt;code>prepareGetData(...)&lt;/code>.&lt;/p>
&lt;p>As these methods could be useful for high-performance identification of some card data, here&amp;rsquo;s how to use them safely on
legacy cards:&lt;/p>
&lt;ul>
&lt;li>first of all, exchange these commands before opening a secure session: this enables effective identification of the
card data,&lt;/li>
&lt;li>then, if any of the data read out of session is sensitive and requires authentication, repeat a secure read of the
sensitive data within the session, using commands that predetermine the size of the response data.&lt;/li>
&lt;/ul>
&lt;h3 id="hce-service-handling">HCE service handling&lt;/h3>
&lt;p>In the context of access control, it is necessary to check the validity of the &lt;strong>HCE token&lt;/strong> in order to accept and
authenticate card solutions based on an HCE-type NFC service.&lt;/p>
&lt;p>While the &lt;code>CalypsoCard&lt;/code> API doesn&amp;rsquo;t directly provide this information, the two bytes of the HCE validity token can be
easily obtained using the following snippet:&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.util.BerTlvUtil&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isHce&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hceValidityToken&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">extractHceValidityToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getSelectApplicationResponse&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Check the validity for the current&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">extractHceValidityToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">selectApplicationResponse&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fullSerialNumber&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BerTlvUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">parseSimple&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selectApplicationResponse&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">0xC7&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">copyOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fullSerialNumber&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="o">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="api">API&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keypop.org/apis/reader-layer/reader-api/" target="_blank" rel="noopener">Keypop Reader API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://keypop.org/apis/calypso-layer/calypso-card-api/" target="_blank" rel="noopener">Keypop Calypso Card API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://keypop.org/apis/calypso-layer/calypso-legacysam-api/" target="_blank" rel="noopener">Keypop Calypso Crypto Legacy SAM API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-common-java-api" target="_blank" rel="noopener">Keyple Common API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-card-calypso-java-lib" target="_blank" rel="noopener">Keyple Card Calypso API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-card-calypso-crypto-legacysam-java-lib" target="_blank" rel="noopener">Keyple Card Calypso Crypto Legacy SAM API&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/eclipse-keyple/keyple-java-example" target="_blank" rel="noopener">Java examples&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="download">Download&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/components/overview/configuration-wizard/">Java components&lt;/a>&lt;/li>
&lt;/ul>
&lt;br></description></item><item><title>Card Resource Service User Guide</title><link>https://keyple.org/learn/user-guide/card-resource-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/user-guide/card-resource-service/</guid><description>&lt;br>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>An application that performs secure transactions on smart cards may need to dynamically allocate a card resource
dedicated to the current transaction to manage the security of the transaction (e.g. SAM or HSM).&lt;/p>
&lt;p>To meet this need, Keyple proposes the Service Resource component which provides a service that supports dynamic card
resource allocation, using a profile-based filtering mechanism.&lt;/p>
&lt;br>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>card resource locking during use;&lt;/li>
&lt;li>automatic monitoring of observable plugins and readers;&lt;/li>
&lt;li>customizable profile-based filtering mechanism (specific plugins list, reader name using regular expression, reader
group name for pool plugins, specific card selection);&lt;/li>
&lt;li>specific reader configuration capability;&lt;/li>
&lt;li>allocation priority management;&lt;/li>
&lt;li>two allocation modes (blocking, non-blocking);&lt;/li>
&lt;li>multiple allocation strategies (first available card resource, cyclic, random);&lt;/li>
&lt;li>configurable allocation timeout;&lt;/li>
&lt;li>failure management.&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="operating-mode">Operating mode&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="#access-to-the-service">Access to the service&lt;/a>&lt;/li>
&lt;li>&lt;a href="#access-to-the-configurator">Access to the configurator&lt;/a>&lt;/li>
&lt;li>Register &lt;a href="#register-plugins">plugins&lt;/a> and/or &lt;a href="#register-pool-plugins">pool plugins&lt;/a> to be used&lt;/li>
&lt;li>&lt;a href="#define-profiles">Define profiles&lt;/a> for card resource filtering&lt;/li>
&lt;li>&lt;a href="#set-allocation-mode">Set the allocation mode&lt;/a> (optional)&lt;/li>
&lt;li>&lt;a href="#apply-the-configuration">Apply the configuration&lt;/a>&lt;/li>
&lt;li>&lt;a href="#start-the-service">Start the service&lt;/a>&lt;/li>
&lt;li>&lt;a href="#allocate-a-resource">Allocate a resource&lt;/a>&lt;/li>
&lt;li>Use the resource&lt;/li>
&lt;li>&lt;a href="#release-a-resource">Release the used resource&lt;/a>&lt;/li>
&lt;/ol>
&lt;br>
&lt;h2 id="access-to-the-service">Access to the service&lt;/h2>
&lt;p>Call the &lt;code>CardResourceServiceProvider.getService()&lt;/code> static method to access the service.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardResourceService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardResourceService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardResourceServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="configure-the-service">Configure the service&lt;/h2>
&lt;h3 id="access-to-the-configurator">Access to the configurator&lt;/h3>
&lt;p>Call the &lt;code>getConfigurator()&lt;/code> method on the service to get a new instance of the service configurator.
It is built on the fluent pattern, and it guides you through the various steps to be specified during the configuration
process.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cardResourceService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getConfigurator&lt;/span>&lt;span class="p">()...&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="register-plugins">Register plugins&lt;/h3>
&lt;p>If you plan to use plugins of type &lt;code>Plugin&lt;/code> or &lt;code>ObservablePlugin&lt;/code> in the card resource service, you must specify the
global ordered list of plugins to be used when searching for a card resource.&lt;/p>
&lt;p>This is the default list that will be applied for profiles that have not explicitly specified another list.&lt;/p>
&lt;p>Please note that the order in which plugins are added is important.&lt;/p>
&lt;p>To add one or more plugins, you need to create a new instance of the &lt;code>PluginsConfigurator&lt;/code> class and provide it to the
configurator using the &lt;code>withPlugins(...)&lt;/code> method.&lt;/p>
&lt;p>It is possible to configure the following:&lt;/p>
&lt;ul>
&lt;li>specify the global allocation strategy to all added plugins;&lt;/li>
&lt;li>specify the global usage timeout of a resource;&lt;/li>
&lt;li>activate independently plugin by plugin the monitoring of the plugin and/or its readers in order to allow the service
to automatically update the list of resources. In this case you will have to provide a handler to be informed in case
of error or crash of the observation thread.&lt;/li>
&lt;/ul>
&lt;p>For each plugin added, you will need to provide an implementation of the &lt;code>ReaderConfiguratorSpi&lt;/code> interface to
automatically configure new readers or those already connected.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="na">withPlugins&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PluginsConfigurator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withAllocationStrategy&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withUsageTimeout&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addPluginWithMonitoring&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addPlugin&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addPluginWithMonitoring&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">())&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="register-pool-plugins">Register pool plugins&lt;/h3>
&lt;p>If you plan to use plugins of type &lt;code>PoolPlugin&lt;/code> in the card resource service, you must specify the global ordered list
of pool plugins to be used when searching for a card resource.&lt;/p>
&lt;p>This is the default list that will be applied for profiles that have not explicitly specified another list.&lt;/p>
&lt;p>Please note that the order in which plugins are added is important.
If you use both plugins and pool plugins in your configuration, it is possible to specify if pool plugins should be
taken into account first or not during the resource allocation process.&lt;/p>
&lt;p>To add one or more pool plugins, you need to create a new instance of the &lt;code>PoolPluginsConfigurator&lt;/code> class and provide it
to the configurator using the &lt;code>withPoolPlugins(...)&lt;/code> method.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="na">withPoolPlugins&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoolPluginsConfigurator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">usePoolFirst&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addPoolPlugin&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addPoolPlugin&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">())&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="define-profiles">Define profiles&lt;/h3>
&lt;p>A profile defines a set of filters which will be used when enumerating the available resources. The profile identifiers
will be used when allocating a resource.&lt;/p>
&lt;p>To add profiles, you must create a new instance of the &lt;code>CardResourceProfileConfigurator&lt;/code> class for each profile and
provide them to the configurator using the &lt;code>withCardResourceProfiles(...)&lt;/code> method.&lt;/p>
&lt;p>It is possible to configure the following:&lt;/p>
&lt;ul>
&lt;li>override the global plugin list to use;&lt;/li>
&lt;li>set reader name filter using a regex value;&lt;/li>
&lt;li>set reader group reference filter in case of pool plugins.&lt;/li>
&lt;/ul>
&lt;p>You also need to provide an implementation of the &lt;code>CardResourceProfileExtension&lt;/code> interface in order to be able to
customize the filtering if needed and to return to the service an implementation of the &lt;code>SmartCard&lt;/code> interface when a
compatible card is found.
The &lt;code>SmartCard&lt;/code> found will be returned to the user by the allocation process.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="na">withCardResourceProfiles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardResourceProfileConfigurator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RESOURCE_A&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">yourCardResourceProfileExtensionA&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withReaderNameRegex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">READER_NAME_REGEX_A&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardResourceProfileConfigurator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RESOURCE_B&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">yourCardResourceProfileExtensionB&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withReaderNameRegex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">READER_NAME_REGEX_B&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardResourceProfileConfigurator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RESOURCE_C&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">yourCardResourceProfileExtensionC&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withReaderGroupReference&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">READER_GROUP_REFERENCE_C&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">())&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="set-allocation-mode">Set allocation mode&lt;/h3>
&lt;p>By default, the card resource service is configured with a &lt;strong>non-blocking&lt;/strong> allocation mode.
This means that if no resources are available at the time of the request for an allocation, then the service returns the
hand directly.&lt;/p>
&lt;p>The &lt;code>withBlockingAllocationMode(...)&lt;/code> method configure the service to perform allocations in &lt;strong>blocking&lt;/strong> mode so that
it only hands over when a resource becomes available.&lt;/p>
&lt;p>You will then have to specify the duration between two search cycles and the maximum waiting time so that the service
can always return after a certain time if it has still not found anything.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="na">withBlockingAllocationMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10000&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">search&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">each&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">during&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">seconds&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">maximum&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="apply-the-configuration">Apply the configuration&lt;/h3>
&lt;p>Call the &lt;code>configure()&lt;/code> method on the configurator to finalise and apply the configuration.&lt;/p>
&lt;p>Once finalized, the new configuration replaces the previous one but does not change the state of the service.
If the service was already started at that moment, then it stops, applies the new configuration, and restarts.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="na">configure&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="use-the-service">Use the service&lt;/h2>
&lt;h3 id="start-the-service">Start the service&lt;/h3>
&lt;p>Call the &lt;code>start()&lt;/code> method on the service to start the service using the current configuration.
The service will initialize the list of available resources for each profile and start the monitoring processes if
requested.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cardResourceService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="allocate-a-resource">Allocate a resource&lt;/h3>
&lt;p>Call the &lt;code>getCardResource(...)&lt;/code> method on the service to retrieve and lock a card resource.
You just have to specify the name of the profile to use.&lt;/p>
&lt;p>If the allocation mode is blocking, then the method will wait a while for a resource to become available.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardResource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardResource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardResourceService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getCardResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RESOURCE_A&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="release-a-resource">Release a resource&lt;/h3>
&lt;p>Call the &lt;code>releaseCardResource(...)&lt;/code> method on the service to unlock a card resource.
You just have to provide the card resource to release.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cardResourceService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">releaseCardResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardResource&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="delete-a-resource">Delete a resource&lt;/h3>
&lt;p>Call the &lt;code>removeCardResource(...)&lt;/code> method on the service to remove a card resource from the available card resource
list.
This can be useful in some cases if the card or reader has failed.
You just have to provide the card resource to remove.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cardResourceService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">removeCardResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardResource&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="stop-the-service">Stop the service&lt;/h3>
&lt;p>Call the &lt;code>stop()&lt;/code> method on the service to stop the service if needed. Any monitoring is then stopped and no more
resources are accessible.&lt;/p>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cardResourceService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">stop&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="api">API&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-service-resource-java-lib" target="_blank" rel="noopener">API documentation &amp;amp; class diagram&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="example">Example&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/eclipse-keyple/keyple-java-example" target="_blank" rel="noopener">Java example&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="download">Download&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/components/overview/configuration-wizard/">Java components&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Upgrade from an earlier version of Keyple</title><link>https://keyple.org/learn/user-guide/migration-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/user-guide/migration-guide/</guid><description>&lt;br>
&lt;p>This guide is intended to help a user of a previous version of Keyple Java to upgrade his application to a new version of the library.&lt;/p>
&lt;p>Upgrade from:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#upgrade-from-2-to-3">2.+ to 3.+&lt;/a>&lt;/li>
&lt;li>&lt;a href="#upgrade-from-1-to-2">1.+ to 2.+&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;hr>
&lt;h2 id="upgrade-from-2-to-3">Upgrade from &amp;ldquo;2.+&amp;rdquo; to &amp;ldquo;3.+&amp;rdquo;&lt;/h2>
&lt;p>This major release follows the adoption of &lt;strong>Keypop APIs&lt;/strong> in place of &lt;strong>CNA Terminal APIs&lt;/strong>.&lt;/p>
&lt;p>We recommend that you follow the steps below in the order suggested:&lt;/p>
&lt;ol>
&lt;li>Update the project &lt;a href="#dependencies-management">dependencies management&lt;/a>&lt;/li>
&lt;li>Perform a global &lt;a href="#renaming">text search &amp;amp; replace&lt;/a> across the entire project&lt;/li>
&lt;li>Apply the changes to the &lt;a href="#card-selection">card/SAM selection manager&lt;/a>&lt;/li>
&lt;li>Apply the changes to the &lt;a href="#card-transaction">card transaction manager&lt;/a>&lt;/li>
&lt;li>Apply the changes to the &lt;a href="#pso-signature-management-computationverification">signatures management (PSO or basic)&lt;/a> during card transactions&lt;/li>
&lt;li>Apply the changes to the &lt;a href="#sam-resource-service">SAM resource service&lt;/a>&lt;/li>
&lt;/ol>
&lt;div class="alert alert-note">
&lt;div>
All deprecated methods have been removed. If your project contains such methods, please check the changelogs for
replacement methods.
&lt;/div>
&lt;/div>
&lt;h3 id="dependencies-management">Dependencies management&lt;/h3>
&lt;p>Replace the legacy Keyple dependencies with the latest versions.
To do this, use the &lt;a href="./components/overview/configuration-wizard/">configuration wizard&lt;/a>
to correctly import the new artifacts into your project.&lt;/p>
&lt;h3 id="renaming">Renaming&lt;/h3>
&lt;p>Search and replace (in &amp;ldquo;&lt;strong>case-sensitive&lt;/strong>&amp;rdquo; and &amp;ldquo;&lt;strong>whole-word&lt;/strong>&amp;rdquo; mode) in the following order the following strings when present:&lt;/p>
&lt;ol>
&lt;li>&lt;code>org.calypsonet.terminal.calypso&lt;/code> =&amp;gt; &lt;code>org.eclipse.keypop.calypso.card&lt;/code>&lt;/li>
&lt;li>&lt;code>org.calypsonet.terminal&lt;/code> =&amp;gt; &lt;code>org.eclipse.keypop&lt;/code>&lt;/li>
&lt;li>&lt;code>card.sam&lt;/code> =&amp;gt; &lt;code>crypto.legacysam.sam&lt;/code>&lt;/li>
&lt;li>&lt;code>Reader&lt;/code> =&amp;gt; &lt;code>CardReader&lt;/code>&lt;/li>
&lt;li>&lt;code>ObservableReader&lt;/code> =&amp;gt; &lt;code>ObservableCardReader&lt;/code>&lt;/li>
&lt;li>&lt;code>ReaderEvent&lt;/code> =&amp;gt; &lt;code>CardReaderEvent&lt;/code>&lt;/li>
&lt;li>&lt;code>CalypsoSam&lt;/code> =&amp;gt; &lt;code>LegacySam&lt;/code>&lt;/li>
&lt;li>&lt;code>CardSelection&lt;/code> =&amp;gt; &lt;code>CardSelectionExtension&lt;/code>&lt;/li>
&lt;li>&lt;code>CalypsoApiProperties&lt;/code> =&amp;gt; &lt;code>CalypsoCardApiProperties&lt;/code>&lt;/li>
&lt;li>&lt;code>SamIOException&lt;/code> =&amp;gt; &lt;code>CryptoIOException&lt;/code>&lt;/li>
&lt;li>&lt;code>CalypsoCardSelection&lt;/code> =&amp;gt; &lt;code>CalypsoCardSelectionExtension&lt;/code>&lt;/li>
&lt;li>&lt;code>GenericCardSelection&lt;/code> =&amp;gt; &lt;code>GenericCardSelectionExtension&lt;/code>&lt;/li>
&lt;li>&lt;code>CardSecuritySetting&lt;/code> =&amp;gt; &lt;code>SymmetricCryptoSecuritySetting&lt;/code>&lt;/li>
&lt;li>&lt;code>createCardSecuritySetting&lt;/code> =&amp;gt; &lt;code>createSymmetricCryptoSecuritySetting&lt;/code>&lt;/li>
&lt;li>&lt;code>processCommands(true)&lt;/code> =&amp;gt; &lt;code>processCommands(ChannelControl.CLOSE_AFTER)&lt;/code>&lt;/li>
&lt;li>&lt;code>processCommands(false)&lt;/code> =&amp;gt; &lt;code>processCommands(ChannelControl.KEEP_OPEN)&lt;/code>&lt;/li>
&lt;li>&lt;code>processApdusToByteArrays(true)&lt;/code> =&amp;gt; &lt;code>processApdusToByteArrays(ChannelControl.CLOSE_AFTER)&lt;/code>&lt;/li>
&lt;li>&lt;code>processApdusToByteArrays(false)&lt;/code> =&amp;gt; &lt;code>processApdusToByteArrays(ChannelControl.KEEP_OPEN)&lt;/code>&lt;/li>
&lt;li>&lt;code>processApdusToHexStrings(true)&lt;/code> =&amp;gt; &lt;code>processApdusToHexStrings(ChannelControl.CLOSE_AFTER)&lt;/code>&lt;/li>
&lt;li>&lt;code>processApdusToHexStrings(false)&lt;/code> =&amp;gt; &lt;code>processApdusToHexStrings(ChannelControl.KEEP_OPEN)&lt;/code>&lt;/li>
&lt;li>&lt;code>createCardSelectionManager()&lt;/code> =&amp;gt; &lt;code>getReaderApiFactory().createCardSelectionManager()&lt;/code>&lt;/li>
&lt;li>&lt;code>createCardSelection()&lt;/code> =&amp;gt;
&lt;ul>
&lt;li>&lt;strong>Calypso&lt;/strong> card extension: &lt;code>getCalypsoCardApiFactory().createCalypsoCardSelectionExtension()&lt;/code>&lt;/li>
&lt;li>&lt;strong>Generic&lt;/strong> card extension: &lt;code>createGenericCardSelectionExtension()&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>createCardTransactionWithoutSecurity&lt;/code> =&amp;gt; &lt;code>getCalypsoCardApiFactory().createFreeTransactionManager&lt;/code>&lt;/li>
&lt;li>&lt;code>createSearchCommandData&lt;/code> =&amp;gt; &lt;code>getCalypsoCardApiFactory().createSearchCommandData&lt;/code>&lt;/li>
&lt;li>&lt;code>prepareComputeSignature&lt;/code> =&amp;gt; &lt;code>getCryptoExtension(CardTransactionLegacySamExtension.class).prepareComputeSignature&lt;/code>&lt;/li>
&lt;li>&lt;code>prepareVerifySignature&lt;/code> =&amp;gt; &lt;code>getCryptoExtension(CardTransactionLegacySamExtension.class).prepareVerifySignature&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="card-selection">Card selection&lt;/h3>
&lt;h4 id="prepare-a-calypso-card-selection-case">Prepare a Calypso card selection case&lt;/h4>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CalypsoCardSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createCardSelection&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterByDfName&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFileOccurrence&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFileControlInformation&lt;/span>&lt;span class="p">(...);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calypsoCardSelection&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>3.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">IsoCardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isoCardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getReaderApiFactory&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createIsoCardSelector&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterByDfName&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFileOccurrence&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFileControlInformation&lt;/span>&lt;span class="p">(...);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CalypsoCardSelectionExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardSelectionExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getCalypsoCardApiFactory&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createCalypsoCardSelectionExtension&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isoCardSelector&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCardSelectionExtension&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="prepare-a-calypso-sam-selection-case">Prepare a Calypso SAM selection case&lt;/h4>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CalypsoSamSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoSamSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createSamSelection&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterByProductType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">productType&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterBySerialNumber&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">serialNumber&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoSamSelection&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>3.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">powerOnDataFilter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">buildPowerOnDataFilter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">productType&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">serialNumber&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">BasicCardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">basicCardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getReaderApiFactory&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createBasicCardSelector&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterByPowerOnData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">powerOnDataFilter&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">LegacySamSelectionExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">legacySamSelectionExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getLegacySamApiFactory&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createLegacySamSelectionExtension&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">basicCardSelector&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">legacySamSelectionExtension&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="prepare-a-generic-card-selection-case">Prepare a Generic card selection case&lt;/h4>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">GenericCardSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">genericCardSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">GenericExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createCardSelection&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterByDfName&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFileOccurrence&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFileControlInformation&lt;/span>&lt;span class="p">(...);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">genericCardSelection&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>3.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">IsoCardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isoCardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getReaderApiFactory&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createIsoCardSelector&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterByDfName&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFileOccurrence&lt;/span>&lt;span class="p">(...)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFileControlInformation&lt;/span>&lt;span class="p">(...);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">GenericCardSelectionExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">genericCardSelectionExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">GenericExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createGenericCardSelectionExtension&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isoCardSelector&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">genericCardSelectionExtension&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="schedule-a-card-selection-scenario">Schedule a card selection scenario&lt;/h4>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">scheduleCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">observableCardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">detectionMode&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">notificationMode&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>3.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">scheduleCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">observableCardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">notificationMode&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="card-transaction">Card Transaction&lt;/h3>
&lt;h4 id="create-a-card-transaction-manager-without-security">Create a card transaction manager without security&lt;/h4>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCardTransactionWithoutSecurity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">card&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>3.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">FreeTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getCalypsoCardApiFactory&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createFreeTransactionManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">card&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="create-a-card-transaction-manager-with-security-regular-mode">Create a card transaction manager with security (regular mode)&lt;/h4>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardSecuritySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">securitySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createCardSecuritySetting&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setControlSamResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCardTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">card&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">securitySetting&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>3.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">SymmetricCryptoCardTransactionManagerFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cryptoCardTransactionManagerFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getLegacySamApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSymmetricCryptoCardTransactionManagerFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">SymmetricCryptoSecuritySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">securitySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getCalypsoCardApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSymmetricCryptoSecuritySetting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cryptoCardTransactionManagerFactory&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">SecureRegularModeTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getCalypsoCardApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSecureRegularModeTransactionManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">card&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">securitySetting&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="create-a-card-transaction-manager-with-security-extended-mode">Create a card transaction manager with security (extended mode)&lt;/h4>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardSecuritySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">securitySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createCardSecuritySetting&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setControlSamResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCardTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">card&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">securitySetting&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>3.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">SymmetricCryptoCardTransactionManagerFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cryptoCardTransactionManagerFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getLegacySamApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSymmetricCryptoCardTransactionManagerFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">SymmetricCryptoSecuritySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">securitySetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getCalypsoCardApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSymmetricCryptoSecuritySetting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cryptoCardTransactionManagerFactory&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">SecureExtendedModeTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getCalypsoCardApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSecureExtendedModeTransactionManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">card&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">securitySetting&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="pso-signature-management-computationverification">PSO signature management (computation/verification)&lt;/h3>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">TraceableSignatureComputationData&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">signatureComputationData&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createTraceableSignatureComputationData&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareComputeSignature&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">signatureComputationData&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>3.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">TraceableSignatureComputationData&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">signatureComputationData&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getLegacySamApiFactory&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">createTraceableSignatureComputationData&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardTransactionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getCryptoExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardTransactionLegacySamExtension&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareComputeSignature&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">signatureComputationData&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="sam-resource-service">SAM resource service&lt;/h3>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardResourceProfileExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samResourceProfileExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSamResourceProfileExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createSamSelection&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterByProductType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ProductType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SAM_C1&lt;/span>&lt;span class="p">));&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>3.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardResourceProfileExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samResourceProfileExtension&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createLegacySamResourceProfileExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getLegacySamApiFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createLegacySamSelectionExtension&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">buildPowerOnDataFilter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LegacySam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ProductType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SAM_C1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">));&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="miscellaneous">Miscellaneous&lt;/h3>
&lt;h4 id="contact-reader-payload-capacity-management">Contact reader payload capacity management&lt;/h4>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ContextSetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">contextSetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getContextSetting&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">setContactReaderPayloadCapacity&lt;/span>&lt;span class="p">(...);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>3.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ContextSetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">contextSetting&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LegacySamExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getContextSetting&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">setContactReaderPayloadCapacity&lt;/span>&lt;span class="p">(...);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;hr>
&lt;h2 id="upgrade-from-1-to-2">Upgrade from &amp;ldquo;1.+&amp;rdquo; to &amp;ldquo;2.+&amp;rdquo;&lt;/h2>
&lt;p>Here is a comparative review of the main API changes between Keyple 1.+ and 2.+:&lt;/p>
&lt;h3 id="dependency-management">Dependency management&lt;/h3>
&lt;p>Use the &lt;a href="./components/overview/configuration-wizard/">configuration wizard&lt;/a> to correctly import the new artifacts into your project.&lt;/p>
&lt;h3 id="initial-configuration">Initial configuration&lt;/h3>
&lt;h4 id="use-of-a-provider-to-access-the-smart-card-service">Use of a provider to access the smart card service&lt;/h4>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">SmartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">SmartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="use-of-builders-to-instantiate-plugin-factories">Use of builders to instantiate plugin factories&lt;/h4>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PcscPluginFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ExceptionHandlerImpl&lt;/span>&lt;span class="p">()));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardReaderObserver&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscPluginFactoryBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">setReaderObservationExceptionHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ExceptionHandlerImpl&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardReaderObserver&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;div class="alert alert-note">
&lt;div>
Exception handlers are no longer required when registering the plugin but only when starting the observation.
&lt;/div>
&lt;/div>
&lt;h4 id="use-of-a-new-interface-dedicated-to-the-management-of-protocols">Use of a new interface dedicated to the management of protocols&lt;/h4>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">activateProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PcscSupportedContactlessProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">((&lt;/span>&lt;span class="n">ConfigurableCardReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">activateProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PcscSupportedContactlessProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_ISO_14443_4&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="use-of-plugin-and-reader-extensions-for-specific-configurations">Use of plugin and reader extensions for specific configurations&lt;/h4>
&lt;div class="alert alert-note">
&lt;div>
The examples below show the evolutions for the configuration of a PC/SC reader but the principle is the same for all plugins and readers.
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setContactless&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setIsoProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">IsoProtocol&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">T1&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderExtension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setContactless&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setIsoProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">IsoProtocol&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">T1&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="card-selection-1">Card selection&lt;/h3>
&lt;h4 id="use-a-manager-instead-of-service-for-card-selection">Use a manager instead of service for card selection&lt;/h4>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCardSelectionManager&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;div class="alert alert-note">
&lt;div>
A new instance of the card selection manager is provided by the smart card service.
&lt;/div>
&lt;/div>
&lt;h4 id="use-of-a-card-extension-to-create-a-card-selection">Use of a card extension to create a card selection&lt;/h4>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">GenericCardSelectionRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">genericCardSelectionRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GenericCardSelectionRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardAid&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GenericExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCardSelection&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">filterByDfName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardAid&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;ul>
&lt;li>The &lt;code>CardSelector&lt;/code> class does not exist anymore.&lt;/li>
&lt;li>A generic card extension is now available.&lt;/li>
&lt;li>The card extension service is used to configure the card selection.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;h4 id="explicit-card-selection">Explicit card selection&lt;/h4>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardSelectionsResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processExplicitSelections&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardSelectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;div class="alert alert-note">
&lt;div>
Note the removal of the &amp;ldquo;s&amp;rdquo; in &lt;code>CardSelectionResult&lt;/code>.
&lt;/div>
&lt;/div>
&lt;h4 id="scheduled-card-selection">Scheduled card selection&lt;/h4>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setDefaultSelectionRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">defaultSelectionsRequest&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">NotificationMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">MATCHED_ONLY&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PollingMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">REPEATING&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardReaderObserver&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">scheduleCardSelectionScenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">DetectionMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">REPEATING&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">NotificationMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">MATCHED_ONLY&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">setReaderObservationExceptionHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ExceptionHandlerImpl&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableCardReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardReaderObserver&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;div class="alert alert-note">
&lt;div>
The selection data is no longer provided to the observable reader but to the selection manager.
It is the observable reader that is provided to the selection manager.
&lt;/div>
&lt;/div>
&lt;h4 id="the-processing-of-the-result-of-the-selection-response-has-changed">The processing of the result of the selection response has changed&lt;/h4>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">AbstractSmartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">defaultSelection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processDefaultSelectionsResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getDefaultSelectionsResponse&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">SmartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionManager&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">parseScheduledCardSelectionsResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getScheduledCardSelectionsResponse&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;div class="alert alert-note">
&lt;div>
&lt;code>AbstractSmartCard&lt;/code> was changed to the &lt;code>SmartCard&lt;/code> interface.
&lt;/div>
&lt;/div>
&lt;h3 id="calypso-card-extension">Calypso Card Extension&lt;/h3>
&lt;h4 id="vocabulary">Vocabulary&lt;/h4>
&lt;ul>
&lt;li>&lt;code>PO&lt;/code> has been replaced by &lt;code>Card&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h4 id="sam-management">SAM management&lt;/h4>
&lt;p>The SAM resource manager has been replaced by a generic &lt;a href="./components/core/keyple-service-resource-lib/">Card Resource Service&lt;/a>.&lt;/p>
&lt;h4 id="card-transaction-1">Card transaction&lt;/h4>
&lt;p>Access to the card transaction manager has changed. It is now done through the card extension service.&lt;/p>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">PoTransaction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoUtils&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getSecuritySettings&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="p">));&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CardTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoExtensionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createCardTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoCard&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSecuritySetting&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="distributed-systems">Distributed systems&lt;/h3>
&lt;h4 id="remote-plugin-registration">Remote plugin registration&lt;/h4>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Init the remote plugin factory.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">RemotePluginServerFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">factory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">RemotePluginServerFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withDefaultPluginName&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withSyncNode&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withPluginObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RemotePluginServerObserver&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">usingEventNotificationPool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Executors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newCachedThreadPool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;server-pool&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Register the remote plugin to the smart card service using the factory.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">factory&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">RemotePluginServerFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">factory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">RemotePluginServerFactoryBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">REMOTE_PLUGIN_NAME&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withSyncNode&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Register the remote plugin to the smart card service using the factory.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">ObservablePlugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ObservablePlugin&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">factory&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Init the remote plugin observer.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setPluginObservationExceptionHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ExceptionHandlerImpl&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RemotePluginServerObserver&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;div class="alert alert-note">
&lt;div>
&lt;ul>
&lt;li>You have to specify the name of the plugin.&lt;/li>
&lt;li>It is no longer necessary to provide a thread pool.&lt;/li>
&lt;li>The exception handler must be provided as for any observable plugin before adding an observer.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;h4 id="local-service-registration">Local service registration&lt;/h4>
&lt;ul>
&lt;li>1.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Init the local service using the associated factory.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">LocalServiceClientFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withDefaultServiceName&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withSyncNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">endpointClient&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withoutReaderObservation&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>2.+&lt;/li>
&lt;/ul>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Init the local service factory.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">LocalServiceClientFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">factory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LocalServiceClientFactoryBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LOCAL_SERVICE_NAME&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withSyncNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">endpointClient&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Init the local service using the associated factory.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">SmartCardServiceProvider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">registerDistributedLocalService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">factory&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;div class="alert alert-note">
&lt;div>
&lt;ul>
&lt;li>You have to specify the name of the local service.&lt;/li>
&lt;li>The local service must be registered with the smart card service.&lt;/li>
&lt;li>It behaves like a plugin or reader and also provides an extension to access specific settings.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Calypso</title><link>https://keyple.org/archives/components-cpp-0.9/extensions/calypso/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/components-cpp-0.9/extensions/calypso/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 0.9 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>0.9.0&lt;/code>&lt;/strong>
     
&lt;i class="fas fa-users-cog pr-1 fa-fw">&lt;/i>
Keyple project
     
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i>
&lt;a href="#download">Download&lt;/a>
     
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-cpp/tree/master/component/keyple-calypso" target="_blank" rel="noopener">GitHub&lt;/a>
     
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-cpp/releases/" target="_blank" rel="noopener">Changelogs&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>Keyple Calypso&lt;/strong> C++ component is a Keyple reader extension for Calypso® technology.&lt;/p>
&lt;p>It can be used on &lt;strong>PC&lt;/strong> and &lt;strong>MAC&lt;/strong> platforms.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/developer-guide/calypso-application/">Developer guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>All sources are available on &lt;a href="https://github.com/eclipse-keyple/keyple-cpp/" target="_blank" rel="noopener">GitHub&lt;/a>.&lt;/p></description></item><item><title>Keyple Calypso</title><link>https://keyple.org/archives/components-java-1.0/extensions/calypso/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/components-java-1.0/extensions/calypso/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>1.0.0&lt;/code>&lt;/strong>
     
&lt;i class="fas fa-users-cog pr-1 fa-fw">&lt;/i>
Keyple project
     
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i>
&lt;a href="#download">Download&lt;/a>
     
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/component/keyple-calypso" target="_blank" rel="noopener">GitHub&lt;/a>
     
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/releases/" target="_blank" rel="noopener">Changelogs&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>Keyple Calypso&lt;/strong> Java component is a Keyple reader extension for Calypso® technology.&lt;/p>
&lt;p>It can be used on &lt;strong>PC&lt;/strong>, &lt;strong>MAC&lt;/strong> and &lt;strong>Android&lt;/strong> platforms.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/developer-guide/calypso-application/">Developer guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../../../archives/docs-1.0/api-reference/java-api/keyple-java-calypso/1.0.0/index.html">JavaDoc API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>All deliverables are available on the &lt;a href="https://search.maven.org/" target="_blank" rel="noopener">Maven Central Repository&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Using &lt;a href="https://gradle.org/" target="_blank" rel="noopener">Gradle&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-java-calypso:1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Using &lt;a href="https://maven.apache.org/" target="_blank" rel="noopener">Maven&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-java-calypso&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Direct &lt;a href="https://central.sonatype.com/search?q=keyple-java-calypso" target="_blank" rel="noopener">download&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>CNA Terminal API</title><link>https://keyple.org/components/standards-compliance/cna-terminal-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/standards-compliance/cna-terminal-api/</guid><description>&lt;br>
&lt;p>Keyple is compliant with the &lt;strong>Terminal API&lt;/strong> specifications provided by the &lt;a href="https://calypsonet.org" target="_blank" rel="noopener">Calypso Networks Association&lt;/a> that standardize how to manage cards, readers, reader events and card selection.&lt;/p>
&lt;p>This compliance allows Keyple to obtain certifications from the Calypso Networks Association.
It is a guarantee of reliability and reproducibility of the processes implemented on a variety of devices.&lt;/p>
&lt;p>The open source &lt;a href="https://keypop.org" target="_blank" rel="noopener">Eclipse Keypop&lt;/a> project exposes the &lt;strong>Terminal API&lt;/strong> specifications in the form of
&lt;strong>Java&lt;/strong> and &lt;strong>C++&lt;/strong> interfaces,
and Keyple is based on these interfaces.&lt;/p>
&lt;br>
&lt;h2 id="reader--card-apis">Reader &amp;amp; Card APIs&lt;/h2>
&lt;p>These two APIs standardize the way that a reader and a card interact.
They are generic and apply to all card and reader technologies.&lt;/p>
&lt;p>The &lt;strong>Reader API&lt;/strong> must be used by developers of applications and card extensions, while the &lt;strong>Card API&lt;/strong> must be used &lt;strong>only&lt;/strong> by developers of card extensions.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://keypop.org/apis/reader-layer/reader-api/" target="_blank" rel="noopener">Keypop Reader API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://keypop.org/apis/reader-layer/card-api/" target="_blank" rel="noopener">Keypop Card API&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="calypso-apis">Calypso APIs&lt;/h2>
&lt;p>These high-level APIs standardizes the way to interact with a Calypso® product (card, NFC smartphone applet/application, SAM, etc&amp;hellip;).&lt;/p>
&lt;p>These APIs should be used by developers of Calypso applications.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://keypop.org/apis/calypso-layer/calypso-card-api/" target="_blank" rel="noopener">Keypop Calypso Card API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://keypop.org/apis/calypso-layer/calypso-legacysam-api/" target="_blank" rel="noopener">Keypop Calypso Crypto Legacy SAM API&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Components map</title><link>https://keyple.org/components/overview/components-map/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/overview/components-map/</guid><description>&lt;br>
&lt;p>The dependencies between the Keyple components are shown in the diagram below:&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/developer-guide/component-dependencies/component_dependencies_overview.drawio.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>Key points:&lt;/p>
&lt;ul>
&lt;li>Each component has its &lt;strong>own life cycle&lt;/strong>.&lt;/li>
&lt;li>There are two types of Keyple components: &lt;strong>APIs&lt;/strong> and &lt;strong>libraries&lt;/strong>.&lt;/li>
&lt;li>Some APIs are provided by the &lt;a href="https://keypop.org" target="_blank" rel="noopener">Eclipse Keypop&lt;/a> open source project.&lt;/li>
&lt;li>APIs contain &lt;strong>only interfaces&lt;/strong>.&lt;/li>
&lt;li>Libraries contain &lt;strong>interfaces and their implementation&lt;/strong>.&lt;/li>
&lt;li>Some APIs are &lt;strong>public&lt;/strong> while others are &lt;strong>internal&lt;/strong>.&lt;/li>
&lt;li>All libraries are &lt;strong>public&lt;/strong>.&lt;/li>
&lt;li>All &lt;strong>libraries&lt;/strong> and &lt;strong>public APIs&lt;/strong> can be used by the developer of the application.&lt;/li>
&lt;li>The &lt;strong>internal APIs&lt;/strong> are intended for the developer of Keyple add-ons only (e.g. custom reader plugin, custom card extension or custom distributed solution).&lt;/li>
&lt;/ul></description></item><item><title>Core services</title><link>https://keyple.org/learn/keyple-in-depth/core-services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/keyple-in-depth/core-services/</guid><description>&lt;br>
&lt;h2 id="internal-adapters-release">Internal adapters (release)&lt;/h2>
&lt;h3 id="service">Service&lt;/h3>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://raw.githubusercontent.com/eclipse/keyple-service-java-lib/3.3.5/src/main/uml/adapter_class_diagram.svg" alt="coming soon!" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;h3 id="card-resource-service">Card resource service&lt;/h3>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://raw.githubusercontent.com/eclipse/keyple-service-resource-java-lib/3.1.0/src/main/uml/adapter_class_diagram.svg" alt="coming soon!" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;h3 id="distributed">Distributed&lt;/h3>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://raw.githubusercontent.com/eclipse/keyple-distributed-network-java-lib/2.5.1/src/main/uml/adapter_class_diagram.svg" alt="coming soon!" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;br>
&lt;h2 id="internal-adapters-snapshot">Internal adapters (snapshot)&lt;/h2>
&lt;h3 id="service-1">Service&lt;/h3>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://raw.githubusercontent.com/eclipse/keyple-service-java-lib/main/src/main/uml/adapter_class_diagram.svg" alt="coming soon!" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;h3 id="card-resource-service-1">Card resource service&lt;/h3>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://raw.githubusercontent.com/eclipse/keyple-service-resource-java-lib/main/src/main/uml/adapter_class_diagram.svg" alt="coming soon!" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;h3 id="distributed-1">Distributed&lt;/h3>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://raw.githubusercontent.com/eclipse/keyple-distributed-network-java-lib/main/src/main/uml/adapter_class_diagram.svg" alt="coming soon!" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p></description></item><item><title>Java examples</title><link>https://keyple.org/learn/code-samples/java-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/code-samples/java-example/</guid><description>&lt;br>
&lt;p>&lt;a href="https://github.com/eclipse-keyple/keyple-java-example" target="_blank" rel="noopener">https://github.com/eclipse-keyple/keyple-java-example&lt;/a>&lt;/p></description></item><item><title>Keyple Distributed Local</title><link>https://keyple.org/archives/components-java-1.0/distributed-systems/local/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/components-java-1.0/distributed-systems/local/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>1.0.0&lt;/code>&lt;/strong>
     
&lt;i class="fas fa-users-cog pr-1 fa-fw">&lt;/i>
Keyple project
     
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i>
&lt;a href="#download">Download&lt;/a>
     
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/component/keyple-distributed/local" target="_blank" rel="noopener">GitHub&lt;/a>
     
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/releases/" target="_blank" rel="noopener">Changelogs&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>Keyple Distributed Local&lt;/strong> Java component is the part of the &lt;strong>Keyple Distributed&lt;/strong> solution which contains all the &lt;strong>local&lt;/strong> services.&lt;/p>
&lt;p>It must be imported and used by the application installed on the terminal having local access to the smart card reader but wishes to delegate all or part of the ticketing processing to a remote application.&lt;/p>
&lt;p>It is important to note that it uses and exposes the APIs exposed by &lt;a href="./archives/components-java-1.0/distributed-systems/network/">Keyple Distributed Network&lt;/a> component.&lt;/p>
&lt;p>It is compatible with &lt;strong>PC&lt;/strong>, &lt;strong>MAC&lt;/strong> and &lt;strong>Android&lt;/strong> platforms.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/developer-guide/distributed-application/">Developer guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../../../archives/docs-1.0/api-reference/java-api/keyple-java-distributed-local/1.0.0/index.html">JavaDoc API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>All deliverables are available on the &lt;a href="https://search.maven.org/" target="_blank" rel="noopener">Maven Central Repository&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Using &lt;a href="https://gradle.org/" target="_blank" rel="noopener">Gradle&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-java-distributed-local:1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Using &lt;a href="https://maven.apache.org/" target="_blank" rel="noopener">Maven&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-java-distributed-local&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Direct &lt;a href="https://central.sonatype.com/search?q=keyple-java-distributed-local" target="_blank" rel="noopener">download&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Keyple Distributed Network</title><link>https://keyple.org/archives/components-java-1.0/distributed-systems/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/components-java-1.0/distributed-systems/network/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>1.0.0&lt;/code>&lt;/strong>
     
&lt;i class="fas fa-users-cog pr-1 fa-fw">&lt;/i>
Keyple project
     
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i>
&lt;a href="#download">Download&lt;/a>
     
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/component/keyple-distributed/network" target="_blank" rel="noopener">GitHub&lt;/a>
     
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/releases/" target="_blank" rel="noopener">Changelogs&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>Keyple Distributed Network&lt;/strong> Java component is the part of the &lt;strong>Keyple Distributed&lt;/strong> solution which contains the common network elements used by &lt;a href="./archives/components-java-1.0/distributed-systems/local/">Keyple Distributed Local&lt;/a> and &lt;a href="./archives/components-java-1.0/distributed-systems/remote/">Keyple Distributed Remote&lt;/a> components.&lt;/p>
&lt;p>This library &lt;strong>should not be import explicitly because it&amp;rsquo;s imported by transitivity&lt;/strong> by the other components.&lt;/p>
&lt;p>It is compatible with &lt;strong>PC&lt;/strong>, &lt;strong>MAC&lt;/strong> and &lt;strong>Android&lt;/strong> platforms.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/developer-guide/distributed-application/">Developer guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../../../archives/docs-1.0/api-reference/java-api/keyple-java-distributed-network/1.0.0/index.html">JavaDoc API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>All deliverables are available on the &lt;a href="https://search.maven.org/" target="_blank" rel="noopener">Maven Central Repository&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Using &lt;a href="https://gradle.org/" target="_blank" rel="noopener">Gradle&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-java-distributed-network:1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Using &lt;a href="https://maven.apache.org/" target="_blank" rel="noopener">Maven&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-java-distributed-network&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Direct &lt;a href="https://central.sonatype.com/search?q=keyple-java-distributed-network" target="_blank" rel="noopener">download&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Keyple Plugin NFC</title><link>https://keyple.org/archives/components-java-1.0/plugins/nfc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/components-java-1.0/plugins/nfc/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>1.0.0&lt;/code>&lt;/strong>
     
&lt;i class="fas fa-users-cog pr-1 fa-fw">&lt;/i>
Keyple project
     
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i>
&lt;a href="#download">Download&lt;/a>
     
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/android/keyple-plugin/android-nfc" target="_blank" rel="noopener">GitHub&lt;/a>
     
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/releases/" target="_blank" rel="noopener">Changelogs&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>Keyple Plugin NFC&lt;/strong> Java component is a Keyple plugin for &lt;strong>Android&lt;/strong> devices having &lt;strong>NFC&lt;/strong> capabilities.&lt;/p>
&lt;p>It is compatible with &lt;strong>Android 4.4 minimum&lt;/strong>.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/developer-guide/standalone-application/">Developer guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../../../archives/docs-1.0/api-reference/java-api/keyple-android-plugin-nfc/1.0.0/index.html">JavaDoc API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>All deliverables are available on the &lt;a href="https://search.maven.org/" target="_blank" rel="noopener">Maven Central Repository&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Using &lt;a href="https://gradle.org/" target="_blank" rel="noopener">Gradle&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-android-plugin-nfc:1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Using &lt;a href="https://maven.apache.org/" target="_blank" rel="noopener">Maven&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-android-plugin-nfc&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Direct &lt;a href="https://central.sonatype.com/search?q=keyple-android-plugin-nfc" target="_blank" rel="noopener">download&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Keyple Plugin OMAPI</title><link>https://keyple.org/archives/components-java-1.0/plugins/omapi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/components-java-1.0/plugins/omapi/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>1.0.0&lt;/code>&lt;/strong>
     
&lt;i class="fas fa-users-cog pr-1 fa-fw">&lt;/i>
Keyple project
     
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i>
&lt;a href="#download">Download&lt;/a>
     
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/android/keyple-plugin/android-omapi" target="_blank" rel="noopener">GitHub&lt;/a>
     
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/releases/" target="_blank" rel="noopener">Changelogs&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>Keyple Plugin OMAPI&lt;/strong> Java component is a Keyple plugin for &lt;strong>Android&lt;/strong> devices using &lt;strong>OMAPI&lt;/strong> technology.&lt;/p>
&lt;p>It is compatible with &lt;strong>Android 4.4 minimum&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>OMAPI (Open Mobile Application Programming Interface)&lt;/strong> is the mechanism which enables an authorized mobile app to communicate with applets within a &lt;strong>SE&lt;/strong> in a device.
This allows the app to benefit from enhanced SE-based security services.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/developer-guide/standalone-application/">Developer guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../../../archives/docs-1.0/api-reference/java-api/keyple-android-plugin-omapi/1.0.0/index.html">JavaDoc API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>All deliverables are available on the &lt;a href="https://search.maven.org/" target="_blank" rel="noopener">Maven Central Repository&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Using &lt;a href="https://gradle.org/" target="_blank" rel="noopener">Gradle&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-android-plugin-omapi:1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Using &lt;a href="https://maven.apache.org/" target="_blank" rel="noopener">Maven&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-android-plugin-omapi&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Direct &lt;a href="https://central.sonatype.com/search?q=keyple-android-plugin-omapi" target="_blank" rel="noopener">download&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Overview</title><link>https://keyple.org/what-is-keyple/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/what-is-keyple/overview/</guid><description>&lt;p>Coming from a rather closed technical environment, ticketing for transport is essentially based on proprietary solutions provided by manufacturers.
However, in order for the concept of Mobility as a Service to become a reality, and at a reasonable cost, the ecosystem should, as far as possible,
rely on open standards, APIs and middlewares as well as Open Source technologies. This openness has already been a reality for several years in the field
of passenger information and has enabled the explosion of rich and high-quality applications, thanks in particular to Open Data. Today, Eclipse
Keyple is paving the way for ticketing to follow the same path, by making available for free the first fully Open Source API.&lt;/p>
&lt;p>Eclipse Keyple® accelerates the integration and development of ticketing applications by enabling multimodal transport services, public transport
operators and event organizers to implement ticketing and access control systems based on a common, open and modular base.&lt;/p>
&lt;p>Eclipse Keyple® works with Keyple&amp;rsquo;s extensions. The first available extension allows you to benefit from Calypso®&amp;rsquo;s main features of reliability,
security and interoperability.&lt;/p>
&lt;p>Eclipse Keyple® transforms complex contactless ticketing, transportation and event access systems into a simple integration to manage terminal
readers and portals that use smart cards and mobile applications to enter and exit.&lt;/p>
&lt;p>As an open source technology, Eclipse Keyple® offers uniformity of structure but does not lock you into a specific ticketing system. Plugins and
extensions are being created, or may be created by developers, to allow ticket processing integrating technologies other than Calypso®, based on
several programming languages.&lt;/p></description></item><item><title>Keyple Plugin PC/SC</title><link>https://keyple.org/archives/components-cpp-0.9/plugins/pcsc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/components-cpp-0.9/plugins/pcsc/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 0.9 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>0.9.0&lt;/code>&lt;/strong>
     
&lt;i class="fas fa-users-cog pr-1 fa-fw">&lt;/i>
Keyple project
     
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i>
&lt;a href="#download">Download&lt;/a>
     
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-cpp/tree/master/component/keyple-plugin/pcsc" target="_blank" rel="noopener">GitHub&lt;/a>
     
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-cpp/releases/" target="_blank" rel="noopener">Changelogs&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>Keyple Plugin PC/SC&lt;/strong> C++ component is a Keyple plugin for &lt;strong>PC/SC&lt;/strong> smart card readers.&lt;/p>
&lt;p>It is compatible with &lt;strong>PC/SC Reader&lt;/strong> (Windows PC/SC WinScard API, Unix PC/SC lite API) equipment.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/developer-guide/standalone-application/">Developer guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>All sources are available on &lt;a href="https://github.com/eclipse-keyple/keyple-cpp/" target="_blank" rel="noopener">GitHub&lt;/a>.&lt;/p></description></item><item><title>Keyple Plugin PC/SC</title><link>https://keyple.org/archives/components-java-1.0/plugins/pcsc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/components-java-1.0/plugins/pcsc/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>1.0.0&lt;/code>&lt;/strong>
     
&lt;i class="fas fa-users-cog pr-1 fa-fw">&lt;/i>
Keyple project
     
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i>
&lt;a href="#download">Download&lt;/a>
     
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/component/keyple-plugin/pcsc" target="_blank" rel="noopener">GitHub&lt;/a>
     
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/releases/" target="_blank" rel="noopener">Changelogs&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>Keyple Plugin PC/SC&lt;/strong> Java component is a Keyple plugin for &lt;strong>PC/SC&lt;/strong> smart card readers.&lt;/p>
&lt;p>It is compatible with &lt;strong>PC/SC Reader&lt;/strong> (Windows PC/SC WinScard API, Unix PC/SC lite API) equipment.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/developer-guide/standalone-application/">Developer guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../../../archives/docs-1.0/api-reference/java-api/keyple-java-plugin-pcsc/1.0.0/index.html">JavaDoc API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>All deliverables are available on the &lt;a href="https://search.maven.org/" target="_blank" rel="noopener">Maven Central Repository&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Using &lt;a href="https://gradle.org/" target="_blank" rel="noopener">Gradle&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-java-plugin-pcsc:1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Using &lt;a href="https://maven.apache.org/" target="_blank" rel="noopener">Maven&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-java-plugin-pcsc&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Direct &lt;a href="https://central.sonatype.com/search?q=keyple-java-plugin-pcsc" target="_blank" rel="noopener">download&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Keyple Distributed Remote</title><link>https://keyple.org/archives/components-java-1.0/distributed-systems/remote/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/components-java-1.0/distributed-systems/remote/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>1.0.0&lt;/code>&lt;/strong>
     
&lt;i class="fas fa-users-cog pr-1 fa-fw">&lt;/i>
Keyple project
     
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i>
&lt;a href="#download">Download&lt;/a>
     
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/component/keyple-distributed/remote" target="_blank" rel="noopener">GitHub&lt;/a>
     
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/releases/" target="_blank" rel="noopener">Changelogs&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>Keyple Distributed Remote&lt;/strong> Java component is the part of the &lt;strong>Keyple Distributed&lt;/strong> solution which contains all the &lt;strong>remote&lt;/strong> plugins.&lt;/p>
&lt;p>It must be imported and used by the application installed on the terminal not having local access to the smart card reader and that wishes to control the reader remotely.&lt;/p>
&lt;p>It is important to note that it uses and exposes the APIs exposed by &lt;a href="./archives/components-java-1.0/distributed-systems/network/">Keyple Distributed Network&lt;/a> component.&lt;/p>
&lt;p>It is compatible with &lt;strong>PC&lt;/strong>, &lt;strong>MAC&lt;/strong> and &lt;strong>Android&lt;/strong> platforms.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/developer-guide/distributed-application/">Developer guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../../../archives/docs-1.0/api-reference/java-api/keyple-java-distributed-remote/1.0.0/index.html">JavaDoc API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>All deliverables are available on the &lt;a href="https://search.maven.org/" target="_blank" rel="noopener">Maven Central Repository&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Using &lt;a href="https://gradle.org/" target="_blank" rel="noopener">Gradle&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-java-distributed-remote:1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Using &lt;a href="https://maven.apache.org/" target="_blank" rel="noopener">Maven&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-java-distributed-remote&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Direct &lt;a href="https://central.sonatype.com/search?q=keyple-java-distributed-remote" target="_blank" rel="noopener">download&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Keyple Plugin Stub</title><link>https://keyple.org/archives/components-cpp-0.9/plugins/stub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/components-cpp-0.9/plugins/stub/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 0.9 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>0.9.0&lt;/code>&lt;/strong>
     
&lt;i class="fas fa-users-cog pr-1 fa-fw">&lt;/i>
Keyple project
     
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i>
&lt;a href="#download">Download&lt;/a>
     
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-cpp/tree/master/component/keyple-plugin/stub" target="_blank" rel="noopener">GitHub&lt;/a>
     
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-cpp/releases/" target="_blank" rel="noopener">Changelogs&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>Keyple Plugin Stub&lt;/strong> C++ component is a Keyple plugin used to &lt;strong>stub&lt;/strong> smart card readers.&lt;/p>
&lt;p>It is compatible with &lt;strong>PC&lt;/strong> and &lt;strong>MAC&lt;/strong> platforms.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/developer-guide/standalone-application/">Developer guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>All sources are available on &lt;a href="https://github.com/eclipse-keyple/keyple-cpp/" target="_blank" rel="noopener">GitHub&lt;/a>.&lt;/p></description></item><item><title>Keyple Plugin Stub</title><link>https://keyple.org/archives/components-java-1.0/plugins/stub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/components-java-1.0/plugins/stub/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>1.0.0&lt;/code>&lt;/strong>
     
&lt;i class="fas fa-users-cog pr-1 fa-fw">&lt;/i>
Keyple project
     
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i>
&lt;a href="#download">Download&lt;/a>
     
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/component/keyple-plugin/stub" target="_blank" rel="noopener">GitHub&lt;/a>
     
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-java/releases/" target="_blank" rel="noopener">Changelogs&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>Keyple Plugin Stub&lt;/strong> Java component is a Keyple plugin used to &lt;strong>stub&lt;/strong> smart card readers.&lt;/p>
&lt;p>It is compatible with &lt;strong>PC&lt;/strong>, &lt;strong>MAC&lt;/strong> and &lt;strong>Android&lt;/strong> platforms.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/developer-guide/standalone-application/">Developer guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../../../archives/docs-1.0/api-reference/java-api/keyple-java-plugin-stub/1.0.0/index.html">JavaDoc API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>All deliverables are available on the &lt;a href="https://search.maven.org/" target="_blank" rel="noopener">Maven Central Repository&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Using &lt;a href="https://gradle.org/" target="_blank" rel="noopener">Gradle&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-java-plugin-stub:1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Using &lt;a href="https://maven.apache.org/" target="_blank" rel="noopener">Maven&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-java-plugin-stub&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Direct &lt;a href="https://central.sonatype.com/search?q=keyple-java-plugin-stub" target="_blank" rel="noopener">download&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>C++ examples</title><link>https://keyple.org/learn/code-samples/cpp-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/code-samples/cpp-example/</guid><description>&lt;br>
&lt;p>&lt;a href="https://github.com/eclipse-keyple/keyple-cpp-example" target="_blank" rel="noopener">https://github.com/eclipse-keyple/keyple-cpp-example&lt;/a>&lt;/p></description></item><item><title>Calypso card extension</title><link>https://keyple.org/learn/keyple-in-depth/calypso-card-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/keyple-in-depth/calypso-card-extension/</guid><description>&lt;br>
&lt;p>The diagram below illustrates the sequence of exchanges and the grouping of APDU commands during a secure Calypso transaction:&lt;/p>
&lt;figure id="figure-calypso-secure-transaction">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/keyple-in-depth/calypso_secure_transaction_sequence_diagram.svg" alt="Calypso secure transaction" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Calypso secure transaction
&lt;/figcaption>&lt;/figure></description></item><item><title>Configuration wizard</title><link>https://keyple.org/components/overview/configuration-wizard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/overview/configuration-wizard/</guid><description>&lt;br>
&lt;p>This online tool generates for you the &lt;code>dependencies&lt;/code> section of Gradle or Maven configuration files.
Choose your project profile and copy/paste the generated result into your project dependency manager.&lt;/p>
&lt;p>What type of Keyple component are you working on?&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#application">An application&lt;/a>&lt;/li>
&lt;li>&lt;a href="#reader-plugin-add-on">A specific reader plugin add-on&lt;/a>&lt;/li>
&lt;li>&lt;a href="#card-extension-add-on">A specific card extension add-on&lt;/a>&lt;/li>
&lt;li>&lt;a href="#distributed-solution-add-on">An alternate distributed solution add-on&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="application">Application&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Which card extension do you want to use?&lt;/p>
&lt;blockquote>
&lt;div>
&lt;input type="checkbox" id="cardGeneric" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="cardGeneric">Generic (with low-level API)&lt;/label>
&lt;/div>
&lt;div>
&lt;input type="checkbox" id="cardCalypso" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="cardCalypso">Calypso Card&lt;/label>
&lt;/div>
&lt;div>
&lt;input type="checkbox" id="cardCalypsoLegacySam" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="cardCalypsoLegacySam">Calypso Legacy SAM (required for secure card transactions)&lt;/label>
&lt;/div>
&lt;div>
&lt;input type="checkbox" id="cardCalypsoPki" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="cardCalypsoPki">Calypso PKI (required for PKI card transactions)&lt;/label>
&lt;/div>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>Which reader plugin do you want to use?&lt;/p>
&lt;blockquote>
&lt;div>
&lt;input type="checkbox" id="pluginAndroidNfc" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="pluginAndroidNfc">Android NFC&lt;/label>
&lt;/div>
&lt;div>
&lt;input type="checkbox" id="pluginAndroidOmapi" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="pluginAndroidOmapi">Android OMAPI&lt;/label>
&lt;/div>
&lt;div>
&lt;input type="checkbox" id="pluginCardResource" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="pluginCardResource">Card Resource&lt;/label>
&lt;/div>
&lt;div>
&lt;input type="checkbox" id="pluginPcsc" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="pluginPcsc">PC/SC&lt;/label>
&lt;/div>
&lt;div>
&lt;input type="checkbox" id="pluginStub" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="pluginStub">Stub (simulated reader)&lt;/label>
&lt;/div>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>In case of a distributed system, on which side is your application located?&lt;/p>
&lt;blockquote>
&lt;div>
&lt;input type="checkbox" id="distributedLocal" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="distributedLocal">On the device &lt;strong>having&lt;/strong> local access to the smart card reader&lt;/label>
&lt;/div>
&lt;div>
&lt;input type="checkbox" id="distributedRemote" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="distributedRemote">On the device &lt;strong>not having&lt;/strong> local access to the smart card reader&lt;/label>
&lt;/div>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>Do you need additional services?&lt;/p>
&lt;blockquote>
&lt;div>
&lt;input type="checkbox" id="serviceResource" onclick="javascript:updateAppDependencies(1, this);">
&lt;label for="serviceResource">Service for dynamic card resource allocation (e.g. for HSM or pool of readers)&lt;/label>
&lt;/div>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;ul class="nav nav-tabs" id="tabs-1" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-1-0-tab" data-toggle="tab" href="#tabs-1-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-1-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-1-1-tab" data-toggle="tab" href="#tabs-1-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-1-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-1-2-tab" data-toggle="tab" href="#tabs-1-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-1-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-1', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-1-content">&lt;div class="tab-pane fade show active"
id="tabs-1-0" role="tabpanel" aria-labelled-by="tabs-1-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-1" role="tabpanel" aria-labelled-by="tabs-1-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-2" role="tabpanel" aria-labelled-by="tabs-1-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="reader-plugin-add-on">Reader plugin add-on&lt;/h2>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Begin Keyple configuration (generated by &amp;#39;https://keyple.org/components/overview/configuration-wizard/&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-common-java-api:2.0.1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-plugin-java-api:2.3.1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-util-java-lib:2.4.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// End Keyple configuration&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Begin Keyple configuration (generated by &amp;#39;https://keyple.org/components/overview/configuration-wizard/&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-common-java-api:2.0.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-plugin-java-api:2.3.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-util-java-lib:2.4.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">//&lt;/span> &lt;span class="n">End&lt;/span> &lt;span class="n">Keyple&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- Begin Keyple configuration (generated by &amp;#39;https://keyple.org/components/overview/configuration-wizard/&amp;#39;) --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-common-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.0.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.3.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-util-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.4.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- End Keyple configuration --&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="card-extension-add-on">Card extension add-on&lt;/h2>
&lt;ul>
&lt;li>Do you need additional services?
&lt;blockquote>
&lt;div>
&lt;input type="checkbox" id="cardServiceResource" onclick="javascript:updateCardDependencies(3, this);">
&lt;label for="cardServiceResource">Service for dynamic card resource allocation (e.g. HSM or pool of readers)&lt;/label>
&lt;/div>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;ul class="nav nav-tabs" id="tabs-3" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-3-0-tab" data-toggle="tab" href="#tabs-3-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-3-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-3-1-tab" data-toggle="tab" href="#tabs-3-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-3-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-3-2-tab" data-toggle="tab" href="#tabs-3-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-3-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-3', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-3-content">&lt;div class="tab-pane fade show active"
id="tabs-3-0" role="tabpanel" aria-labelled-by="tabs-3-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-3-1" role="tabpanel" aria-labelled-by="tabs-3-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-3-2" role="tabpanel" aria-labelled-by="tabs-3-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="distributed-solution-add-on">Distributed solution add-on&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>For the &amp;ldquo;Local Service&amp;rdquo; component:&lt;/strong>
&lt;ul class="nav nav-tabs" id="tabs-4" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-4-0-tab" data-toggle="tab" href="#tabs-4-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-4-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-4-1-tab" data-toggle="tab" href="#tabs-4-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-4-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-4-2-tab" data-toggle="tab" href="#tabs-4-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-4-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-4', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-4-content">&lt;div class="tab-pane fade show active"
id="tabs-4-0" role="tabpanel" aria-labelled-by="tabs-4-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Begin Keyple configuration (generated by &amp;#39;https://keyple.org/components/overview/configuration-wizard/&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-common-java-api:2.0.1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-distributed-local-java-api:2.2.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-util-java-lib:2.4.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// End Keyple configuration&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-4-1" role="tabpanel" aria-labelled-by="tabs-4-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Begin Keyple configuration (generated by &amp;#39;https://keyple.org/components/overview/configuration-wizard/&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-common-java-api:2.0.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-distributed-local-java-api:2.2.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-util-java-lib:2.4.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">//&lt;/span> &lt;span class="n">End&lt;/span> &lt;span class="n">Keyple&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-4-2" role="tabpanel" aria-labelled-by="tabs-4-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- Begin Keyple configuration (generated by &amp;#39;https://keyple.org/components/overview/configuration-wizard/&amp;#39;) --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-common-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.0.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-distributed-local-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.2.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-util-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.4.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- End Keyple configuration --&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>For the &amp;ldquo;Remote Plugin&amp;rdquo; component:&lt;/strong>
&lt;ul class="nav nav-tabs" id="tabs-5" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-5-0-tab" data-toggle="tab" href="#tabs-5-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-5-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-5-1-tab" data-toggle="tab" href="#tabs-5-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-5-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-5-2-tab" data-toggle="tab" href="#tabs-5-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-5-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-5', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-5-content">&lt;div class="tab-pane fade show active"
id="tabs-5-0" role="tabpanel" aria-labelled-by="tabs-5-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Begin Keyple configuration (generated by &amp;#39;https://keyple.org/components/overview/configuration-wizard/&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-common-java-api:2.0.1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-distributed-remote-java-api:3.1.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-util-java-lib:2.4.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// End Keyple configuration&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-5-1" role="tabpanel" aria-labelled-by="tabs-5-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Begin Keyple configuration (generated by &amp;#39;https://keyple.org/components/overview/configuration-wizard/&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-common-java-api:2.0.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-distributed-remote-java-api:3.1.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-util-java-lib:2.4.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">//&lt;/span> &lt;span class="n">End&lt;/span> &lt;span class="n">Keyple&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-5-2" role="tabpanel" aria-labelled-by="tabs-5-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- Begin Keyple configuration (generated by &amp;#39;https://keyple.org/components/overview/configuration-wizard/&amp;#39;) --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-common-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.0.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-distributed-remote-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.1.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-util-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.4.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- End Keyple configuration --&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!-- All groovy dependencies -->
&lt;code id="all-groovy-dependencies" style="display:none">
&lt;span id="keyple-common-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-common-java-api:2.0.1'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-service-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-service-java-lib:3.3.5'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-service-resource-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-service-resource-java-lib:3.1.0'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-util-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-util-java-lib:2.4.0'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-calypso-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-card-calypso-java-lib:3.1.7'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-calypso-crypto-legacysam-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-card-calypso-crypto-legacysam-java-lib:0.9.0'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-calypso-crypto-pki-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-card-calypso-crypto-pki-java-lib:0.2.1'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-generic-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-card-generic-java-lib:3.1.2'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-distributed-local-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-distributed-local-java-lib:2.5.2'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-distributed-network-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-distributed-network-java-lib:2.5.1'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-distributed-remote-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-distributed-remote-java-lib:2.5.1'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-android-nfc-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-plugin-android-nfc-java-lib:3.0.0'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-android-omapi-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-plugin-android-omapi-java-lib:2.1.0'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-cardresource-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-plugin-cardresource-java-lib:2.0.1'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-pcsc-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-plugin-pcsc-java-lib:2.4.2'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-stub-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keyple:keyple-plugin-stub-java-lib:2.2.1'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-reader-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keypop:keypop-reader-java-api:2.0.1'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-card-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keypop:keypop-card-java-api:2.0.1'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-calypso-card-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keypop:keypop-calypso-card-java-api:2.1.2'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-calypso-crypto-legacysam-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">'org.eclipse.keypop:keypop-calypso-crypto-legacysam-java-api:0.7.0'&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;/code>
&lt;!-- All kotlin dependencies -->
&lt;code id="all-kotlin-dependencies" style="display:none">
&lt;span id="keyple-common-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-common-java-api:2.0.1"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-service-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-service-java-lib:3.3.5"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-service-resource-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-service-resource-java-lib:3.1.0"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-util-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-util-java-lib:2.4.0"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-calypso-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-card-calypso-java-lib:3.1.7"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-calypso-crypto-legacysam-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-card-calypso-crypto-legacysam-java-lib:0.9.0"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-calypso-crypto-pki-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-card-calypso-crypto-pki-java-lib:0.2.1"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-generic-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-card-generic-java-lib:3.1.2"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-distributed-local-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-distributed-local-java-lib:2.5.2"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-distributed-network-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-distributed-network-java-lib:2.5.1"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-distributed-remote-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-distributed-remote-java-lib:2.5.1"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-android-nfc-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-plugin-android-nfc-java-lib:3.0.0"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-android-omapi-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-plugin-android-omapi-java-lib:2.1.0"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-cardresource-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-plugin-cardresource-java-lib:2.0.1"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-pcsc-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-plugin-pcsc-java-lib:2.4.2"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-stub-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keyple:keyple-plugin-stub-java-lib:2.2.1"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-reader-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keypop:keypop-reader-java-api:2.0.1"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-card-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keypop:keypop-card-java-api:2.0.1"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-calypso-card-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keypop:keypop-calypso-card-java-api:2.1.2"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-calypso-crypto-legacysam-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"org.eclipse.keypop:keypop-calypso-crypto-legacysam-java-api:0.7.0"&lt;/span>)&lt;/span>&lt;/span>&lt;/span>
&lt;/code>
&lt;!-- All maven dependencies -->
&lt;pre style="display:none">
&lt;code id="all-maven-dependencies">
&lt;span id="keyple-common-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-common-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.0.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-service-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-service-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.3.5&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-service-resource-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-service-resource-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.1.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-util-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-util-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.4.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-calypso-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-card-calypso-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.1.7&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-calypso-crypto-legacysam-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-card-calypso-crypto-legacysam-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>0.9.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-calypso-crypto-pki-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-card-calypso-crypto-pki-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>0.2.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-card-generic-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-card-generic-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.1.2&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-distributed-local-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-distributed-local-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.5.2&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-distributed-network-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-distributed-network-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.5.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-distributed-remote-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-distributed-remote-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.5.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-android-nfc-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-android-nfc-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.0.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-android-omapi-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-android-omapi-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.1.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-cardresource-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-cardresource-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.0.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-pcsc-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-pcsc-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.4.2&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keyple-plugin-stub-java-lib">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-stub-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.2.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-reader-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keypop&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keypop-reader-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.0.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-card-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keypop&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keypop-card-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.0.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-calypso-card-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keypop&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keypop-calypso-card-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.1.2&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span id="keypop-calypso-crypto-legacysam-java-api">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keypop&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keypop-calypso-crypto-legacysam-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>0.7.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>&lt;/span>&lt;/span>
&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;/code>
&lt;/pre>
&lt;script type="text/javascript">
document.body.onload = function() {
updateAppDependencies(1, null);
updateCardDependencies(3, null);
};
&lt;/script></description></item><item><title>Why trust Eclipse Keyple®?</title><link>https://keyple.org/what-is-keyple/why-trust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/what-is-keyple/why-trust/</guid><description>&lt;p>Eclipse Keyple® is an Eclipse open source project currently leaded by Calypso Networks Association, which has been the leader in contactless
electronic ticketing transportation standards since 2003.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Free, easy-to-use and flexible&lt;/th>
&lt;th>Built by developers, for developers&lt;/th>
&lt;th>Tailored to public entities requirements&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Interoperable with any smart card reader solution (standard/proprietary, local/remote)&lt;/td>
&lt;td>Open source libraries in Java and C++&lt;/td>
&lt;td>Audit and certification&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Compatible with any terminal architecture (mobile, embedded, server)&lt;/td>
&lt;td>Developer-friendly, up-to-date documentation, code samples and how-to guides&lt;/td>
&lt;td>Permanent compliance to the latest Calypso® release&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Options for creating add-on features that incorporate Calypso’s advanced security together with non-Calypso smart cards for ticketing and payment&lt;/td>
&lt;td>Accredited and hosted by the Eclipse foundation&lt;/td>
&lt;td>Exchange platform between providers and transport authorities&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>Help desk-Separate maintenance for software and equipment&lt;/td>
&lt;td>Online and offline trainings available that will help you get the most of Keyple&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>Active on GitHub and within the Eclipse community&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Build process and continuous integration</title><link>https://keyple.org/learn/keyple-in-depth/build-and-ci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/learn/keyple-in-depth/build-and-ci/</guid><description>&lt;br>
&lt;h2 id="build-automation-tool">Build automation tool&lt;/h2>
&lt;p>Keyple uses Gradle.&lt;/p>
&lt;br>
&lt;h2 id="versioning-rules">Versioning rules&lt;/h2>
&lt;p>Keyple components are versioned according to &lt;a href="https://semver.org" target="_blank" rel="noopener">Semantic Versioning 2.0.0&lt;/a> which is based on the three numbers &lt;code>X.Y.Z&lt;/code>&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
For API components (i.e. artifacts suffixed with &lt;code>-api&lt;/code>), the incrementation of &lt;code>Z&lt;/code> indicates only a documentation update.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="continuous-integration">Continuous integration&lt;/h2>
&lt;p>Keyple continuous integration works with the &lt;a href="https://ci.eclipse.org/keyple/job/Keyple/" target="_blank" rel="noopener">Jenkins server&lt;/a> of the Eclipse Foundation.&lt;/p>
&lt;p>The build process uses the home-made gradle plugin &lt;strong>Keyple Gradle&lt;/strong> available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-gradle" target="_blank" rel="noopener">Maven Central Repository&lt;/a> and whose sources are available on &lt;a href="https://github.com/eclipse-keyple/keyple-ops" target="_blank" rel="noopener">GitHub&lt;/a>.&lt;/p>
&lt;p>The CI automates the following tasks (defined in the &lt;code>Jenkinsfile&lt;/code> file):&lt;/p>
&lt;ul>
&lt;li>verify the validity of the version;&lt;/li>
&lt;li>verify the code formatting using &lt;a href="https://github.com/diffplug/spotless" target="_blank" rel="noopener">Spotless&lt;/a>;&lt;/li>
&lt;li>build the code;&lt;/li>
&lt;li>execute unit tests;&lt;/li>
&lt;li>sign and publish artifacts to Maven Central Repository;&lt;/li>
&lt;li>publish the javadoc to the corresponding GitHub Pages;&lt;/li>
&lt;li>publish the code quality report to &lt;a href="https://sonarcloud.io/organizations/eclipse/projects?search=keyple&amp;amp;sort=-analysis_date" target="_blank" rel="noopener">SonarCloud&lt;/a>.&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="snapshot-publication">Snapshot publication&lt;/h2>
&lt;p>A snapshot artifact (suffixed with &lt;code>-SNAPSHOT&lt;/code>) is automatically published after each commit on the &lt;code>main&lt;/code> branch, except in the case of a release (see &lt;a href="#release-publication">Release publication&lt;/a>).&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The artifact version defined in the &lt;code>gradle.properties&lt;/code> file must not have a &lt;code>-SNAPSHOT&lt;/code> suffix because the suffix is automatically added by the Keyple Gradle plugin.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="release-publication">Release publication&lt;/h2>
&lt;p>A release artifact is automatically published if and only if the following two conditions are met:&lt;/p>
&lt;ul>
&lt;li>The commit is done on the &lt;code>main&lt;/code> branch or on a &lt;code>release-X.Y.Z&lt;/code> branch.&lt;/li>
&lt;li>The commit message starts with &lt;code>Release X.Y.Z&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning">
&lt;div>
&lt;code>X.Y.Z&lt;/code> must be the version defined in the &lt;code>gradle.properties&lt;/code> file.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="integration-tests">Integration tests&lt;/h2>
&lt;p>Integration tests are defined in an independent GitHub repository: &lt;a href="https://github.com/eclipse-keyple/keyple-integration-java-test" target="_blank" rel="noopener">keyple-integration-java-test&lt;/a>&lt;/p>
&lt;h2 id="release-procedure">Release procedure&lt;/h2>
&lt;ol>
&lt;li>Create a branch dedicated to the current release.&lt;/li>
&lt;li>Check &lt;code>gradle.properties&lt;/code> file:
&lt;ul>
&lt;li>Check the consistency of the version.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Check &lt;code>build.gradle.kts&lt;/code> file:
&lt;ul>
&lt;li>Use only released dependencies.&lt;/li>
&lt;li>Upgrade Keyple dependencies to their latest released versions.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Update &lt;code>CHANGELOG.md&lt;/code> file:
&lt;ul>
&lt;li>Verify the consistency of the &lt;code>Unreleased&lt;/code> section.&lt;/li>
&lt;li>Move content of &lt;code>Unreleased&lt;/code> section to a new &amp;ldquo;release&amp;rdquo; section.&lt;/li>
&lt;li>Update bottom links.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Build and test the component.&lt;/li>
&lt;li>Commit the modified files using the commit message &lt;code>Release x.y.z&lt;/code>.&lt;/li>
&lt;li>Push and create a pull request to merge the branch into &lt;code>main&lt;/code>.&lt;/li>
&lt;li>Await the success of the build by the CI.&lt;/li>
&lt;li>Squash and merge the pull request.&lt;/li>
&lt;li>Await the success of the build by the CI.&lt;/li>
&lt;li>Connect to &lt;a href="https://oss.sonatype.org/#welcome" target="_blank" rel="noopener">Nexus Repository Manager&lt;/a> of Eclipse Keyple and go to &amp;ldquo;Staging Repositories&amp;rdquo; page:
&lt;ul>
&lt;li>Select the correct folder to Close &amp;amp; Release. It must contain the manifests, the JAR and all the others elements (sources, javadoc).&lt;/li>
&lt;li>Close the folder.&lt;/li>
&lt;li>Release the folder.&lt;/li>
&lt;li>The other unwanted folders could be dropped.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Check the availability of the release on the &lt;a href="https://repo.maven.apache.org/maven2/org/eclipse/keyple/" target="_blank" rel="noopener">Maven Repository&lt;/a>. This step may take from 10 minutes to 2 hours.&lt;/li>
&lt;li>Create a release on GitHub:
&lt;ul>
&lt;li>Set tag &lt;code>x.y.z&lt;/code>&lt;/li>
&lt;li>Set release name &lt;code>x.y.z&lt;/code>&lt;/li>
&lt;li>Set the content by copying/pasting the content of the current release description in the &lt;code>CHANGELOG.md&lt;/code> file without the bottom links.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Increment the version in the &lt;code>gradle.properties&lt;/code> file and commit it to prepare the code for the next release (e.g. &lt;code>2.0.0 -&amp;gt; 2.0.1&lt;/code>).&lt;/li>
&lt;li>Update this website:
&lt;ul>
&lt;li>Update version in &lt;code>params.yaml&lt;/code> file.&lt;/li>
&lt;li>Update table content of &lt;code>dependency-check.md&lt;/code> file.&lt;/li>
&lt;li>Update others elements if needed (user guides, developer guides, etc&amp;hellip;).&lt;/li>
&lt;li>Commit and push the modifications.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>Dependency check</title><link>https://keyple.org/components/overview/dependency-check/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/overview/dependency-check/</guid><description>&lt;br>
&lt;p>This online tool helps you to check the compatibility of Keyple components according to their API versions.&lt;/p>
&lt;p>Select the targeted versions of the APIs to show the associated compliant libraries versions (internal APIs are marked with an asterisk *):&lt;/p>
&lt;!--
##########################################################
/!\ Instructions to maintain the content of this table /!\
##########################################################
For each release, you need to update the table of release trains in the "/assets/js/custom.js" file,
in order to update the dependency checking mechanism.
If the release of a component has no impact on the other components,
you will need to insert a release train in the "releaseTrains" table,
containing a single release for that component only.
If several components are released simultaneously,
because they are dependent on each other,
you will need to insert a single release train in the "releaseTrains" table,
referencing all the related releases concerned.
Releases of bugfix API components (version X.Y.*) should not be included,
as they only concern documentation updates.
-->
&lt;table id="datatable-dependency-check" class="display compact stripe nowrap" style="width:100%">
&lt;thead class="text-center">
&lt;tr>
&lt;th colspan="6" class="bg-orange">Keypop APIs&lt;/th>
&lt;th colspan="4" class="bg-yellow">Core APIs&lt;/th>
&lt;th colspan="3" class="bg-blue">Core libraries&lt;/th>
&lt;th colspan="3" class="bg-purple">Distributed systems libraries&lt;/th>
&lt;th colspan="4" class="bg-green">Card extensions libraries&lt;/th>
&lt;th colspan="5" class="bg-red">Standard reader plugins libraries&lt;/th>
&lt;/tr>
&lt;tr>
&lt;th class="bg-orange">Reader&lt;br>API&lt;/th>
&lt;th class="bg-orange c-grey">Card&lt;br>API*&lt;/th>
&lt;th class="bg-orange">Calypso Card&lt;br>API&lt;/th>
&lt;th class="bg-orange c-grey">Calypso Crypto Symmetric&lt;br>API*&lt;/th>
&lt;th class="bg-orange">Calypso Legacy SAM&lt;br>API&lt;/th>
&lt;th class="bg-orange c-grey">Calypso Crypto Asymmetric&lt;br>API*&lt;/th>
&lt;th class="bg-yellow">Common&lt;br>API&lt;/th>
&lt;th class="bg-yellow c-grey">Distributed Local&lt;br>API*&lt;/th>
&lt;th class="bg-yellow c-grey">Distributed Remote&lt;br>API*&lt;/th>
&lt;th class="bg-yellow c-grey">Plugin&lt;br>API*&lt;/th>
&lt;th class="bg-blue">Util&lt;br>Lib&lt;/th>
&lt;th class="bg-blue">Service&lt;br>Lib&lt;/th>
&lt;th class="bg-blue">Service Resource&lt;br>Lib&lt;/th>
&lt;th class="bg-purple">Local&lt;br>Lib&lt;/th>
&lt;th class="bg-purple">Network&lt;br>Lib&lt;/th>
&lt;th class="bg-purple">Remote&lt;br>Lib&lt;/th>
&lt;th class="bg-green">Calypso Card&lt;br>Lib&lt;/th>
&lt;th class="bg-green">Calypso Legacy SAM&lt;br>Lib&lt;/th>
&lt;th class="bg-green">Calypso PKI&lt;br>Lib&lt;/th>
&lt;th class="bg-green">Generic&lt;br>Lib&lt;/th>
&lt;th class="bg-red">Android NFC&lt;br>Lib&lt;/th>
&lt;th class="bg-red">Android OMAPI&lt;br>Lib&lt;/th>
&lt;th class="bg-red">Card Resource&lt;br>Lib&lt;/th>
&lt;th class="bg-red">PC/SC&lt;br>Lib&lt;/th>
&lt;th class="bg-red">Stub&lt;br>Lib&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody class="text-center">
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;h2 id="components-previously-based-on-the-calypsonet-terminal-api">Components previously based on the Calypsonet Terminal API&lt;/h2>
&lt;!--
##############################################################
/!\ Instructions to maintain the content of this old table /!\
##############################################################
- Insert a row each time an API has been updated (major or minor version) then update all impacted components.
- If the update does not concern the APIs, but only the libraries, then update only the version range of the concerned libraries
(ex: if keyple-service-java-api goes from "2.0.0" to "2.0.3", then put "2.0.0...2.0.3" in the table)
Warning:
- If "keyple-util-java-lib" changes minor or major version,
it is imperative to add a new line if at least one of the other libraries uses one of the new features.
- If "keyple-service-java-lib" changes of minor or major version,
it is imperative to add a new line if "keyple-service-resource-java-lib" uses one of the new functionalities.
- If "keyple-service-resource-java-lib" changes of minor or major version,
it is imperative to add a new line if "keyple-card-calypso-java-lib" or "keyple-card-generic-java-lib" uses one of the new features.
-->
&lt;table id="datatable-dependency-check-old" class="display compact stripe nowrap" style="width:100%">
&lt;thead class="text-center">
&lt;tr>
&lt;th colspan="4" class="bg-orange">Calypso Networks Association APIs&lt;/th>
&lt;th colspan="4" class="bg-yellow">Core APIs&lt;/th>
&lt;th colspan="3" class="bg-blue">Core libraries&lt;/th>
&lt;th colspan="3" class="bg-purple">Distributed systems libraries&lt;/th>
&lt;th colspan="3" class="bg-green">Card extensions libraries&lt;/th>
&lt;th colspan="5" class="bg-red">Standard reader plugins libraries&lt;/th>
&lt;/tr>
&lt;tr>
&lt;th class="bg-orange">Reader&lt;br>API&lt;/th>
&lt;th class="bg-orange c-grey">Card&lt;br>API*&lt;/th>
&lt;th class="bg-orange">Calypso Card&lt;br>API&lt;/th>
&lt;th class="bg-orange">Calypso Legacy SAM&lt;br>API&lt;/th>
&lt;th class="bg-yellow">Common&lt;br>API&lt;/th>
&lt;th class="bg-yellow c-grey">Distributed Local&lt;br>API*&lt;/th>
&lt;th class="bg-yellow c-grey">Distributed Remote&lt;br>API*&lt;/th>
&lt;th class="bg-yellow c-grey">Plugin&lt;br>API*&lt;/th>
&lt;th class="bg-blue">Util&lt;br>Lib&lt;/th>
&lt;th class="bg-blue">Service&lt;br>Lib&lt;/th>
&lt;th class="bg-blue">Service Resource&lt;br>Lib&lt;/th>
&lt;th class="bg-purple">Local&lt;br>Lib&lt;/th>
&lt;th class="bg-purple">Network&lt;br>Lib&lt;/th>
&lt;th class="bg-purple">Remote&lt;br>Lib&lt;/th>
&lt;th class="bg-green">Calypso Card&lt;br>Lib&lt;/th>
&lt;th class="bg-green">Calypso Legacy SAM&lt;br>Lib&lt;/th>
&lt;th class="bg-green">Generic&lt;br>Lib&lt;/th>
&lt;th class="bg-red">Android NFC&lt;br>Lib&lt;/th>
&lt;th class="bg-red">Android OMAPI&lt;br>Lib&lt;/th>
&lt;th class="bg-red">Card Resource&lt;br>Lib&lt;/th>
&lt;th class="bg-red">PC/SC&lt;br>Lib&lt;/th>
&lt;th class="bg-red">Stub&lt;br>Lib&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody class="text-center">
&lt;tr>
&lt;td>1.3.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.8.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.2.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.3.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.3.3...2.3.6&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.1.0...2.1.1&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.2.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.2.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.2.0...2.2.1&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.4...2.3.13&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.3.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>1.0.0...1.0.1&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.2.0&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.2.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.3.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.8.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.2.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.2.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.3.2...2.3.4&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.1.0...2.1.1&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.2.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.2.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.2.0...2.2.1&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.4...2.3.13&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.3.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>1.0.0...1.0.1&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.2.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.3.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.8.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.2.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.3.0...2.3.4&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.1.0...2.1.1&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.2.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.2.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.2.0...2.2.1&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.4...2.3.13&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.3.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>1.0.0...1.0.1&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.2.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.8.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.2.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.2.0...2.2.1&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.1.0...2.1.1&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.2.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.2.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.2.0...2.2.1&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.4...2.3.13&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.3.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>1.0.0...1.0.1&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.2.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.8.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.2.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.1.4&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.2.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.2.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.2.0...2.2.1&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.4...2.3.13&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.3.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.2.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.8.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.2.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.1.3&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.1.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.4...2.3.13&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.3.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.2.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.7.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.2.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.1.3&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.1.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.3&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.3.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.2.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.6.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.2.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.1.3&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.1.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.2&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.3.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.2.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.6.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.1.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.1.3&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.1.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.2&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.1.0...0.2.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.2.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.5.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.1.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.1.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.1.3&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.1.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.1&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.1.0...0.2.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.2.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.5.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.1.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.1.2&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.1&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.1.0...0.2.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.1.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.5.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.1.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.1.1&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.3.1&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.1.0...0.2.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.1.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.4.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.1.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.3.0...2.3.1&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.1.1&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.2.4...2.3.0&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>0.1.0...0.2.0&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.1.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.4.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.1.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.1.0...2.2.0&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.1.1&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.2.3&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.3.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.1.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.1.0...2.2.0&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.2.0...2.2.2&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.2.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.1.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.1.0...2.2.0&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.2.0...2.2.1&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0...2.1.2&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0...2.1.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.1.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.1.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.1.0&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;tr>
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-reader-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-card-java-api -->
&lt;td>1.0.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-java-api -->
&lt;td>0.1.+&lt;/td>&lt;!-- calypsonet-terminal-calypso-crypto-legacysam-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-common-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-local-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-distributed-remote-java-api -->
&lt;td>2.0.+&lt;/td>&lt;!-- keyple-plugin-java-api -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-util-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-service-java-lib -->
&lt;td>2.0.0...2.0.1&lt;/td>&lt;!-- keyple-service-resource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-local-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-network-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-distributed-remote-java-lib -->
&lt;td>2.0.0...2.0.3&lt;/td>&lt;!-- keyple-card-calypso-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-card-calypso-crypto-legacysam-java-lib -->
&lt;td>2.0.0...2.0.2&lt;/td>&lt;!-- keyple-card-generic-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-plugin-android-nfc-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-plugin-android-omapi-java-lib -->
&lt;td>-&lt;/td>&lt;!-- keyple-plugin-cardresource-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-plugin-pcsc-java-lib -->
&lt;td>2.0.0&lt;/td>&lt;!-- keyple-plugin-stub-java-lib -->
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;script type="text/javascript">
document.body.onload = function() {
initDatatableDependencyCheck();
initDatatableDependencyCheckOld();
};
&lt;/script></description></item><item><title>Who is it for?</title><link>https://keyple.org/what-is-keyple/who-is-it-for/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/what-is-keyple/who-is-it-for/</guid><description>&lt;p>Whether you are a transport authority or operator, a mobility provider, a system integrator, an event manager, a mobility aggregator
or a multi-mobility startup, Eclipse Keyple® allows you to:&lt;/p>
&lt;ul>
&lt;li>Reduce your costs and accelerate your developments.&lt;/li>
&lt;li>Facilitate the integration of new services or technologies.&lt;/li>
&lt;li>Use libraries to enable instant payments, remote top-ups, event and multimodal transport integrations, connection to park-and-ride services, and more.&lt;/li>
&lt;li>Easily create applications or services compatible with existing card-centric or server-centric systems.&lt;/li>
&lt;li>Benefit from a more diverse and easily collaborative network that encourages coopetition in a multimodal market: compete where you can, collaborate when necessary to create integrated mobility customer journeys.&lt;/li>
&lt;li>Harness the flexibility to introduce modern, mobile and new architecture systems while maintaining integrations to legacy infrastructure.&lt;/li>
&lt;li>Ensure the sustainability and future-proofing of your ticketing system, as Keyple is compatible with any smart card reader and SIO-enabled terminal.&lt;/li>
&lt;li>Unchain from vendor lock in, black box and single provider systems to an open solution with access to multiple suppliers.&lt;/li>
&lt;li>Enable partnerships with multimodal transport, building facilities including parking, tourism operators and events to offer seamless, single ticketing across the end customer’s journey.&lt;/li>
&lt;/ul>
&lt;p>With Keyple Calypso extension:&lt;/p>
&lt;ul>
&lt;li>Have easy access to a highly secure and interoperable standard, Calypso®.&lt;/li>
&lt;li>Quickly build new apps and integrations that conform to the Calypso® standard and other ticketing schemas.&lt;/li>
&lt;li>Easily migrate from an existing, closed ticketing schemes to Calypso®, a high-end open ticketing, certified solution.&lt;/li>
&lt;li>Easily integrate with public transport providers that are using the Calypso® standard, today used in major cities around the world in over 25 countries.&lt;/li>
&lt;/ul></description></item><item><title>What is Calypso®?</title><link>https://keyple.org/what-is-keyple/what-is-calypso/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/what-is-keyple/what-is-calypso/</guid><description>&lt;p>Calypso® is a set of specifications describing a fast and secure off-line contactless transaction, between a portable object and a terminal.
It has been created for public transport ticketing at the end of the 1990s by some European public transport operators or authority
(RATP and SNCF in Paris and all France, STIB in Brussels, OTLIS in Lisbon, ACTV in Venice, Konstanz in Germany), in order to create an open,
interoperable and secure standard independent from industrials to ensure a real competition.&lt;/p>
&lt;p>Today Calypso® represents 20% of the world market of contactless smart ticketing in more than 25 countries and over 170 cities globally.
It brings to his user a guarantee of security and interoperability which relies on a total compliance with existing standards
(ISO 14443, ISO 7816-4, Global Platform). The Calypso® standard is managed by the Calypso Networks Association (CNA),
which is led by transports operators and public authorities in order to ensure openness and independence from industrials
in confront of other proprietary schemes.&lt;/p>
&lt;p>Discover more about Calypso® here : &lt;a href="https://calypsonet.org/solutions-overview/" target="_blank" rel="noopener">https://calypsonet.org/solutions-overview/&lt;/a>&lt;/p></description></item><item><title>Keyple's main features</title><link>https://keyple.org/what-is-keyple/main-features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/what-is-keyple/main-features/</guid><description>&lt;p>The goal of Eclipse Keyple® is to allow developers to easily implement fast and secure off-line contactless transactions
(using NFC cards, mobile phones, …) based on ticket processing integrating technologies other than Calypso® the Calypso standard.&lt;/p>
&lt;p>More specifically, Keyple is a set of open source libraries that will initially be available in Java and C++,
designed on the same mutual Object-Oriented Model compatible with any terminal architecture: mobile, embedded
or server and Interoperable with any smart card reader solution: standard or proprietary, local or remote.&lt;/p>
&lt;p>To fully understand how Keyple works, it is important to discern two main components of contactless ticketing technology:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Smart Card Readers&lt;/strong>: Readers are situated at the entrance and exit of events, venues and transport sites.
For example, a smart card reader could be a terminal, a portable scanning laser gun, or a swipe tablet area that is embedded
into a door, vehicle or gate. Code is written for a terminal to set the parameters for allowing cards or apps to transmit
ticketing information data. Sometimes in a distributed architecture system design, the code for the reader is not on the
terminal, but in a cloud environment, so the reader sends the data to cloud-based architecture.&lt;/li>
&lt;li>&lt;strong>Ticketing application&lt;/strong>: This is behind-the-scenes code that is able to take the data from the smart card reader
and, in milliseconds real-time, analyze the balance of the ticket, confirm the permissions for entry, and update the data
on the ticket (for example, to confirm that the ticket holder can enter the gate or vehicle, and then to deduct the cost
of the journey and calculate the new balance).&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>According to this scheme, Keyple defines two layers:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Smart Card readers&lt;/strong> are integrated through plugins implementing the SE Proxy API which manages the communications with
a smart card through any type of contactless or contact reader (local, remote, standard, proprietary…)&lt;/li>
&lt;li>&lt;strong>Ticketing applications&lt;/strong> relies on a high-level Calypso® processing API to manage Calypso® commands &amp;amp; security features.
This API uses the SE Proxy API to communicate with the reader&lt;/li>
&lt;/ul>
&lt;p>Keyple comes with dedicated plugins that integrate directly with smart card readers that have been built on standard
software interfaces including PC/SC, Android NFC reader, and Android OMAPI.&lt;/p>
&lt;p>In cases where there is a distributed architecture design, Keyple includes a Remote API plugin so that
a smart card terminal can be operated remotely, as if it were local to the terminal, and ensures that robust security and
speed is not sacrificed in a cloud-based system.&lt;/p>
&lt;p>The Calypso Processing API is also available as a Keyple extension. This component carries out the terminal processing
element of ticketing technology. Access to Calypso’s security features are automatically managed by the Keyple extension.&lt;/p></description></item><item><title>Server JSON API v2.1</title><link>https://keyple.org/user-guides/non-keyple-client/server-json-api/2-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/user-guides/non-keyple-client/server-json-api/2-1/</guid><description>&lt;style>
table th:nth-child(1) {
width: 9rem;
}
&lt;/style>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>This API is compliant with the following Keyple server side components:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/components/core/keyple-service-lib/" target="_blank" rel="noopener">Keyple Service Library&lt;/a> version &lt;code>3.3.0+&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://keyple.org/components/distributed/keyple-distributed-network-lib/" target="_blank" rel="noopener">Keyple Distributed Network Library&lt;/a> version &lt;code>2.5.0+&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://keyple.org/components/distributed/keyple-distributed-remote-lib/" target="_blank" rel="noopener">Keyple Distributed Remote Library&lt;/a> version &lt;code>2.5.0+&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="changelog">Changelog&lt;/h2>
&lt;p>This minor version optimizes transaction time by reducing the number of network exchanges.
A new field has been added to the &amp;ldquo;&lt;a href="#execute-remote-service">Execute Remote Service&lt;/a>&amp;rdquo; message sent to the server,
and the &amp;ldquo;Reader Type&amp;rdquo; command received from the server has been removed.&lt;/p>
&lt;br>
&lt;h2 id="messagedto">MessageDto&lt;/h2>
&lt;p>The diagram below shows the format of the &lt;code>MessageDto&lt;/code> object but the detailed content will be described in the
sections associated with each message type:&lt;/p>
&lt;figure id="figure-keyple-distributed-json-api---messagedto">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-2-1/serverJsonApi_classDiagram_MessageDto.svg" alt="Keyple Distributed JSON API - MessageDto" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple Distributed JSON API - MessageDto
&lt;/figcaption>&lt;/figure>
&lt;div class="alert alert-note">
&lt;div>
The value of the &lt;code>action&lt;/code> property determines the message type.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="execute-remote-service">Execute Remote Service&lt;/h2>
&lt;p>The purpose of this message, sent to the server, is to initiate the server-controlled card
transaction.&lt;/p>
&lt;p>By using the identification properties provided by the terminal in its subsequent responses, the server ensures
consistent and accurate data flow management throughout the entire system.&lt;/p>
&lt;p>Following the transmission of this message, the server will return a &amp;ldquo;&lt;a href="#command">Command&lt;/a>&amp;rdquo; message,
containing the first action to be performed with the card or the terminal&amp;rsquo;s reader, or an
&amp;ldquo;&lt;a href="#end-remote-service">End Remote Service&lt;/a>&amp;rdquo; message to terminate the transaction.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-keyple-distributed-json-api---execute-remote-service-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-2-1/serverJsonApi_classDiagram_executeRemoteService.svg" alt="Keyple Distributed JSON API - &amp;#34;Execute Remote Service&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple Distributed JSON API - &amp;ldquo;Execute Remote Service&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;h4 id="messagedto-execute-remote-service">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>3&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The session identifier. It shall be unique per card transaction.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>EXECUTE_REMOTE_SERVICE&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier. It shall be unique per server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (n/a)&lt;/strong>&lt;br>Null or absent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader used to perform the card transaction. It shall be unique per terminal.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (n/a)&lt;/strong>&lt;br>Null or absent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#executeremoteservicebody">ExecuteRemoteServiceBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="executeremoteservicebody">ExecuteRemoteServiceBody&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serviceId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the business service to be executed by the server. It&amp;rsquo;s a naming convention between the client and the server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>isReaderContactless&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the reader is in contactless mode, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>inputData&lt;/code>&lt;/td>
&lt;td>&lt;strong>Object (optional)&lt;/strong>&lt;br>An optional object containing additional data to be provided to the remote business service, as for example the &lt;a href="./user-guides/non-keyple-client/selection-json-specification/#selection-result-processing">ProcessedCardSelectionScenarioJsonString&lt;/a> containing the result of an already processed card selection scenario. The content of this property is a convention between the client and the server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>initialCardContent&lt;/code>&lt;/td>
&lt;td>&lt;strong>Object (optional)&lt;/strong>&lt;br>An optional object containing the &lt;a href="./user-guides/non-keyple-client/selection-json-specification/#selection-result-processing">ProcessedCardSelectionScenarioJsonString&lt;/a> containing the result of an already processed card selection scenario. The content of this property is a convention between the client and the server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>initialCardContentClassName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (required only if &lt;code>initialCardContent&lt;/code> is set)&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>java.util.Properties&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="example">Example&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;EXECUTE_REMOTE_SERVICE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;serviceId\&amp;#34;:\&amp;#34;AUTHENTICATE_CARD\&amp;#34;,\&amp;#34;isReaderContactless\&amp;#34;:true,\&amp;#34;inputData\&amp;#34;:{\&amp;#34;userId\&amp;#34;:\&amp;#34;7b13592c-0d21-429b-80d2-3dc565338ea3\&amp;#34;},\&amp;#34;initialCardContent\&amp;#34;:{\&amp;#34;processedCardSelectionScenarioJsonString\&amp;#34;:\&amp;#34;[{\\\&amp;#34;hasMatched\\\&amp;#34;:false,\\\&amp;#34;powerOnData\\\&amp;#34;:\\\&amp;#34;1234\\\&amp;#34;,\\\&amp;#34;selectApplicationResponse\\\&amp;#34;:{\\\&amp;#34;apdu\\\&amp;#34;:\\\&amp;#34;6400\\\&amp;#34;,\\\&amp;#34;statusWord\\\&amp;#34;:\\\&amp;#34;6400\\\&amp;#34;},\\\&amp;#34;cardResponse\\\&amp;#34;:{\\\&amp;#34;apduResponses\\\&amp;#34;:[],\\\&amp;#34;isLogicalChannelOpen\\\&amp;#34;:false}},{\\\&amp;#34;hasMatched\\\&amp;#34;:true,\\\&amp;#34;powerOnData\\\&amp;#34;:\\\&amp;#34;1234\\\&amp;#34;,\\\&amp;#34;selectApplicationResponse\\\&amp;#34;:{\\\&amp;#34;apdu\\\&amp;#34;:\\\&amp;#34;6F238409315449432E49434131A516BF0C13C708000000001122334453070A3C20051410019000\\\&amp;#34;,\\\&amp;#34;statusWord\\\&amp;#34;:\\\&amp;#34;9000\\\&amp;#34;},\\\&amp;#34;cardResponse\\\&amp;#34;:{\\\&amp;#34;apduResponses\\\&amp;#34;:[{\\\&amp;#34;apdu\\\&amp;#34;:\\\&amp;#34;ABCD9000\\\&amp;#34;,\\\&amp;#34;statusWord\\\&amp;#34;:\\\&amp;#34;9000\\\&amp;#34;}],\\\&amp;#34;isLogicalChannelOpen\\\&amp;#34;:true}}]\&amp;#34;},\&amp;#34;initialCardContentClassName\&amp;#34;:\&amp;#34;java.util.Properties\&amp;#34;}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="command">Command&lt;/h2>
&lt;p>The purpose of this message, received from the server, is to ask the terminal to perform a specific service with the
card or the terminal&amp;rsquo;s reader.&lt;/p>
&lt;p>There are three types of services potentially requested by the server:&lt;/p>
&lt;div id="command-table-1">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Service&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="#card-presence-cmd">Card Presence&lt;/a>&lt;/td>
&lt;td>Indicates if a card is present in the reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#card-selection-cmd">Card Selection&lt;/a>&lt;/td>
&lt;td>Establish a logical communication channel with a card and, if required, perform additional APDU exchanges with it.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#card-commands-cmd">Card Commands&lt;/a>&lt;/td>
&lt;td>Perform APDU exchanges with the selected card.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;style>
#command-table-1 table th:nth-child(1) {
width: 9rem;
}
&lt;/style>
&lt;p>Following the reception of this message, the terminal will send to the server a &amp;ldquo;&lt;a href="#response">Response&lt;/a>&amp;rdquo; message
containing the response of the operation.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-keyple-distributed-json-api---command-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-2-1/serverJsonApi_classDiagram_cmd.svg" alt="Keyple Distributed JSON API - &amp;#34;Command&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple Distributed JSON API - &amp;ldquo;Command&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;div class="alert alert-note">
&lt;div>
The value of the &lt;code>service&lt;/code> property determines the service to be performed.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-presence-cmd">Card Presence&lt;/h3>
&lt;p>This service allows the server to know if a card is inserted in the reader.&lt;/p>
&lt;p>There are no parameters for this service.&lt;/p>
&lt;p>The terminal must then send the response to the server in a &amp;ldquo;&lt;a href="#card-presence-resp">Card Presence (Response)&lt;/a>&amp;rdquo; message.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-card-presence-cmd">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>3&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>CMD&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#iscardpresentcmdbody">IsCardPresentCmdBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="iscardpresentcmdbody">IsCardPresentCmdBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>IS_CARD_PRESENT&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-1">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CMD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;IS_CARD_PRESENT\&amp;#34;}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-selection-cmd">Card Selection&lt;/h3>
&lt;p>The primary objective of this service is to establish a logical communication channel with a card.&lt;/p>
&lt;p>To enable processing of different card profiles, Keyple offers the creation of selection scenarios with integrated
selection cases. The scenario is provided by the server after a card is detected, and it involves checking whether the
card is compatible with at least one of the selection cases. The selection cases are processed successively, in the
order in which they are defined.&lt;/p>
&lt;p>There are several options for executing the scenario:&lt;/p>
&lt;ul>
&lt;li>the process stops at the first selection case where the card matches, or all selection cases are systematically processed.&lt;/li>
&lt;li>the physical channel can be kept open or closed at the end of each selection case.&lt;/li>
&lt;/ul>
&lt;p>A card selection case incorporates various independent filters that can be applied individually or in combination
to determine if a detected card is suitable for performing a transaction. While some cards can be selected based on
communication protocol or response data from the power-on operation, most of the cards require a selection through
Application Identifier (AID) using the ISO7816-4 &amp;ldquo;Select Application&amp;rdquo; APDU command.&lt;/p>
&lt;p>The structure outlined below allows for defining selection scenarios that combine these three types of filters:&lt;/p>
&lt;ul>
&lt;li>based on the communication protocol,&lt;/li>
&lt;li>based on the response data from the power on stage,&lt;/li>
&lt;li>based on the Application Identifier (AID).&lt;/li>
&lt;/ul>
&lt;p>When filtering by AID, the &amp;ldquo;Select Application&amp;rdquo; APDU command is sent to the card in accordance with the ISO7816-4
standard.
Additional parameters, also defined by the standard, can be set to specify the type of operation (&lt;code>FileOccurrence&lt;/code>)
and the type of output (&lt;code>FileControlInformation&lt;/code>).&lt;/p>
&lt;p>Each filter is optional, and if none are defined, the selection is considered successful as soon as the card is
detected.
However, when a filter is specified, it becomes a prerequisite for the card selection.&lt;/p>
&lt;p>In addition to card selection, a selection scenario can include a list of APDUs that are to be transmitted to the card
as soon as it becomes &amp;ldquo;selected&amp;rdquo;.&lt;/p>
&lt;p>The terminal must iterate over each selection cases of the scenario, determine which type of filter to apply and apply
it (e.g. protocol, power-on data, AID).&lt;/p>
&lt;p>If all the defined filters are satisfied, the terminal must send any additional APDUs.&lt;/p>
&lt;p>The terminal must then send the response to the server in a &amp;ldquo;&lt;a href="#card-selection-resp">Card Selection (Response)&lt;/a>&amp;rdquo; message.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-card-selection-cmd">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>3&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>CMD&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardselectionrequestscmdbody">TransmitCardSelectionRequestsCmdBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardselectionrequestscmdbody">TransmitCardSelectionRequestsCmdBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_SELECTION_REQUESTS&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>parameters&lt;/code>&lt;/td>
&lt;td>&lt;a href="#transmitcardselectionrequestsparameters">TransmitCardSelectionRequestsParameters&lt;/a>&lt;br>The card selection parameters.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardselectionrequestsparameters">TransmitCardSelectionRequestsParameters&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>multiSelectionProcessing&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>FIRST_MATCH&lt;/strong>&amp;rdquo;: the selection process stops as soon as a selection case is successful.&lt;br>- &amp;ldquo;&lt;strong>PROCESS_ALL&lt;/strong>&amp;rdquo;: the selection process performs all the selection cases provided (the logical channel is closed at the end of the selection case).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>channelControl&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>KEEP_OPEN&lt;/strong>&amp;rdquo;: leaves the physical channel open.&lt;br>- &amp;ldquo;&lt;strong>CLOSE_AFTER&lt;/strong>&amp;rdquo;: terminates communication with the card.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cardSelectors&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardselector">CardSelector&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cardSelectionRequests&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardselectionrequest">CardSelectionRequest&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array containing the same number of elements as &lt;code>cardSelectors&lt;/code>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardselector">CardSelector&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>logicalProtocolName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional &amp;ldquo;logical&amp;rdquo; name of the targeted card protocol.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>powerOnDataRegex&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional regex to use to filter the power-on data.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>aid&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional Application Identifier (AID) as an hexadecimal string to be sent with ISO7816-4 &amp;ldquo;Select Application&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fileOccurrence&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>&amp;quot;&lt;strong>FIRST&lt;/strong>&amp;quot;, &amp;ldquo;&lt;strong>LAST&lt;/strong>&amp;rdquo;, &amp;ldquo;&lt;strong>NEXT&lt;/strong>&amp;rdquo; or &amp;ldquo;&lt;strong>PREVIOUS&lt;/strong>&amp;rdquo; according to the ISO7816-4 standard (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fileControlInformation&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>&amp;quot;&lt;strong>FCI&lt;/strong>&amp;quot;, &amp;ldquo;&lt;strong>FCP&lt;/strong>&amp;rdquo;, &amp;ldquo;&lt;strong>FMD&lt;/strong>&amp;rdquo; or &amp;ldquo;&lt;strong>NO_RESPONSE&lt;/strong>&amp;rdquo; according to the ISO7816-4 standard (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardselectionrequest">CardSelectionRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>cardRequest&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardrequest">CardRequest&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>An optional object containing a list of APDU requests to be sent after a successful card selection.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>successfulSelectionStatusWords&lt;/code>&lt;/td>
&lt;td>&lt;strong>String [ ]&lt;/strong>&lt;br>A non-empty array of 2-byte hexadecimal strings containing the status word of the &amp;ldquo;Select Application&amp;rdquo; APDU command to be considered successful (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardrequest">CardRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apduRequests&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apdurequest">ApduRequest&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array of APDU requests.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>stopOnUnsuccessfulStatusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the transmission of the APDUs should be interrupted as soon as the status word of a response does not belong to the associated list of successful status words, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apdurequest">ApduRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU to transmit to the card.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>successfulStatusWords&lt;/code>&lt;/td>
&lt;td>&lt;strong>String [ ]&lt;/strong>&lt;br>A non-empty array of 2-byte hexadecimal strings containing the status word to be considered successful.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>info&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional textual information about the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-2">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;5bf1ca9a-2de9-4f16-b170-5de168560179&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;CMD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;824f32f1-ccb0-447c-a103-618152eb49ba&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;fbf011a4-d0e2-4f3f-85c3-2ccd5be01919&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;stubReader&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;852f5841-0b5c-4922-a77a-b103cb5aac3f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_SELECTION_REQUESTS\&amp;#34;,\&amp;#34;parameters\&amp;#34;:{\&amp;#34;multiSelectionProcessing\&amp;#34;:\&amp;#34;FIRST_MATCH\&amp;#34;,\&amp;#34;channelControl\&amp;#34;:\&amp;#34;KEEP_OPEN\&amp;#34;,\&amp;#34;cardSelectors\&amp;#34;:[{\&amp;#34;fileOccurrence\&amp;#34;:\&amp;#34;FIRST\&amp;#34;,\&amp;#34;fileControlInformation\&amp;#34;:\&amp;#34;FCI\&amp;#34;}],\&amp;#34;cardSelectionRequests\&amp;#34;:[{\&amp;#34;successfulSelectionStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;]}]}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-commands-cmd">Card Commands&lt;/h3>
&lt;p>The role of this service is to perform APDU exchanges with the card.&lt;/p>
&lt;p>The terminal must iterate over the list of APDUs present in the card request and proceeds to close the physical channel
if requested.&lt;/p>
&lt;p>The response must be sent to the server in a &amp;ldquo;&lt;a href="#card-commands-resp">Card Commands (Response)&lt;/a>&amp;rdquo; message.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-card-commands-cmd">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>3&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>CMD&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardrequestcmdbody">TransmitCardRequestCmdBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardrequestcmdbody">TransmitCardRequestCmdBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_REQUEST&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>parameters&lt;/code>&lt;/td>
&lt;td>&lt;a href="#transmitcardrequestparameters">TransmitCardRequestParameters&lt;/a>&lt;br>The card request parameters.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardrequestparameters">TransmitCardRequestParameters&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>cardRequest&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardrequest-1">CardRequest&lt;/a>&lt;br>An object containing the list of APDU requests to be sent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>channelControl&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>KEEP_OPEN&lt;/strong>&amp;rdquo;: leaves the physical channel open.&lt;br>- &amp;ldquo;&lt;strong>CLOSE_AFTER&lt;/strong>&amp;rdquo;: terminates communication with the card.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardrequest-1">CardRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apduRequests&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apdurequest-1">ApduRequest&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array of APDU requests.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>stopOnUnsuccessfulStatusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the transmission of the APDUs should be interrupted as soon as the status word of a response does not belong to the associated list of successful status words, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apdurequest-1">ApduRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU to transmit to the card.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>successfulStatusWords&lt;/code>&lt;/td>
&lt;td>&lt;strong>String [ ]&lt;/strong>&lt;br>A non-empty array of 2-byte hexadecimal strings containing the status word to be considered successful.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>info&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional textual information about the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-3">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CMD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_REQUEST\&amp;#34;,\&amp;#34;parameters\&amp;#34;:{\&amp;#34;cardRequest\&amp;#34;:{\&amp;#34;apduRequests\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;00B2014400\&amp;#34;,\&amp;#34;successfulStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;],\&amp;#34;info\&amp;#34;:\&amp;#34;Read Records - SFI: 8h, REC: 1, READMODE: ONE_RECORD, EXPECTEDLENGTH: 0\&amp;#34;}],\&amp;#34;stopOnUnsuccessfulStatusWord\&amp;#34;:true},\&amp;#34;channelControl\&amp;#34;:\&amp;#34;CLOSE_AFTER\&amp;#34;}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="response">Response&lt;/h2>
&lt;p>This message, sent by the terminal to the server, is intended to transmit to the server the result of the specific
service previously performed on the card or the terminal&amp;rsquo;s reader.&lt;/p>
&lt;p>Following the transmission of this message, the server will return a &amp;ldquo;&lt;a href="#command">Command&lt;/a>&amp;rdquo; message,
containing the next action to be performed, or an
&amp;ldquo;&lt;a href="#end-remote-service">End Remote Service&lt;/a>&amp;rdquo; message to terminate the transaction.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-keyple-distributed-json-api---response-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-2-1/serverJsonApi_classDiagram_resp.svg" alt="Keyple Distributed JSON API - &amp;#34;Response&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple Distributed JSON API - &amp;ldquo;Response&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;br>
&lt;h3 id="card-presence-resp">Card Presence&lt;/h3>
&lt;p>This message, sent by the terminal to the server in response to &amp;ldquo;&lt;a href="#card-presence-cmd">Card Presence (Command)&lt;/a>&amp;rdquo;,
is intended to indicate to the server if a card is present.&lt;/p>
&lt;h4 id="messagedto-card-presence-resp">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>3&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The value is &amp;ldquo;&lt;strong>RESP&lt;/strong>&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#iscardpresentrespbody">IsCardPresentRespBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="iscardpresentrespbody">IsCardPresentRespBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>IS_CARD_PRESENT&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>result&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if a card is present, &lt;strong>false&lt;/strong> otherwise (absent in case of error).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>&lt;a href="#card-presence-resp-error">Error&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>The error description (absent in case of success).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="card-presence-resp-error">Error&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>READER_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the reader communication link,&lt;br>- &amp;ldquo;&lt;strong>CARD_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the card communication link.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The error description.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="example-4">Example&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RESP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;IS_CARD_PRESENT\&amp;#34;,\&amp;#34;result\&amp;#34;:true}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-selection-resp">Card Selection&lt;/h3>
&lt;p>This message, sent by the terminal to the server in response to
&amp;ldquo;&lt;a href="#card-selection-cmd">Card Selection (Command)&lt;/a>&amp;rdquo;,
is intended to transmit to the server the result of the execution of the selection scenario.&lt;/p>
&lt;h4 id="messagedto-card-selection-resp">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>3&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>RESP&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardselectionrequestsrespbody">TransmitCardSelectionRequestsRespBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardselectionrequestsrespbody">TransmitCardSelectionRequestsRespBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_SELECTION_REQUESTS&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>result&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardselectionresponse">CardSelectionResponse&lt;/a> &lt;strong>[ ] (optional)&lt;/strong>&lt;br>A non-empty list containing at most as many responses as there are selection cases (absent in case of error).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>&lt;a href="#card-selection-resp-error">Error&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>The error description (absent in case of success).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardselectionresponse">CardSelectionResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>hasMatched&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the associated selection case has matched, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>powerOnData&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>Data from the initialization phase of the communication with the card. E.g. the Answer To Reset (ATR) in the case of a contact card or any other string informing about the low level communication. This string can be used for filtering by power-on data defined in the command (absent if the protocol filter failed).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>selectApplicationResponse&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apduresponse">ApduResponse&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>Data received in response to the ISO7816-4 &amp;ldquo;Select Application&amp;rdquo; command (absent if no AID filtering).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cardResponse&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardresponse">CardResponse&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>Data received in response to additional commands (absent if no additional commands were provided).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardresponse">CardResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>isLogicalChannelOpen&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the logical channel is left open, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>apduResponses&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apduresponse">ApduResponse&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A list containing the APDU responses for each request in the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apduresponse">ApduResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU received from the card (including the status word).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>statusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A 2-byte hexadecimal string containing the status word of the received APDU.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="card-selection-resp-error">Error&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>READER_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the reader communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the card communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMAND_ERROR&lt;/strong>&amp;rdquo;: if the card returned an unexpected status word.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The error description.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-5">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RESP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_SELECTION_REQUESTS\&amp;#34;,\&amp;#34;result\&amp;#34;:[{\&amp;#34;hasMatched\&amp;#34;:true,\&amp;#34;powerOnData\&amp;#34;:\&amp;#34;3B8880010000000000718100F9\&amp;#34;,\&amp;#34;selectApplicationResponse\&amp;#34;:{\&amp;#34;apdu\&amp;#34;:\&amp;#34;6F238409315449432E49434131A516BF0C13C708000000001122334453070A3C23121410019000\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;9000\&amp;#34;},\&amp;#34;cardResponse\&amp;#34;:{\&amp;#34;apduResponses\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;24B92848080000131A50001200000000000000000000000000000000009000\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;9000\&amp;#34;}],\&amp;#34;isLogicalChannelOpen\&amp;#34;:true}}]}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-commands-resp">Card Commands&lt;/h3>
&lt;p>This message, sent by the terminal to the server in response to
&amp;ldquo;&lt;a href="#card-commands-cmd">Card Commands (Command)&lt;/a>&amp;rdquo;,
is intended to transmit to the server the result of the execution of a card request.&lt;/p>
&lt;h4 id="messagedto-card-commands-resp">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>3&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>RESP&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardrequestrespbody">TransmitCardRequestRespBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardrequestrespbody">TransmitCardRequestRespBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_REQUEST&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>result&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardresponse-1">CardResponse&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>Data received in response to the card request (absent in case of error).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>&lt;a href="#card-commands-resp-error">Error&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>The error description (absent in case of success).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardresponse-1">CardResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>isLogicalChannelOpen&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the logical channel is left open, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>apduResponses&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apduresponse-1">ApduResponse&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A list containing the APDU responses for each request in the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apduresponse-1">ApduResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU received from the card (including the status word).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>statusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A 2-byte hexadecimal string containing the status word of the received APDU.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="card-commands-resp-error">Error&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>READER_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the reader communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the card communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMAND_ERROR&lt;/strong>&amp;rdquo;: if the card returned an unexpected status word.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The error description.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-6">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RESP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_REQUEST\&amp;#34;,\&amp;#34;result\&amp;#34;:{\&amp;#34;apduResponses\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;00112233445566778899AABBCCDDEEFF00112233445566778899AABBCC9000\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;9000\&amp;#34;}],\&amp;#34;isLogicalChannelOpen\&amp;#34;:true}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="end-remote-service">End Remote Service&lt;/h2>
&lt;p>The purpose of this message, received from the server, is to inform the terminal that the transaction has been
completed and, if necessary, to transmit the result. No follow-up is expected from the server.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-keyple-distributed-json-api---end-remote-service-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-2-1/serverJsonApi_classDiagram_endRemoteService.svg" alt="Keyple Distributed JSON API - &amp;#34;End Remote Service&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple Distributed JSON API - &amp;ldquo;End Remote Service&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-end-remote-service">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>3&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>END_REMOTE_SERVICE&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (n/a)&lt;/strong>&lt;br>Null or absent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#endremoteservicebody">EndRemoteServiceBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="endremoteservicebody">EndRemoteServiceBody&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>outputData&lt;/code>&lt;/td>
&lt;td>&lt;strong>Object (optional)&lt;/strong>&lt;br>An optional object containing additional data provided by the remote business service. Its content is a convention between the client and the server.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="example-7">Example&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;END_REMOTE_SERVICE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;outputData\&amp;#34;:{\&amp;#34;isSuccessful\&amp;#34;:true,\&amp;#34;userId\&amp;#34;:\&amp;#34;test\&amp;#34;}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Server JSON API v2.0</title><link>https://keyple.org/user-guides/non-keyple-client/server-json-api/2-0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/user-guides/non-keyple-client/server-json-api/2-0/</guid><description>&lt;style>
table th:nth-child(1) {
width: 9rem;
}
&lt;/style>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>This API is compliant with the following Keyple server side components:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/components/core/keyple-service-lib/" target="_blank" rel="noopener">Keyple Service Library&lt;/a> version &lt;code>3.0.0+&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://keyple.org/components/distributed/keyple-distributed-network-lib/" target="_blank" rel="noopener">Keyple Distributed Network Library&lt;/a> version &lt;code>2.3.0+&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://keyple.org/components/distributed/keyple-distributed-remote-lib/" target="_blank" rel="noopener">Keyple Distributed Remote Library&lt;/a> version &lt;code>2.3.0+&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="changelog">Changelog&lt;/h2>
&lt;p>This major release follows the restructuring of the &lt;code>CardSelector&lt;/code> object.&lt;/p>
&lt;br>
&lt;h2 id="messagedto">MessageDto&lt;/h2>
&lt;p>The diagram below shows the format of the &lt;code>MessageDto&lt;/code> object but the detailed content will be described in the
sections associated with each message type:&lt;/p>
&lt;figure id="figure-keyple-distributed-json-api---messagedto">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-2-0/serverJsonApi_classDiagram_MessageDto.svg" alt="Keyple Distributed JSON API - MessageDto" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple Distributed JSON API - MessageDto
&lt;/figcaption>&lt;/figure>
&lt;div class="alert alert-note">
&lt;div>
The value of the &lt;code>action&lt;/code> property determines the message type.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="execute-remote-service">Execute Remote Service&lt;/h2>
&lt;p>The purpose of this message, sent to the server, is to initiate the server-controlled card
transaction.&lt;/p>
&lt;p>By using the identification properties provided by the terminal in its subsequent responses, the server ensures
consistent and accurate data flow management throughout the entire system.&lt;/p>
&lt;p>Following the transmission of this message, the server will return a &amp;ldquo;&lt;a href="#command">Command&lt;/a>&amp;rdquo; message,
containing the first action to be performed with the card or the terminal&amp;rsquo;s reader, or an
&amp;ldquo;&lt;a href="#end-remote-service">End Remote Service&lt;/a>&amp;rdquo; message to terminate the transaction.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-keyple-distributed-json-api---execute-remote-service-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-2-0/serverJsonApi_classDiagram_executeRemoteService.svg" alt="Keyple Distributed JSON API - &amp;#34;Execute Remote Service&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple Distributed JSON API - &amp;ldquo;Execute Remote Service&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;h4 id="messagedto-execute-remote-service">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The session identifier. It shall be unique per card transaction.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>EXECUTE_REMOTE_SERVICE&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier. It shall be unique per server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (n/a)&lt;/strong>&lt;br>Null or absent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader used to perform the card transaction. It shall be unique per terminal.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (n/a)&lt;/strong>&lt;br>Null or absent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#executeremoteservicebody">ExecuteRemoteServiceBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="executeremoteservicebody">ExecuteRemoteServiceBody&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serviceId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the business service to be executed by the server. It&amp;rsquo;s a naming convention between the client and the server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>inputData&lt;/code>&lt;/td>
&lt;td>&lt;strong>Object (optional)&lt;/strong>&lt;br>An optional object containing additional data to be provided to the remote business service, as for example the &lt;a href="./user-guides/non-keyple-client/selection-json-specification/#selection-result-processing">ProcessedCardSelectionScenarioJsonString&lt;/a> containing the result of an already processed card selection scenario. The content of this property is a convention between the client and the server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>initialCardContent&lt;/code>&lt;/td>
&lt;td>&lt;strong>Object (optional)&lt;/strong>&lt;br>An optional object containing the &lt;a href="./user-guides/non-keyple-client/selection-json-specification/#selection-result-processing">ProcessedCardSelectionScenarioJsonString&lt;/a> containing the result of an already processed card selection scenario. The content of this property is a convention between the client and the server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>initialCardContentClassName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (required only if &lt;code>initialCardContent&lt;/code> is set)&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>java.util.Properties&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="example">Example&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;EXECUTE_REMOTE_SERVICE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;serviceId\&amp;#34;:\&amp;#34;AUTHENTICATE_CARD\&amp;#34;,\&amp;#34;inputData\&amp;#34;:{\&amp;#34;userId\&amp;#34;:\&amp;#34;7b13592c-0d21-429b-80d2-3dc565338ea3\&amp;#34;},\&amp;#34;initialCardContent\&amp;#34;:{\&amp;#34;processedCardSelectionScenarioJsonString\&amp;#34;:\&amp;#34;[{\\\&amp;#34;hasMatched\\\&amp;#34;:false,\\\&amp;#34;powerOnData\\\&amp;#34;:\\\&amp;#34;1234\\\&amp;#34;,\\\&amp;#34;selectApplicationResponse\\\&amp;#34;:{\\\&amp;#34;apdu\\\&amp;#34;:\\\&amp;#34;6400\\\&amp;#34;,\\\&amp;#34;statusWord\\\&amp;#34;:\\\&amp;#34;6400\\\&amp;#34;},\\\&amp;#34;cardResponse\\\&amp;#34;:{\\\&amp;#34;apduResponses\\\&amp;#34;:[],\\\&amp;#34;isLogicalChannelOpen\\\&amp;#34;:false}},{\\\&amp;#34;hasMatched\\\&amp;#34;:true,\\\&amp;#34;powerOnData\\\&amp;#34;:\\\&amp;#34;1234\\\&amp;#34;,\\\&amp;#34;selectApplicationResponse\\\&amp;#34;:{\\\&amp;#34;apdu\\\&amp;#34;:\\\&amp;#34;6F238409315449432E49434131A516BF0C13C708000000001122334453070A3C20051410019000\\\&amp;#34;,\\\&amp;#34;statusWord\\\&amp;#34;:\\\&amp;#34;9000\\\&amp;#34;},\\\&amp;#34;cardResponse\\\&amp;#34;:{\\\&amp;#34;apduResponses\\\&amp;#34;:[{\\\&amp;#34;apdu\\\&amp;#34;:\\\&amp;#34;ABCD9000\\\&amp;#34;,\\\&amp;#34;statusWord\\\&amp;#34;:\\\&amp;#34;9000\\\&amp;#34;}],\\\&amp;#34;isLogicalChannelOpen\\\&amp;#34;:true}}]\&amp;#34;},\&amp;#34;initialCardContentClassName\&amp;#34;:\&amp;#34;java.util.Properties\&amp;#34;}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="command">Command&lt;/h2>
&lt;p>The purpose of this message, received from the server, is to ask the terminal to perform a specific service with the
card or the terminal&amp;rsquo;s reader.&lt;/p>
&lt;p>There are four types of service potentially requested by the server:&lt;/p>
&lt;div id="command-table-1">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Service&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="#reader-type-cmd">Reader Type&lt;/a>&lt;/td>
&lt;td>Indicates if the reader is in contact or contactless mode.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#card-presence-cmd">Card Presence&lt;/a>&lt;/td>
&lt;td>Indicates if a card is present in the reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#card-selection-cmd">Card Selection&lt;/a>&lt;/td>
&lt;td>Establish a logical communication channel with a card and, if required, perform additional APDU exchanges with it.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#card-commands-cmd">Card Commands&lt;/a>&lt;/td>
&lt;td>Perform APDU exchanges with the selected card.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;style>
#command-table-1 table th:nth-child(1) {
width: 9rem;
}
&lt;/style>
&lt;p>Following the reception of this message, the terminal will send to the server a &amp;ldquo;&lt;a href="#response">Response&lt;/a>&amp;rdquo; message
containing the response of the operation.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-keyple-distributed-json-api---command-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-2-0/serverJsonApi_classDiagram_cmd.svg" alt="Keyple Distributed JSON API - &amp;#34;Command&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple Distributed JSON API - &amp;ldquo;Command&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;div class="alert alert-note">
&lt;div>
The value of the &lt;code>service&lt;/code> property determines the service to be performed.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="reader-type-cmd">Reader Type&lt;/h3>
&lt;p>This service allows the server to know if the reader is in contact or contactless mode.&lt;/p>
&lt;p>There are no parameters for this service.&lt;/p>
&lt;p>The terminal must then send the response to the server in a &amp;ldquo;&lt;a href="#reader-type-resp">Reader Type (Response)&lt;/a>&amp;rdquo; message.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-reader-type-cmd">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>CMD&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#iscontactlesscmdbody">IsContactlessCmdBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="iscontactlesscmdbody">IsContactlessCmdBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>IS_CONTACTLESS&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-1">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CMD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;IS_CONTACTLESS\&amp;#34;}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-presence-cmd">Card Presence&lt;/h3>
&lt;p>This service allows the server to know if a card is inserted in the reader.&lt;/p>
&lt;p>There are no parameters for this service.&lt;/p>
&lt;p>The terminal must then send the response to the server in a &amp;ldquo;&lt;a href="#card-presence-resp">Card Presence (Response)&lt;/a>&amp;rdquo; message.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-card-presence-cmd">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>CMD&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#iscardpresentcmdbody">IsCardPresentCmdBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="iscardpresentcmdbody">IsCardPresentCmdBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>IS_CARD_PRESENT&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-2">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CMD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;IS_CARD_PRESENT\&amp;#34;}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-selection-cmd">Card Selection&lt;/h3>
&lt;p>The primary objective of this service is to establish a logical communication channel with a card.&lt;/p>
&lt;p>To enable processing of different card profiles, Keyple offers the creation of selection scenarios with integrated
selection cases. The scenario is provided by the server after a card is detected, and it involves checking whether the
card is compatible with at least one of the selection cases. The selection cases are processed successively, in the
order in which they are defined.&lt;/p>
&lt;p>There are several options for executing the scenario:&lt;/p>
&lt;ul>
&lt;li>the process stops at the first selection case where the card matches, or all selection cases are systematically processed.&lt;/li>
&lt;li>the physical channel can be kept open or closed at the end of each selection case.&lt;/li>
&lt;/ul>
&lt;p>A card selection case incorporates various independent filters that can be applied individually or in combination
to determine if a detected card is suitable for performing a transaction. While some cards can be selected based on
communication protocol or response data from the power-on operation, most of the cards require a selection through
Application Identifier (AID) using the ISO7816-4 &amp;ldquo;Select Application&amp;rdquo; APDU command.&lt;/p>
&lt;p>The structure outlined below allows for defining selection scenarios that combine these three types of filters:&lt;/p>
&lt;ul>
&lt;li>based on the communication protocol,&lt;/li>
&lt;li>based on the response data from the power on stage,&lt;/li>
&lt;li>based on the Application Identifier (AID).&lt;/li>
&lt;/ul>
&lt;p>When filtering by AID, the &amp;ldquo;Select Application&amp;rdquo; APDU command is sent to the card in accordance with the ISO7816-4
standard.
Additional parameters, also defined by the standard, can be set to specify the type of operation (&lt;code>FileOccurrence&lt;/code>)
and the type of output (&lt;code>FileControlInformation&lt;/code>).&lt;/p>
&lt;p>Each filter is optional, and if none are defined, the selection is considered successful as soon as the card is
detected.
However, when a filter is specified, it becomes a prerequisite for the card selection.&lt;/p>
&lt;p>In addition to card selection, a selection scenario can include a list of APDUs that are to be transmitted to the card
as soon as it becomes &amp;ldquo;selected&amp;rdquo;.&lt;/p>
&lt;p>The terminal must iterate over each selection cases of the scenario, determine which type of filter to apply and apply
it (e.g. protocol, power-on data, AID).&lt;/p>
&lt;p>If all the defined filters are satisfied, the terminal must send any additional APDUs.&lt;/p>
&lt;p>The terminal must then send the response to the server in a &amp;ldquo;&lt;a href="#card-selection-resp">Card Selection (Response)&lt;/a>&amp;rdquo; message.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-card-selection-cmd">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>CMD&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardselectionrequestscmdbody">TransmitCardSelectionRequestsCmdBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardselectionrequestscmdbody">TransmitCardSelectionRequestsCmdBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_SELECTION_REQUESTS&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>parameters&lt;/code>&lt;/td>
&lt;td>&lt;a href="#transmitcardselectionrequestsparameters">TransmitCardSelectionRequestsParameters&lt;/a>&lt;br>The card selection parameters.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardselectionrequestsparameters">TransmitCardSelectionRequestsParameters&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>multiSelectionProcessing&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>FIRST_MATCH&lt;/strong>&amp;rdquo;: the selection process stops as soon as a selection case is successful.&lt;br>- &amp;ldquo;&lt;strong>PROCESS_ALL&lt;/strong>&amp;rdquo;: the selection process performs all the selection cases provided (the logical channel is closed at the end of the selection case).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>channelControl&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>KEEP_OPEN&lt;/strong>&amp;rdquo;: leaves the physical channel open.&lt;br>- &amp;ldquo;&lt;strong>CLOSE_AFTER&lt;/strong>&amp;rdquo;: terminates communication with the card.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cardSelectors&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardselector">CardSelector&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cardSelectionRequests&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardselectionrequest">CardSelectionRequest&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array containing the same number of elements as &lt;code>cardSelectors&lt;/code>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardselector">CardSelector&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>logicalProtocolName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional &amp;ldquo;logical&amp;rdquo; name of the targeted card protocol.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>powerOnDataRegex&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional regex to use to filter the power-on data.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>aid&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional Application Identifier (AID) as an hexadecimal string to be sent with ISO7816-4 &amp;ldquo;Select Application&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fileOccurrence&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>&amp;quot;&lt;strong>FIRST&lt;/strong>&amp;quot;, &amp;ldquo;&lt;strong>LAST&lt;/strong>&amp;rdquo;, &amp;ldquo;&lt;strong>NEXT&lt;/strong>&amp;rdquo; or &amp;ldquo;&lt;strong>PREVIOUS&lt;/strong>&amp;rdquo; according to the ISO7816-4 standard (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fileControlInformation&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>&amp;quot;&lt;strong>FCI&lt;/strong>&amp;quot;, &amp;ldquo;&lt;strong>FCP&lt;/strong>&amp;rdquo;, &amp;ldquo;&lt;strong>FMD&lt;/strong>&amp;rdquo; or &amp;ldquo;&lt;strong>NO_RESPONSE&lt;/strong>&amp;rdquo; according to the ISO7816-4 standard (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardselectionrequest">CardSelectionRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>cardRequest&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardrequest">CardRequest&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>An optional object containing a list of APDU requests to be sent after a successful card selection.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>successfulSelectionStatusWords&lt;/code>&lt;/td>
&lt;td>&lt;strong>String [ ]&lt;/strong>&lt;br>A non-empty array of 2-byte hexadecimal strings containing the status word of the &amp;ldquo;Select Application&amp;rdquo; APDU command to be considered successful (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardrequest">CardRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apduRequests&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apdurequest">ApduRequest&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array of APDU requests.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>stopOnUnsuccessfulStatusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the transmission of the APDUs should be interrupted as soon as the status word of a response does not belong to the associated list of successful status words, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apdurequest">ApduRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU to transmit to the card.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>successfulStatusWords&lt;/code>&lt;/td>
&lt;td>&lt;strong>String [ ]&lt;/strong>&lt;br>A non-empty array of 2-byte hexadecimal strings containing the status word to be considered successful.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>info&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional textual information about the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-3">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;5bf1ca9a-2de9-4f16-b170-5de168560179&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;CMD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;824f32f1-ccb0-447c-a103-618152eb49ba&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;fbf011a4-d0e2-4f3f-85c3-2ccd5be01919&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;stubReader&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;852f5841-0b5c-4922-a77a-b103cb5aac3f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_SELECTION_REQUESTS\&amp;#34;,\&amp;#34;parameters\&amp;#34;:{\&amp;#34;multiSelectionProcessing\&amp;#34;:\&amp;#34;FIRST_MATCH\&amp;#34;,\&amp;#34;channelControl\&amp;#34;:\&amp;#34;KEEP_OPEN\&amp;#34;,\&amp;#34;cardSelectors\&amp;#34;:[{\&amp;#34;fileOccurrence\&amp;#34;:\&amp;#34;FIRST\&amp;#34;,\&amp;#34;fileControlInformation\&amp;#34;:\&amp;#34;FCI\&amp;#34;}],\&amp;#34;cardSelectionRequests\&amp;#34;:[{\&amp;#34;successfulSelectionStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;]}]}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-commands-cmd">Card Commands&lt;/h3>
&lt;p>The role of this service is to perform APDU exchanges with the card.&lt;/p>
&lt;p>The terminal must iterate over the list of APDUs present in the card request and proceeds to close the physical channel
if requested.&lt;/p>
&lt;p>The response must be sent to the server in a &amp;ldquo;&lt;a href="#card-commands-resp">Card Commands (Response)&lt;/a>&amp;rdquo; message.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-card-commands-cmd">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>CMD&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardrequestcmdbody">TransmitCardRequestCmdBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardrequestcmdbody">TransmitCardRequestCmdBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_REQUEST&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>parameters&lt;/code>&lt;/td>
&lt;td>&lt;a href="#transmitcardrequestparameters">TransmitCardRequestParameters&lt;/a>&lt;br>The card request parameters.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardrequestparameters">TransmitCardRequestParameters&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>cardRequest&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardrequest-1">CardRequest&lt;/a>&lt;br>An object containing the list of APDU requests to be sent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>channelControl&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>KEEP_OPEN&lt;/strong>&amp;rdquo;: leaves the physical channel open.&lt;br>- &amp;ldquo;&lt;strong>CLOSE_AFTER&lt;/strong>&amp;rdquo;: terminates communication with the card.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardrequest-1">CardRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apduRequests&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apdurequest-1">ApduRequest&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array of APDU requests.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>stopOnUnsuccessfulStatusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the transmission of the APDUs should be interrupted as soon as the status word of a response does not belong to the associated list of successful status words, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apdurequest-1">ApduRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU to transmit to the card.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>successfulStatusWords&lt;/code>&lt;/td>
&lt;td>&lt;strong>String [ ]&lt;/strong>&lt;br>A non-empty array of 2-byte hexadecimal strings containing the status word to be considered successful.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>info&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional textual information about the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-4">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CMD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_REQUEST\&amp;#34;,\&amp;#34;parameters\&amp;#34;:{\&amp;#34;cardRequest\&amp;#34;:{\&amp;#34;apduRequests\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;00B2014400\&amp;#34;,\&amp;#34;successfulStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;],\&amp;#34;info\&amp;#34;:\&amp;#34;Read Records - SFI: 8h, REC: 1, READMODE: ONE_RECORD, EXPECTEDLENGTH: 0\&amp;#34;}],\&amp;#34;stopOnUnsuccessfulStatusWord\&amp;#34;:true},\&amp;#34;channelControl\&amp;#34;:\&amp;#34;CLOSE_AFTER\&amp;#34;}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="response">Response&lt;/h2>
&lt;p>This message, sent by the terminal to the server, is intended to transmit to the server the result of the specific
service previously performed on the card or the terminal&amp;rsquo;s reader.&lt;/p>
&lt;p>Following the transmission of this message, the server will return a &amp;ldquo;&lt;a href="#command">Command&lt;/a>&amp;rdquo; message,
containing the next action to be performed, or an
&amp;ldquo;&lt;a href="#end-remote-service">End Remote Service&lt;/a>&amp;rdquo; message to terminate the transaction.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-keyple-distributed-json-api---response-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-2-0/serverJsonApi_classDiagram_resp.svg" alt="Keyple Distributed JSON API - &amp;#34;Response&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple Distributed JSON API - &amp;ldquo;Response&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;br>
&lt;h3 id="reader-type-resp">Reader Type&lt;/h3>
&lt;p>This message, sent by the terminal to the server in response to &amp;ldquo;&lt;a href="#reader-type-cmd">Reader Type (Command)&lt;/a>&amp;rdquo;, is
intended to indicate to the server if the reader is contactless.&lt;/p>
&lt;h4 id="messagedto-reader-type-resp">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>RESP&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#iscontactlessrespbody">IsContactlessRespBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="iscontactlessrespbody">IsContactlessRespBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>IS_CONTACTLESS&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>result&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean (optional)&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the reader is contactless, &lt;strong>false&lt;/strong> otherwise (absent in case of error).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>&lt;a href="#reader-type-resp-error">Error&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>The error description (absent in case of success).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="reader-type-resp-error">Error&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Free value.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The error description.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="example-5">Example&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RESP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;IS_CONTACTLESS\&amp;#34;,\&amp;#34;result\&amp;#34;:true}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-presence-resp">Card Presence&lt;/h3>
&lt;p>This message, sent by the terminal to the server in response to &amp;ldquo;&lt;a href="#card-presence-cmd">Card Presence (Command)&lt;/a>&amp;rdquo;,
is intended to indicate to the server if a card is present.&lt;/p>
&lt;h4 id="messagedto-card-presence-resp">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The value is &amp;ldquo;&lt;strong>RESP&lt;/strong>&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#iscardpresentrespbody">IsCardPresentRespBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="iscardpresentrespbody">IsCardPresentRespBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>IS_CARD_PRESENT&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>result&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if a card is present, &lt;strong>false&lt;/strong> otherwise (absent in case of error).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>&lt;a href="#card-presence-resp-error">Error&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>The error description (absent in case of success).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="card-presence-resp-error">Error&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>READER_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the reader communication link,&lt;br>- &amp;ldquo;&lt;strong>CARD_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the card communication link.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The error description.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="example-6">Example&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RESP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;IS_CARD_PRESENT\&amp;#34;,\&amp;#34;result\&amp;#34;:true}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-selection-resp">Card Selection&lt;/h3>
&lt;p>This message, sent by the terminal to the server in response to
&amp;ldquo;&lt;a href="#card-selection-cmd">Card Selection (Command)&lt;/a>&amp;rdquo;,
is intended to transmit to the server the result of the execution of the selection scenario.&lt;/p>
&lt;h4 id="messagedto-card-selection-resp">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>RESP&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardselectionrequestsrespbody">TransmitCardSelectionRequestsRespBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardselectionrequestsrespbody">TransmitCardSelectionRequestsRespBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_SELECTION_REQUESTS&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>result&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardselectionresponse">CardSelectionResponse&lt;/a> &lt;strong>[ ] (optional)&lt;/strong>&lt;br>A non-empty list containing at most as many responses as there are selection cases (absent in case of error).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>&lt;a href="#card-selection-resp-error">Error&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>The error description (absent in case of success).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardselectionresponse">CardSelectionResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>hasMatched&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the associated selection case has matched, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>powerOnData&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>Data from the initialization phase of the communication with the card. E.g. the Answer To Reset (ATR) in the case of a contact card or any other string informing about the low level communication. This string can be used for filtering by power-on data defined in the command (absent if the protocol filter failed).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>selectApplicationResponse&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apduresponse">ApduResponse&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>Data received in response to the ISO7816-4 &amp;ldquo;Select Application&amp;rdquo; command (absent if no AID filtering).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cardResponse&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardresponse">CardResponse&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>Data received in response to additional commands (absent if no additional commands were provided).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardresponse">CardResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>isLogicalChannelOpen&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the logical channel is left open, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>apduResponses&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apduresponse">ApduResponse&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A list containing the APDU responses for each request in the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apduresponse">ApduResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU received from the card (including the status word).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>statusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A 2-byte hexadecimal string containing the status word of the received APDU.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="card-selection-resp-error">Error&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>READER_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the reader communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the card communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMAND_ERROR&lt;/strong>&amp;rdquo;: if the card returned an unexpected status word.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The error description.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-7">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RESP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_SELECTION_REQUESTS\&amp;#34;,\&amp;#34;result\&amp;#34;:[{\&amp;#34;hasMatched\&amp;#34;:true,\&amp;#34;powerOnData\&amp;#34;:\&amp;#34;3B8880010000000000718100F9\&amp;#34;,\&amp;#34;selectApplicationResponse\&amp;#34;:{\&amp;#34;apdu\&amp;#34;:\&amp;#34;6F238409315449432E49434131A516BF0C13C708000000001122334453070A3C23121410019000\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;9000\&amp;#34;},\&amp;#34;cardResponse\&amp;#34;:{\&amp;#34;apduResponses\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;24B92848080000131A50001200000000000000000000000000000000009000\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;9000\&amp;#34;}],\&amp;#34;isLogicalChannelOpen\&amp;#34;:true}}]}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-commands-resp">Card Commands&lt;/h3>
&lt;p>This message, sent by the terminal to the server in response to
&amp;ldquo;&lt;a href="#card-commands-cmd">Card Commands (Command)&lt;/a>&amp;rdquo;,
is intended to transmit to the server the result of the execution of a card request.&lt;/p>
&lt;h4 id="messagedto-card-commands-resp">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>RESP&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardrequestrespbody">TransmitCardRequestRespBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardrequestrespbody">TransmitCardRequestRespBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_REQUEST&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>result&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardresponse-1">CardResponse&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>Data received in response to the card request (absent in case of error).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>&lt;a href="#card-commands-resp-error">Error&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>The error description (absent in case of success).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardresponse-1">CardResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>isLogicalChannelOpen&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the logical channel is left open, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>apduResponses&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apduresponse-1">ApduResponse&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A list containing the APDU responses for each request in the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apduresponse-1">ApduResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU received from the card (including the status word).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>statusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A 2-byte hexadecimal string containing the status word of the received APDU.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="card-commands-resp-error">Error&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>READER_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the reader communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the card communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMAND_ERROR&lt;/strong>&amp;rdquo;: if the card returned an unexpected status word.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The error description.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-8">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RESP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_REQUEST\&amp;#34;,\&amp;#34;result\&amp;#34;:{\&amp;#34;apduResponses\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;00112233445566778899AABBCCDDEEFF00112233445566778899AABBCC9000\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;9000\&amp;#34;}],\&amp;#34;isLogicalChannelOpen\&amp;#34;:true}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="end-remote-service">End Remote Service&lt;/h2>
&lt;p>The purpose of this message, received from the server, is to inform the terminal that the transaction has been
completed and, if necessary, to transmit the result. No follow-up is expected from the server.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-keyple-distributed-json-api---end-remote-service-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-2-0/serverJsonApi_classDiagram_endRemoteService.svg" alt="Keyple Distributed JSON API - &amp;#34;End Remote Service&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Keyple Distributed JSON API - &amp;ldquo;End Remote Service&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-end-remote-service">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>END_REMOTE_SERVICE&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (n/a)&lt;/strong>&lt;br>Null or absent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#endremoteservicebody">EndRemoteServiceBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="endremoteservicebody">EndRemoteServiceBody&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>coreApiLevel&lt;/code>&lt;/td>
&lt;td>&lt;strong>Number&lt;/strong>&lt;br>Constant value: &lt;strong>2&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>outputData&lt;/code>&lt;/td>
&lt;td>&lt;strong>Object (optional)&lt;/strong>&lt;br>An optional object containing additional data provided by the remote business service. Its content is a convention between the client and the server.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="example-9">Example&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiLevel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;END_REMOTE_SERVICE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;coreApiLevel\&amp;#34;:2,\&amp;#34;outputData\&amp;#34;:{\&amp;#34;isSuccessful\&amp;#34;:true,\&amp;#34;userId\&amp;#34;:\&amp;#34;test\&amp;#34;}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Selection JSON Specification v1.0</title><link>https://keyple.org/user-guides/non-keyple-client/selection-json-specification/1-0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/user-guides/non-keyple-client/selection-json-specification/1-0/</guid><description>&lt;style>
table th:nth-child(1) {
width: 9rem;
}
&lt;/style>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>This specification is compliant with the following Keyple server side components:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/components/core/keyple-service-lib/" target="_blank" rel="noopener">Keyple Service Library&lt;/a> version &lt;code>3.0.0+&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="card-selection-scenario">Card selection scenario&lt;/h2>
&lt;p>The JSON string &lt;code>CardSelectionScenarioJsonString&lt;/code> contains a JSON object &lt;a href="#cardselectionscenario">CardSelectionScenario&lt;/a>
containing the card selection scenario to be processed when a card is detected.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-cardselectionscenario-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/selection-json-specification-1-0/Class_CardSelectionScenario.svg" alt="&amp;#34;CardSelectionScenario&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
&amp;ldquo;CardSelectionScenario&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;h3 id="cardselectionscenario">CardSelectionScenario&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>multiSelectionProcessing&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>FIRST_MATCH&lt;/strong>&amp;rdquo;: the selection process stops as soon as a selection case is successful.&lt;br>- &amp;ldquo;&lt;strong>PROCESS_ALL&lt;/strong>&amp;rdquo;: the selection process performs all the selection cases provided (the logical channel is closed at the end of the selection case).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>channelControl&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>KEEP_OPEN&lt;/strong>&amp;rdquo;: leaves the physical channel open.&lt;br>- &amp;ldquo;&lt;strong>CLOSE_AFTER&lt;/strong>&amp;rdquo;: terminates communication with the card.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cardSelectors&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardselector">CardSelector&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>defaultCardSelections&lt;/code>&lt;/td>
&lt;td>&lt;a href="#defaultcardselection">DefaultCardSelection&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array containing the same number of elements as &lt;code>cardSelectors&lt;/code>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-warning">
&lt;div>
Please note that additional properties are present, but are useless for a non-Keyple client and are therefore to be
ignored!
&lt;/div>
&lt;/div>
&lt;h3 id="cardselector">CardSelector&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>logicalProtocolName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional &amp;ldquo;logical&amp;rdquo; name of the targeted card protocol.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>powerOnDataRegex&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional regex to use to filter the power-on data.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>aid&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional Application Identifier (AID) as an hexadecimal string to be sent with ISO7816-4 &amp;ldquo;Select Application&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fileOccurrence&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>&amp;quot;&lt;strong>FIRST&lt;/strong>&amp;quot;, &amp;ldquo;&lt;strong>LAST&lt;/strong>&amp;rdquo;, &amp;ldquo;&lt;strong>NEXT&lt;/strong>&amp;rdquo; or &amp;ldquo;&lt;strong>PREVIOUS&lt;/strong>&amp;rdquo; according to the ISO7816-4 standard (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fileControlInformation&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>&amp;quot;&lt;strong>FCI&lt;/strong>&amp;quot;, &amp;ldquo;&lt;strong>FCP&lt;/strong>&amp;rdquo;, &amp;ldquo;&lt;strong>FMD&lt;/strong>&amp;rdquo; or &amp;ldquo;&lt;strong>NO_RESPONSE&lt;/strong>&amp;rdquo; according to the ISO7816-4 standard (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="defaultcardselection">DefaultCardSelection&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>CardSelectionRequest&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardselectionrequest">CardSelectionRequest&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="cardselectionrequest">CardSelectionRequest&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>cardRequest&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardrequest">CardRequest&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>An optional object containing a list of APDU requests to be sent after a successful card selection.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>successfulSelectionStatusWords&lt;/code>&lt;/td>
&lt;td>&lt;strong>String [ ]&lt;/strong>&lt;br>A non-empty array of 2-byte hexadecimal strings containing the status word of the &amp;ldquo;Select Application&amp;rdquo; APDU command to be considered successful (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="cardrequest">CardRequest&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apduRequests&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apdurequest">ApduRequest&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array of APDU requests.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>stopOnUnsuccessfulStatusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the transmission of the APDUs should be interrupted as soon as the status word of a response does not belong to the associated list of successful status words, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="apdurequest">ApduRequest&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU to transmit to the card.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>successfulStatusWords&lt;/code>&lt;/td>
&lt;td>&lt;strong>String [ ]&lt;/strong>&lt;br>A non-empty array of 2-byte hexadecimal strings containing the status word to be considered successful.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>info&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional textual information about the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="example">Example&lt;/h3>
&lt;h4 id="cardselectionscenariojsonstring">CardSelectionScenarioJsonString&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;{\&amp;#34;multiSelectionProcessing\&amp;#34;:\&amp;#34;FIRST_MATCH\&amp;#34;,\&amp;#34;channelControl\&amp;#34;:\&amp;#34;KEEP_OPEN\&amp;#34;,\&amp;#34;cardSelectors\&amp;#34;:[{\&amp;#34;logicalProtocolName\&amp;#34;:\&amp;#34;CALYPSO_CARD_PROTOCOL\&amp;#34;,\&amp;#34;powerOnDataRegex\&amp;#34;:\&amp;#34;.*\&amp;#34;,\&amp;#34;aid\&amp;#34;:\&amp;#34;1122334455\&amp;#34;,\&amp;#34;fileOccurrence\&amp;#34;:\&amp;#34;FIRST\&amp;#34;,\&amp;#34;fileControlInformation\&amp;#34;:\&amp;#34;FCI\&amp;#34;},{\&amp;#34;logicalProtocolName\&amp;#34;:\&amp;#34;GENERIC_CARD_PROTOCOL\&amp;#34;,\&amp;#34;powerOnDataRegex\&amp;#34;:\&amp;#34;.*\&amp;#34;,\&amp;#34;aid\&amp;#34;:\&amp;#34;1122334455\&amp;#34;,\&amp;#34;fileOccurrence\&amp;#34;:\&amp;#34;FIRST\&amp;#34;,\&amp;#34;fileControlInformation\&amp;#34;:\&amp;#34;FCI\&amp;#34;}],\&amp;#34;defaultCardSelections\&amp;#34;:[{\&amp;#34;cardSelectionRequest\&amp;#34;:{\&amp;#34;cardRequest\&amp;#34;:{\&amp;#34;apduRequests\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;00B2020C00\&amp;#34;,\&amp;#34;successfulStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;],\&amp;#34;info\&amp;#34;:\&amp;#34;Read Records - sfi: 01h, rec: 2, read mode: ONE_RECORD, expected length: 0\&amp;#34;},{\&amp;#34;apdu\&amp;#34;:\&amp;#34;00B081000A\&amp;#34;,\&amp;#34;successfulStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;],\&amp;#34;info\&amp;#34;:\&amp;#34;Read Binary - sfi: 01h, offset: 0, length: 10\&amp;#34;},{\&amp;#34;apdu\&amp;#34;:\&amp;#34;00B2010C03\&amp;#34;,\&amp;#34;successfulStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;],\&amp;#34;info\&amp;#34;:\&amp;#34;Read Records - sfi: 01h, rec: 1, read mode: ONE_RECORD, expected length: 3\&amp;#34;},{\&amp;#34;apdu\&amp;#34;:\&amp;#34;008A0302010000\&amp;#34;,\&amp;#34;successfulStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;],\&amp;#34;info\&amp;#34;:\&amp;#34;Open Secure Session - key index: 3, sfi: 00h, rec: 0 - pre-open\&amp;#34;}],\&amp;#34;stopOnUnsuccessfulStatusWord\&amp;#34;:false},\&amp;#34;successfulSelectionStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;,\&amp;#34;6283\&amp;#34;]}},{\&amp;#34;cardSelectionRequest\&amp;#34;:{\&amp;#34;successfulSelectionStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;]}}]}&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="json-content">JSON content&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;multiSelectionProcessing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;FIRST_MATCH&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;channelControl&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;KEEP_OPEN&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cardSelectors&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;logicalProtocolName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CALYPSO_CARD_PROTOCOL&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;powerOnDataRegex&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;.*&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;aid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1122334455&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;fileOccurrence&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;FIRST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;fileControlInformation&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;FCI&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;logicalProtocolName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;GENERIC_CARD_PROTOCOL&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;powerOnDataRegex&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;.*&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;aid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1122334455&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;fileOccurrence&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;FIRST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;fileControlInformation&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;FCI&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;defaultCardSelections&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cardSelectionRequest&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cardRequest&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apduRequests&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apdu&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;00B2020C00&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;successfulStatusWords&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;9000&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;info&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Read Records - sfi: 01h, rec: 2, read mode: ONE_RECORD, expected length: 0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apdu&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;00B081000A&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;successfulStatusWords&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;9000&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;info&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Read Binary - sfi: 01h, offset: 0, length: 10&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apdu&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;00B2010C03&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;successfulStatusWords&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;9000&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;info&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Read Records - sfi: 01h, rec: 1, read mode: ONE_RECORD, expected length: 3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apdu&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;008A0302010000&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;successfulStatusWords&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;9000&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;info&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Open Secure Session - key index: 3, sfi: 00h, rec: 0 - pre-open&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;stopOnUnsuccessfulStatusWord&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;successfulSelectionStatusWords&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;9000&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;6283&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cardSelectionRequest&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;successfulSelectionStatusWords&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;9000&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">...&lt;/span> &lt;span class="err">additional&lt;/span> &lt;span class="err">properties&lt;/span> &lt;span class="err">are&lt;/span> &lt;span class="err">to&lt;/span> &lt;span class="err">be&lt;/span> &lt;span class="err">ignored&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="processed-card-selection-scenario">Processed card selection scenario&lt;/h2>
&lt;p>The JSON string &lt;code>ProcessedCardSelectionScenarioJsonString&lt;/code> contains a JSON array of JSON objects
&lt;a href="#cardselectionresponse">CardSelectionResponse&lt;/a> containing the result of each processed case of the card selection
scenario.&lt;/p>
&lt;p>Depending on the configuration of the selection scenario, the result list may contain fewer elements than the number of
selection cases present in the scenario (e.g. if the &lt;code>multiSelectionProcessing&lt;/code> property is set to &lt;code>FIRST_MATCH&lt;/code>).&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-cardselectionresponse-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/selection-json-specification-1-0/Class_CardSelectionResponse.svg" alt="&amp;#34;CardSelectionResponse&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
&amp;ldquo;CardSelectionResponse&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;h3 id="cardselectionresponse">CardSelectionResponse&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>hasMatched&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the associated selection case has matched, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>powerOnData&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>Data from the initialization phase of the communication with the card. E.g. the Answer To Reset (ATR) in the case of a contact card or any other string informing about the low level communication. This string can be used for filtering by power-on data defined in the command (absent if the protocol filter failed).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>selectApplicationResponse&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apduresponse">ApduResponse&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>Data received in response to the ISO7816-4 &amp;ldquo;Select Application&amp;rdquo; command (absent if no AID filtering).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cardResponse&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardresponse">CardResponse&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>Data received in response to additional commands (absent if no additional commands were provided).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="cardresponse">CardResponse&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>isLogicalChannelOpen&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the logical channel is left open, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>apduResponses&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apduresponse">ApduResponse&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A list containing the APDU responses for each request in the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="apduresponse">ApduResponse&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU received from the card (including the status word).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>statusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A 2-byte hexadecimal string containing the status word of the received APDU.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="example-1">Example&lt;/h3>
&lt;h4 id="processedcardselectionscenariojsonstring">ProcessedCardSelectionScenarioJsonString&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;[{\&amp;#34;hasMatched\&amp;#34;:false,\&amp;#34;powerOnData\&amp;#34;:\&amp;#34;1234\&amp;#34;,\&amp;#34;selectApplicationResponse\&amp;#34;:{\&amp;#34;apdu\&amp;#34;:\&amp;#34;6400\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;6400\&amp;#34;},\&amp;#34;cardResponse\&amp;#34;:{\&amp;#34;apduResponses\&amp;#34;:[],\&amp;#34;isLogicalChannelOpen\&amp;#34;:false}},{\&amp;#34;hasMatched\&amp;#34;:true,\&amp;#34;powerOnData\&amp;#34;:\&amp;#34;1234\&amp;#34;,\&amp;#34;selectApplicationResponse\&amp;#34;:{\&amp;#34;apdu\&amp;#34;:\&amp;#34;6F238409315449432E49434131A516BF0C13C708000000001122334453070A3C20051410019000\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;9000\&amp;#34;},\&amp;#34;cardResponse\&amp;#34;:{\&amp;#34;apduResponses\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;ABCD9000\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;9000\&amp;#34;}],\&amp;#34;isLogicalChannelOpen\&amp;#34;:true}}]&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4 id="json-content-1">JSON content&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;hasMatched&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;powerOnData&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1234&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;selectApplicationResponse&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apdu&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;6400&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;statusWord&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;6400&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cardResponse&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apduResponses&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;isLogicalChannelOpen&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;hasMatched&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;powerOnData&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1234&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;selectApplicationResponse&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apdu&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;6F238409315449432E49434131A516BF0C13C708000000001122334453070A3C20051410019000&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;statusWord&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;9000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cardResponse&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apduResponses&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apdu&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ABCD9000&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;statusWord&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;9000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;isLogicalChannelOpen&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Server JSON API v1.0</title><link>https://keyple.org/user-guides/non-keyple-client/server-json-api/1-0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/user-guides/non-keyple-client/server-json-api/1-0/</guid><description>&lt;style>
table th:nth-child(1) {
width: 9rem;
}
&lt;/style>
&lt;div class="alert alert-warning">
&lt;div>
&lt;p>This API is compliant with the following Keyple server side components:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/components/core/keyple-service-lib/" target="_blank" rel="noopener">Keyple Service Library&lt;/a> version &lt;code>2.1.4+&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://keyple.org/components/distributed/keyple-distributed-network-lib/" target="_blank" rel="noopener">Keyple Distributed Network Library&lt;/a> version &lt;code>2.2.0+&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://keyple.org/components/distributed/keyple-distributed-remote-lib/" target="_blank" rel="noopener">Keyple Distributed Remote Library&lt;/a> version &lt;code>2.2.0+&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="messagedto">MessageDto&lt;/h2>
&lt;p>The diagram below shows the format of the &lt;code>MessageDto&lt;/code> object but the detailed content will be described in the
sections associated with each message type:&lt;/p>
&lt;figure id="figure-messagedto">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-1-0/serverJsonApi_classDiagram_MessageDto.svg" alt="MessageDto" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
MessageDto
&lt;/figcaption>&lt;/figure>
&lt;div class="alert alert-note">
&lt;div>
The value of the &lt;code>action&lt;/code> property determines the message type.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="execute-remote-service">Execute Remote Service&lt;/h2>
&lt;p>The purpose of this message, sent to the server, is to initiate the server-controlled card
transaction.&lt;/p>
&lt;p>By using the identification properties provided by the terminal in its subsequent responses, the server ensures
consistent and accurate data flow management throughout the entire system.&lt;/p>
&lt;p>Following the transmission of this message, the server will return a &amp;ldquo;&lt;a href="#command">Command&lt;/a>&amp;rdquo; message,
containing the first action to be performed with the card or the terminal&amp;rsquo;s reader, or an
&amp;ldquo;&lt;a href="#end-remote-service">End Remote Service&lt;/a>&amp;rdquo; message to terminate the transaction.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-execute-remote-service-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-1-0/serverJsonApi_classDiagram_executeRemoteService.svg" alt="&amp;#34;Execute Remote Service&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
&amp;ldquo;Execute Remote Service&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;h4 id="messagedto-execute-remote-service">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>EXECUTE_REMOTE_SERVICE&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#executeremoteservicebody">ExecuteRemoteServiceBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The session identifier. It shall be unique per card transaction.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier. It shall be unique per server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader used to perform the card transaction. It shall be unique per terminal.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (n/a)&lt;/strong>&lt;br>Null or absent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (n/a)&lt;/strong>&lt;br>Null or absent.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="executeremoteservicebody">ExecuteRemoteServiceBody&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>serviceId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the business service to be executed by the server. It&amp;rsquo;s a naming convention between the client and the server.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>inputData&lt;/code>&lt;/td>
&lt;td>&lt;strong>Object (optional)&lt;/strong>&lt;br>An optional object containing additional data to be provided to the remote business service. Its content is a convention between the client and the server.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="example">Example&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;EXECUTE_REMOTE_SERVICE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;serviceId\&amp;#34;:\&amp;#34;AUTHENTICATE_CARD\&amp;#34;,\&amp;#34;inputData\&amp;#34;:{\&amp;#34;userId\&amp;#34;:\&amp;#34;7b13592c-0d21-429b-80d2-3dc565338ea3\&amp;#34;}}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="command">Command&lt;/h2>
&lt;p>The purpose of this message, received from the server, is to ask the terminal to perform a specific service with the
card or the terminal&amp;rsquo;s reader.&lt;/p>
&lt;p>There are four types of service potentially requested by the server:&lt;/p>
&lt;div id="command-table-1">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Service&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="#reader-type-cmd">Reader Type&lt;/a>&lt;/td>
&lt;td>Indicates if the reader is in contact or contactless mode.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#card-presence-cmd">Card Presence&lt;/a>&lt;/td>
&lt;td>Indicates if a card is present in the reader.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#card-selection-cmd">Card Selection&lt;/a>&lt;/td>
&lt;td>Establish a logical communication channel with a card and, if required, perform additional APDU exchanges with it.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#card-commands-cmd">Card Commands&lt;/a>&lt;/td>
&lt;td>Perform APDU exchanges with the selected card.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;style>
#command-table-1 table th:nth-child(1) {
width: 9rem;
}
&lt;/style>
&lt;p>Following the reception of this message, the terminal will send to the server a &amp;ldquo;&lt;a href="#response">Response&lt;/a>&amp;rdquo; message
containing the response of the operation.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-command-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-1-0/serverJsonApi_classDiagram_cmd.svg" alt="&amp;#34;Command&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
&amp;ldquo;Command&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;div class="alert alert-note">
&lt;div>
The value of the &lt;code>service&lt;/code> property determines the service to be performed.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="reader-type-cmd">Reader Type&lt;/h3>
&lt;p>This service allows the server to know if the reader is in contact or contactless mode.&lt;/p>
&lt;p>There are no parameters for this service.&lt;/p>
&lt;p>The terminal must then send the response to the server in a &amp;ldquo;&lt;a href="#reader-type-resp">Reader Type (Response)&lt;/a>&amp;rdquo; message.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-reader-type-cmd">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>CMD&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#iscontactlesscmdbody">IsContactlessCmdBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="iscontactlesscmdbody">IsContactlessCmdBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>IS_CONTACTLESS&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-1">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CMD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;service\&amp;#34;:\&amp;#34;IS_CONTACTLESS\&amp;#34;}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-presence-cmd">Card Presence&lt;/h3>
&lt;p>This service allows the server to know if a card is inserted in the reader.&lt;/p>
&lt;p>There are no parameters for this service.&lt;/p>
&lt;p>The terminal must then send the response to the server in a &amp;ldquo;&lt;a href="#card-presence-resp">Card Presence (Response)&lt;/a>&amp;rdquo; message.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-card-presence-cmd">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>CMD&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#iscardpresentcmdbody">IsCardPresentCmdBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="iscardpresentcmdbody">IsCardPresentCmdBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>IS_CARD_PRESENT&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-2">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CMD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;service\&amp;#34;:\&amp;#34;IS_CARD_PRESENT\&amp;#34;}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-selection-cmd">Card Selection&lt;/h3>
&lt;p>The primary objective of this service is to establish a logical communication channel with a card.&lt;/p>
&lt;p>To enable processing of different card profiles, Keyple offers the creation of selection scenarios with integrated
selection cases. The scenario is provided by the server after a card is detected, and it involves checking whether the
card is compatible with at least one of the selection cases. The selection cases are processed successively, in the
order in which they are defined.&lt;/p>
&lt;p>There are several options for executing the scenario:&lt;/p>
&lt;ul>
&lt;li>the process stops at the first selection case where the card matches, or all selection cases are systematically processed.&lt;/li>
&lt;li>the physical channel can be kept open or closed at the end of each selection case.&lt;/li>
&lt;/ul>
&lt;p>A card selection case incorporates various independent filters that can be applied individually or in combination
to determine if a detected card is suitable for performing a transaction. While some cards can be selected based on
communication protocol or response data from the power-on operation, most of the cards require a selection through
Application Identifier (AID) using the ISO7816-4 &amp;ldquo;Select Application&amp;rdquo; APDU command.&lt;/p>
&lt;p>The structure outlined below allows for defining selection scenarios that combine these three types of filters:&lt;/p>
&lt;ul>
&lt;li>based on the communication protocol,&lt;/li>
&lt;li>based on the response data from the power on stage,&lt;/li>
&lt;li>based on the Application Identifier (AID).&lt;/li>
&lt;/ul>
&lt;p>When filtering by AID, the &amp;ldquo;Select Application&amp;rdquo; APDU command is sent to the card in accordance with the ISO7816-4
standard.
Additional parameters, also defined by the standard, can be set to specify the type of operation (&lt;code>FileOccurrence&lt;/code>)
and the type of output (&lt;code>FileControlInformation&lt;/code>).&lt;/p>
&lt;p>Each filter is optional, and if none are defined, the selection is considered successful as soon as the card is
detected.
However, when a filter is specified, it becomes a prerequisite for the card selection.&lt;/p>
&lt;p>In addition to card selection, a selection scenario can include a list of APDUs that are to be transmitted to the card
as soon as it becomes &amp;ldquo;selected&amp;rdquo;.&lt;/p>
&lt;p>The terminal must iterate over each selection cases of the scenario, determine which type of filter to apply and apply
it (e.g. protocol, power-on data, AID).&lt;/p>
&lt;p>If all the defined filters are satisfied, the terminal must send any additional APDUs.&lt;/p>
&lt;p>The terminal must then send the response to the server in a &amp;ldquo;&lt;a href="#card-selection-resp">Card Selection (Response)&lt;/a>&amp;rdquo; message.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-card-selection-cmd">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>CMD&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardselectionrequestscmdbody">TransmitCardSelectionRequestsCmdBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardselectionrequestscmdbody">TransmitCardSelectionRequestsCmdBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_SELECTION_REQUESTS&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>parameters&lt;/code>&lt;/td>
&lt;td>&lt;a href="#transmitcardselectionrequestsparameters">TransmitCardSelectionRequestsParameters&lt;/a>&lt;br>The card selection parameters.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardselectionrequestsparameters">TransmitCardSelectionRequestsParameters&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>cardSelectionRequests&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardselectionrequest">CardSelectionRequest&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>multiSelectionProcessing&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>FIRST_MATCH&lt;/strong>&amp;rdquo;: the selection process stops as soon as a selection case is successful.&lt;br>- &amp;ldquo;&lt;strong>PROCESS_ALL&lt;/strong>&amp;rdquo;: the selection process performs all the selection cases provided (the logical channel is closed at the end of the selection case).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>channelControl&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>KEEP_OPEN&lt;/strong>&amp;rdquo;: leaves the physical channel open.&lt;br>- &amp;ldquo;&lt;strong>CLOSE_AFTER&lt;/strong>&amp;rdquo;: terminates communication with the card.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardselectionrequest">CardSelectionRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>cardSelector&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardselector">CardSelector&lt;/a>&lt;br>The card selection criteria.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cardRequest&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardrequest">CardRequest&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>An optional object containing a list of APDU requests to be sent after a successful card selection.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardselector">CardSelector&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>cardProtocol&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional name of the targeted card protocol.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>powerOnDataRegex&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional regex to use to filter the power-on data.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>aid&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional Application Identifier (AID) as an hexadecimal string to be sent with ISO7816-4 &amp;ldquo;Select Application&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fileOccurrence&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>&amp;quot;&lt;strong>FIRST&lt;/strong>&amp;quot;, &amp;ldquo;&lt;strong>LAST&lt;/strong>&amp;rdquo;, &amp;ldquo;&lt;strong>NEXT&lt;/strong>&amp;rdquo; or &amp;ldquo;&lt;strong>PREVIOUS&lt;/strong>&amp;rdquo; according to the ISO7816-4 standard (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fileControlInformation&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>&amp;quot;&lt;strong>FCI&lt;/strong>&amp;quot;, &amp;ldquo;&lt;strong>FCP&lt;/strong>&amp;rdquo;, &amp;ldquo;&lt;strong>FMD&lt;/strong>&amp;rdquo; or &amp;ldquo;&lt;strong>NO_RESPONSE&lt;/strong>&amp;rdquo; according to the ISO7816-4 standard (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>successfulSelectionStatusWords&lt;/code>&lt;/td>
&lt;td>&lt;strong>String [ ]&lt;/strong>&lt;br>A non-empty array of 2-byte hexadecimal strings containing the status word of the &amp;ldquo;Select Application&amp;rdquo; APDU command to be considered successful (only relevant when AID is set).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardrequest">CardRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apduRequests&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apdurequest">ApduRequest&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array of APDU requests.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>stopOnUnsuccessfulStatusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean (optional)&lt;/strong>&lt;br>If present, set to &lt;strong>true&lt;/strong> if the transmission of the APDUs should be interrupted as soon as the status word of a response does not belong to the associated list of successful status words, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>isStatusCodesVerificationEnabled&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean (optional)&lt;/strong>&lt;br>If present, set to &lt;strong>true&lt;/strong> if the transmission of the APDUs should be interrupted as soon as the status word of a response does not belong to the associated list of successful status words, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apdurequest">ApduRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU to transmit to the card.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>successfulStatusWords&lt;/code>&lt;/td>
&lt;td>&lt;strong>String [ ]&lt;/strong>&lt;br>A non-empty array of 2-byte hexadecimal strings containing the status word to be considered successful.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>info&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional textual information about the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-3">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CMD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_SELECTION_REQUESTS\&amp;#34;,\&amp;#34;parameters\&amp;#34;:{\&amp;#34;multiSelectionProcessing\&amp;#34;:\&amp;#34;FIRST_MATCH\&amp;#34;,\&amp;#34;channelControl\&amp;#34;:\&amp;#34;KEEP_OPEN\&amp;#34;,\&amp;#34;cardSelectionRequests\&amp;#34;:[{\&amp;#34;cardSelector\&amp;#34;:{\&amp;#34;cardProtocol\&amp;#34;:\&amp;#34;ISO_14443_4_CARD\&amp;#34;,\&amp;#34;aid\&amp;#34;:\&amp;#34;315449432E49434131\&amp;#34;,\&amp;#34;fileOccurrence\&amp;#34;:\&amp;#34;FIRST\&amp;#34;,\&amp;#34;fileControlInformation\&amp;#34;:\&amp;#34;FCI\&amp;#34;,\&amp;#34;successfulSelectionStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;]},\&amp;#34;cardRequest\&amp;#34;:{\&amp;#34;apduRequests\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;00B2013C00\&amp;#34;,\&amp;#34;successfulStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;],\&amp;#34;info\&amp;#34;:\&amp;#34;Read Records - SFI: 7h, REC: 1, READMODE: ONE_RECORD, EXPECTEDLENGTH: 0\&amp;#34;}],\&amp;#34;isStatusCodesVerificationEnabled\&amp;#34;:false}}]}}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-commands-cmd">Card Commands&lt;/h3>
&lt;p>The role of this service is to perform APDU exchanges with the card.&lt;/p>
&lt;p>The terminal must iterate over the list of APDUs present in the card request and proceeds to close the physical channel
if requested.&lt;/p>
&lt;p>The response must be sent to the server in a &amp;ldquo;&lt;a href="#card-commands-resp">Card Commands (Response)&lt;/a>&amp;rdquo; message.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-card-commands-cmd">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>CMD&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardrequestcmdbody">TransmitCardRequestCmdBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardrequestcmdbody">TransmitCardRequestCmdBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_REQUEST&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>parameters&lt;/code>&lt;/td>
&lt;td>&lt;a href="#transmitcardrequestparameters">TransmitCardRequestParameters&lt;/a>&lt;br>The card request parameters.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardrequestparameters">TransmitCardRequestParameters&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>cardRequest&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardrequest-1">CardRequest&lt;/a>&lt;br>An object containing the list of APDU requests to be sent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>channelControl&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>KEEP_OPEN&lt;/strong>&amp;rdquo;: leaves the physical channel open.&lt;br>- &amp;ldquo;&lt;strong>CLOSE_AFTER&lt;/strong>&amp;rdquo;: terminates communication with the card.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardrequest-1">CardRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apduRequests&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apdurequest-1">ApduRequest&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A non-empty array of APDU requests.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>stopOnUnsuccessfulStatusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean (optional)&lt;/strong>&lt;br>If present, set to &lt;strong>true&lt;/strong> if the transmission of the APDUs should be interrupted as soon as the status word of a response does not belong to the associated list of successful status words, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>isStatusCodesVerificationEnabled&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean (optional)&lt;/strong>&lt;br>If present, set to &lt;strong>true&lt;/strong> if the transmission of the APDUs should be interrupted as soon as the status word of a response does not belong to the associated list of successful status words, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apdurequest-1">ApduRequest&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU to transmit to the card.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>successfulStatusWords&lt;/code>&lt;/td>
&lt;td>&lt;strong>String [ ]&lt;/strong>&lt;br>A non-empty array of 2-byte hexadecimal strings containing the status word to be considered successful.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>info&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>An optional textual information about the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-4">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CMD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_REQUEST\&amp;#34;,\&amp;#34;parameters\&amp;#34;:{\&amp;#34;cardRequest\&amp;#34;:{\&amp;#34;apduRequests\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;00B2014400\&amp;#34;,\&amp;#34;successfulStatusWords\&amp;#34;:[\&amp;#34;9000\&amp;#34;],\&amp;#34;info\&amp;#34;:\&amp;#34;Read Records - SFI: 8h, REC: 1, READMODE: ONE_RECORD, EXPECTEDLENGTH: 0\&amp;#34;}],\&amp;#34;isStatusCodesVerificationEnabled\&amp;#34;:true},\&amp;#34;channelControl\&amp;#34;:\&amp;#34;CLOSE_AFTER\&amp;#34;}}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="response">Response&lt;/h2>
&lt;p>This message, sent by the terminal to the server, is intended to transmit to the server the result of the specific
service previously performed on the card or the terminal&amp;rsquo;s reader.&lt;/p>
&lt;p>Following the transmission of this message, the server will return a &amp;ldquo;&lt;a href="#command">Command&lt;/a>&amp;rdquo; message,
containing the next action to be performed, or an
&amp;ldquo;&lt;a href="#end-remote-service">End Remote Service&lt;/a>&amp;rdquo; message to terminate the transaction.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-response-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-1-0/serverJsonApi_classDiagram_resp.svg" alt="&amp;#34;Response&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
&amp;ldquo;Response&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;br>
&lt;h3 id="reader-type-resp">Reader Type&lt;/h3>
&lt;p>This message, sent by the terminal to the server in response to &amp;ldquo;&lt;a href="#reader-type-cmd">Reader Type (Command)&lt;/a>&amp;rdquo;, is
intended to indicate to the server if the reader is contactless.&lt;/p>
&lt;h4 id="messagedto-reader-type-resp">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>RESP&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#iscontactlessrespbody">IsContactlessRespBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="iscontactlessrespbody">IsContactlessRespBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>IS_CONTACTLESS&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>result&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean (optional)&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the reader is contactless, &lt;strong>false&lt;/strong> otherwise (absent in case of error).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>&lt;a href="#reader-type-resp-error">Error&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>The error description (absent in case of success).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="reader-type-resp-error">Error&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Free value.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The error description.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="example-5">Example&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RESP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;service\&amp;#34;:\&amp;#34;IS_CONTACTLESS\&amp;#34;,\&amp;#34;result\&amp;#34;:true}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-presence-resp">Card Presence&lt;/h3>
&lt;p>This message, sent by the terminal to the server in response to &amp;ldquo;&lt;a href="#card-presence-cmd">Card Presence (Command)&lt;/a>&amp;rdquo;,
is intended to indicate to the server if a card is present.&lt;/p>
&lt;h4 id="messagedto-card-presence-resp">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The value is &amp;ldquo;&lt;strong>RESP&lt;/strong>&amp;rdquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#iscardpresentrespbody">IsCardPresentRespBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="iscardpresentrespbody">IsCardPresentRespBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>IS_CARD_PRESENT&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>result&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if a card is present, &lt;strong>false&lt;/strong> otherwise (absent in case of error).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>&lt;a href="#card-presence-resp-error">Error&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>The error description (absent in case of success).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="card-presence-resp-error">Error&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>READER_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the reader communication link,&lt;br>- &amp;ldquo;&lt;strong>CARD_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the card communication link.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The error description.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="example-6">Example&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RESP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;service\&amp;#34;:\&amp;#34;IS_CARD_PRESENT\&amp;#34;,\&amp;#34;result\&amp;#34;:true}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-selection-resp">Card Selection&lt;/h3>
&lt;p>This message, sent by the terminal to the server in response to
&amp;ldquo;&lt;a href="#card-selection-cmd">Card Selection (Command)&lt;/a>&amp;rdquo;,
is intended to transmit to the server the result of the execution of the selection scenario.&lt;/p>
&lt;h4 id="messagedto-card-selection-resp">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>RESP&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardselectionrequestsrespbody">TransmitCardSelectionRequestsRespBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardselectionrequestsrespbody">TransmitCardSelectionRequestsRespBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_SELECTION_REQUESTS&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>result&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardselectionresponse">CardSelectionResponse&lt;/a> &lt;strong>[ ] (optional)&lt;/strong>&lt;br>A non-empty list containing at most as many responses as there are selection cases (absent in case of error).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>&lt;a href="#card-selection-resp-error">Error&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>The error description (absent in case of success).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardselectionresponse">CardSelectionResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>hasMatched&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the associated selection case has matched, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>powerOnData&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (optional)&lt;/strong>&lt;br>Data from the initialization phase of the communication with the card. E.g. the Answer To Reset (ATR) in the case of a contact card or any other string informing about the low level communication. This string can be used for filtering by power-on data defined in the command (absent if the protocol filter failed).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>selectApplicationResponse&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apduresponse">ApduResponse&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>Data received in response to the ISO7816-4 &amp;ldquo;Select Application&amp;rdquo; command (absent if no AID filtering).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cardResponse&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardresponse">CardResponse&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>Data received in response to additional commands (absent if no additional commands were provided).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardresponse">CardResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>isLogicalChannelOpen&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the logical channel is left open, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>apduResponses&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apduresponse">ApduResponse&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A list containing the APDU responses for each request in the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apduresponse">ApduResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU received from the card (including the status word).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>statusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A 2-byte hexadecimal string containing the status word of the received APDU.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="card-selection-resp-error">Error&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>READER_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the reader communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the card communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMAND_ERROR&lt;/strong>&amp;rdquo;: if the card returned an unexpected status word.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The error description.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-7">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RESP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_SELECTION_REQUESTS\&amp;#34;,\&amp;#34;result\&amp;#34;:[{\&amp;#34;hasMatched\&amp;#34;:true,\&amp;#34;powerOnData\&amp;#34;:\&amp;#34;3B8880010000000000718100F9\&amp;#34;,\&amp;#34;selectApplicationResponse\&amp;#34;:{\&amp;#34;apdu\&amp;#34;:\&amp;#34;6F238409315449432E49434131A516BF0C13C708000000001122334453070A3C23121410019000\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;9000\&amp;#34;},\&amp;#34;cardResponse\&amp;#34;:{\&amp;#34;apduResponses\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;24B92848080000131A50001200000000000000000000000000000000009000\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;9000\&amp;#34;}],\&amp;#34;isLogicalChannelOpen\&amp;#34;:true}}]}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3 id="card-commands-resp">Card Commands&lt;/h3>
&lt;p>This message, sent by the terminal to the server in response to
&amp;ldquo;&lt;a href="#card-commands-cmd">Card Commands (Command)&lt;/a>&amp;rdquo;,
is intended to transmit to the server the result of the execution of a card request.&lt;/p>
&lt;h4 id="messagedto-card-commands-resp">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>RESP&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#transmitcardrequestrespbody">TransmitCardRequestRespBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the local reader as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader as provided by the last &amp;ldquo;&lt;strong>Command&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="transmitcardrequestrespbody">TransmitCardRequestRespBody&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>TRANSMIT_CARD_REQUEST&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>result&lt;/code>&lt;/td>
&lt;td>&lt;a href="#cardresponse-1">CardResponse&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>Data received in response to the card request (absent in case of error).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>error&lt;/code>&lt;/td>
&lt;td>&lt;a href="#card-commands-resp-error">Error&lt;/a> &lt;strong>(optional)&lt;/strong>&lt;br>The error description (absent in case of success).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="cardresponse-1">CardResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>isLogicalChannelOpen&lt;/code>&lt;/td>
&lt;td>&lt;strong>Boolean&lt;/strong>&lt;br>Set to &lt;strong>true&lt;/strong> if the logical channel is left open, &lt;strong>false&lt;/strong> otherwise.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>apduResponses&lt;/code>&lt;/td>
&lt;td>&lt;a href="#apduresponse-1">ApduResponse&lt;/a> &lt;strong>[ ]&lt;/strong>&lt;br>A list containing the APDU responses for each request in the command.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="apduresponse-1">ApduResponse&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apdu&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>An hexadecimal string containing the APDU received from the card (including the status word).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>statusWord&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A 2-byte hexadecimal string containing the status word of the received APDU.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="card-commands-resp-error">Error&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Can have one of the following values:&lt;br>- &amp;ldquo;&lt;strong>READER_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the reader communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMUNICATION_ERROR&lt;/strong>&amp;rdquo;: if the issue is related to the card communication link,&lt;br/>- &amp;ldquo;&lt;strong>CARD_COMMAND_ERROR&lt;/strong>&amp;rdquo;: if the card returned an unexpected status word.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The error description.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-8">Example&lt;/h5>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RESP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;service\&amp;#34;:\&amp;#34;TRANSMIT_CARD_REQUEST\&amp;#34;,\&amp;#34;result\&amp;#34;:{\&amp;#34;apduResponses\&amp;#34;:[{\&amp;#34;apdu\&amp;#34;:\&amp;#34;00112233445566778899AABBCCDDEEFF00112233445566778899AABBCC9000\&amp;#34;,\&amp;#34;statusWord\&amp;#34;:\&amp;#34;9000\&amp;#34;}],\&amp;#34;isLogicalChannelOpen\&amp;#34;:true}}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;localReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READER_1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="end-remote-service">End Remote Service&lt;/h2>
&lt;p>The purpose of this message, received from the server, is to inform the terminal that the transaction has been
completed and, if necessary, to transmit the result. No follow-up is expected from the server.&lt;/p>
&lt;p>The following UML class diagram illustrates the format of this object and may help to implement it in the development
language of the target terminal.&lt;/p>
&lt;figure id="figure-end-remote-service-class-diagram">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/learn/user-guide/non-keyple-client/server-json-api-1-0/serverJsonApi_classDiagram_endRemoteService.svg" alt="&amp;#34;End Remote Service&amp;#34; class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
&amp;ldquo;End Remote Service&amp;rdquo; class diagram
&lt;/figcaption>&lt;/figure>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>MessageDto&lt;/code> is contained in a single-element array!
&lt;/div>
&lt;/div>
&lt;h4 id="messagedto-end-remote-service">MessageDto&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>action&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>Constant value: &amp;ldquo;&lt;strong>END_REMOTE_SERVICE&lt;/strong>&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>body&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>A JSON string containing a &lt;a href="#endremoteservicebody">EndRemoteServiceBody&lt;/a> JSON object.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sessionId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The current transaction identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The terminal identifier as provided by the initial &amp;ldquo;&lt;strong>Execute Remote Service&lt;/strong>&amp;rdquo; message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>localReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String (n/a)&lt;/strong>&lt;br>Null or absent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>serverNodeId&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The server identifier.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>remoteReaderName&lt;/code>&lt;/td>
&lt;td>&lt;strong>String&lt;/strong>&lt;br>The identifier of the virtual remote reader linked to the local reader.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="endremoteservicebody">EndRemoteServiceBody&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>outputData&lt;/code>&lt;/td>
&lt;td>&lt;strong>Object (optional)&lt;/strong>&lt;br>An optional object containing additional data provided by the remote business service. Its content is a convention between the client and the server.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="example-9">Example&lt;/h4>
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;END_REMOTE_SERVICE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;outputData\&amp;#34;:{\&amp;#34;isSuccessful\&amp;#34;:true,\&amp;#34;userId\&amp;#34;:\&amp;#34;test\&amp;#34;}}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sessionId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b1b8ed38-bae6-4b2e-a747-67d233652ea9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ca21fd3c-a055-4be5-aad1-c61af3528371&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;serverNodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4132f1ef-4386-49b0-acb6-cc16035c107a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;remoteReaderName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a65f4920-7e96-4082-986a-b58d85978c07&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Global Solution</title><link>https://keyple.org/archives/docs-1.0/architecture/keyple-global/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/architecture/keyple-global/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The Keyple solution provides currently 2 modules:&lt;/p>
&lt;ul>
&lt;li>the &lt;strong>Keyple Core&lt;/strong>, a universal smart card reader interface to manage the setting of smart card reader, the detection and the communication with smart card, and the selection of card application.&lt;/li>
&lt;li>the &lt;strong>Keyple Calypso&lt;/strong>, a first smart card solution extension built on the Keyple Core, dedicated to manage Calypso processing, Calypso card identification, card command generation, card data recovery, authentication with the secure session.&lt;/li>
&lt;/ul>
&lt;figure id="figure-keyple-architecture-global">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/Keyple_Architecture_Global.svg" alt="Keyple Architecture Global" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Keyple Architecture Global
&lt;/figcaption>&lt;/figure>
&lt;p>The Keyple Core provides 3 interfaces:&lt;/p>
&lt;ul>
&lt;li>the &lt;strong>Service API&lt;/strong>, to allow terminal application to handle reader &amp;amp; select card&lt;/li>
&lt;li>the &lt;strong>Card API&lt;/strong>, for APDU command transmission, card data parsing&lt;/li>
&lt;li>the &lt;strong>Plugin API&lt;/strong>, to integrate specific smart card reader solutions.&lt;/li>
&lt;/ul>
&lt;p>The Keyple Calypso extension provides the Calypso API: a high-level interface to manage Calypso card processing.&lt;/p>
&lt;br>
&lt;h2 id="application-integration">Application integration&lt;/h2>
&lt;p>The Card API is a low-level interface to manage the transmission of APDU commands with a smart card.
A terminal application operating processing with a specific smart card solution could be implemented directly on top the Card API.&lt;/p>
&lt;figure id="figure-keyple-architecture-application-integration">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/Keyple_Architecture_Application_Integration.svg" alt="Keyple Architecture Application Integration" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Keyple Architecture Application Integration
&lt;/figcaption>&lt;/figure>
&lt;p>Another way offering a better abstraction on smart card technical settings could be to implement on the Card API a smart card solution library extension providing a high-level interface: a specific Solution API.
This is how the Keyple Calypso extension has be defined, the Calypso API is a high-level functional interface, which hides the low-level APDU operations.&lt;/p>
&lt;br>
&lt;h2 id="reader-integration">Reader integration&lt;/h2>
&lt;h3 id="native-integration">native integration&lt;/h3>
&lt;p>The smart card readers could be directly integrated with the Keyple Core. By interfacing through the Plugin API, a specific plugin dedicated to a smart card reader solution, the Keyple Core could have the capability to fully manage the smart card readers corresponding to this native plugin.&lt;/p>
&lt;figure id="figure-keyple-architecture-reader-integration-native">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/Keyple_Architecture_Reader_Integration_native.svg" alt="Keyple Architecture Reader Integration Native" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Keyple Architecture Reader Integration Native
&lt;/figcaption>&lt;/figure>
&lt;p>The Eclipse Keyple® project provides the plugin for the main standard smart card reader solutions.&lt;/p>
&lt;figure id="figure-keyple-architecture-native-plugins">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/Keyple_Architecture_Native_Plugins.svg" alt="Keyple Architecture Native Plugins" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Keyple Architecture Native Plugins
&lt;/figcaption>&lt;/figure>
&lt;ul>
&lt;li>The PC/SC plugin is available for both the Java and the C++ implementation of Keyple, it allows to interface PC/SC reader on Windows, Linux and Mac OS.&lt;/li>
&lt;li>For Android devices the NFC plugin allows to operate the standard NFC interface to handle external contactless smart card. And the OMAPI plugin provides the integration of internal eSE (embedded Secure Element) or UICC (SIM card). Both plugins support Keyple Java.&lt;/li>
&lt;li>The Remote plugin (part of the Core distributed extension) allows to operate remote smart card readers.&lt;/li>
&lt;/ul>
&lt;h3 id="hybrid-integration">hybrid integration&lt;/h3>
&lt;p>It&amp;rsquo;s also possible to integrate Keyple in a terminal solution already embedding not Keyple based terminal applications operating smart card solutions. In those kinds of terminal, a Reader Manager has already the direct control on a smart card reader and manage the smart card detection: depending on the type of smart card identified on the reader, a specific terminal application is requested to operated the processing of the smart card.&lt;/p>
&lt;figure id="figure-keyple-architecture-hybrid-plugins">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/Keyple_Architecture_Reader_Integration_hybrid.svg" alt="Keyple Architecture Hybrid Plugins" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Keyple Architecture Hybrid Plugins
&lt;/figcaption>&lt;/figure>
&lt;p>In this case a reader manager plugin, also based on the Plugin API, could allow the Keyple Core to operate the processing of a specific smart card, when requested by the Reader Manager.&lt;/p>
&lt;p>For example, an EMV certified reader manager could call a Keyple application in case of PPSE selection failure.&lt;/p>
&lt;br>
&lt;h2 id="smart-card-processing">Smart card processing&lt;/h2>
&lt;h3 id="stand-alone">stand-alone&lt;/h3>
&lt;p>By default, a terminal application manages the processing of a specific smart card in stand-alone with its local readers.&lt;/p>
&lt;figure id="figure-keyple-architecture-local-plugin">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/Keyple_Architecture_Local_Plugin.svg" alt="Keyple Architecture Local Plugin" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Keyple Architecture Local Plugin
&lt;/figcaption>&lt;/figure>
&lt;h3 id="distributed">distributed&lt;/h3>
&lt;p>The &lt;strong>Distributed&lt;/strong> extension of the Keyple Core provides a solution allowing a master terminal application to manage the processing of a smart card localized in a remote driven terminal.
&lt;figure id="figure-keyple-architecture-remote-plugin">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/Keyple_Architecture_Remote_Plugin.svg" alt="Keyple Architecture Remote Plugin" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Keyple Architecture Remote Plugin
&lt;/figcaption>&lt;/figure>
&lt;/p>
&lt;br>
&lt;h2 id="smart-card-transaction">Smart card transaction&lt;/h2>
&lt;p>There are two ways for a terminal application to manage a transaction with a smart card.&lt;/p>
&lt;ul>
&lt;li>Either the smart card processing could be directly started by the terminal application.&lt;/li>
&lt;li>Otherwise, the smart card processing could be launched when a smart card is inserted in a reader of the terminal.&lt;/li>
&lt;/ul>
&lt;h3 id="explicit-selection">explicit selection&lt;/h3>
&lt;p>For a classic transaction,&lt;/p>
&lt;ul>
&lt;li>the presence of a card is firtsly checked on a reader,&lt;/li>
&lt;li>then the car is selected and identified,&lt;/li>
&lt;li>finally, a transaction is processed with the card application.&lt;/li>
&lt;/ul>
&lt;figure id="figure-keyple-transaction-explicit-selection">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/Keyple_CardTransaction_ActivityDiag_ExplicitSelection.svg" alt="[Keyple Transaction Explicit Selection" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
[Keyple Transaction Explicit Selection
&lt;/figcaption>&lt;/figure>
&lt;h3 id="default-selection">default selection&lt;/h3>
&lt;ul>
&lt;li>For automatons (e.g. a ticketing validator), the ticketing transaction is often driven by the insertion of a card.&lt;/li>
&lt;li>Keyple Core allows to define a default selection on Observable Reader, and in return to be notified of successful selections.&lt;/li>
&lt;/ul>
&lt;figure id="figure-keyple-transaction-default-selection">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/Keyple_CardTransaction_ActivityDiag_DefaultSelection.svg" alt="[Keyple Transaction Default Selection" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
[Keyple Transaction Default Selection
&lt;/figcaption>&lt;/figure></description></item><item><title>Keyple Core</title><link>https://keyple.org/archives/docs-1.0/architecture/keyple-core/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/architecture/keyple-core/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;h2 id="features--packages-and-corresponding-usages">Features / packages and corresponding usages&lt;/h2>
&lt;p>The Keyple Core is a tool to handle smart card reader and to operate generic processing with smart cards.&lt;/p>
&lt;p>The Core is divided in 3 sub-modules:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Service API&lt;/strong> : provides the interfaces to access to the smart card readers and to select a smart card.&lt;/li>
&lt;li>&lt;strong>Card API&lt;/strong> : for the transmission of APDU commands with a smart card.&lt;/li>
&lt;li>&lt;strong>Plugin API&lt;/strong> : includes the factorized processing for the implementation of plugin.&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Module&lt;/th>
&lt;th>Package&lt;/th>
&lt;th>Feature&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td rowspan="4" width="13%">Service&lt;/td>
&lt;td width="38%">org.eclipse.keyple.core.&lt;b>service&lt;/b>&lt;/td>
&lt;td>Management of the smart card readers&lt;br/>
&lt;ul>&lt;li>Registration of plugins to the smart card Service&lt;br/>&lt;/li>
&lt;li>Access to the readers through plugins&lt;/li>&lt;/ul>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>org.eclipse.keyple.core.service.&lt;b>event&lt;/b>&lt;/td>
&lt;td>Notifications of reader plug/unplug, of smart card insertion/removed&lt;br/>
&lt;ul>&lt;li>Define observers of plugins or readers&lt;br/>&lt;/li>
&lt;li>Interface to be implemented by observers to be notified on plugin event or reader event&lt;br/>&lt;/li>
&lt;li>For observable reader, setting of default selections, to automatically operate in case of smart card insertion&lt;/li>&lt;/ul>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>org.eclipse.keyple.core.service.&lt;b>util&lt;/b>&lt;/td>
&lt;td>Communication protocols setting for contactless/contacts Reader&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>org.eclipse.keyple.card.&lt;b>selection&lt;/b>&lt;/td>
&lt;td>Generic selection of a smart card&lt;br/>
&lt;ul>&lt;li>preparation of smart card selection requests&lt;br>&lt;/li>
&lt;li>matching selection results as smart card images&lt;/li>&lt;/ul>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td rowspan="2">Smart card&lt;/td>
&lt;td>org.eclipse.keyple.card.&lt;b>message&lt;/b>&lt;/td>
&lt;td>Transmission of grouped APDU commands to a Reader&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>org.eclipse.keyple.core.card.&lt;b>command&lt;/b>&lt;/td>
&lt;td>Generic API to develop a smart card specific library&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Plugin&lt;/td>
&lt;td>org.eclipse.keyple.core.&lt;b>plugin&lt;/b>&lt;br/>
&lt;td>Reader plugins implementation&lt;br/>
&lt;ul>&lt;li>Utility classes providing generic processing for Readers &lt;/li>&lt;/ul>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>According to the developer’s objective different packages must be imported:&lt;/p>
&lt;ul>
&lt;li>for the implementation of a smart card terminal application: the packages &lt;strong>service&lt;/strong>, &lt;strong>event&lt;/strong> and &lt;strong>selection&lt;/strong>.&lt;/li>
&lt;li>to develop a dedicated library supporting the command sets and transaction features of a specific smart card solution: the packages &lt;strong>message&lt;/strong>, &lt;strong>command&lt;/strong>, and &lt;strong>selection&lt;/strong>.&lt;/li>
&lt;li>to implement a plugin: the packages &lt;strong>plugin&lt;/strong>, &lt;strong>service&lt;/strong>, &lt;strong>event&lt;/strong>, and &lt;strong>message&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;figure id="figure-core-packages">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCore_Packages.svg" alt="Core packages" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Core packages
&lt;/figcaption>&lt;/figure>
&lt;br>
&lt;h2 id="service-interface---reader-access">Service Interface - Reader Access&lt;/h2>
&lt;p>for the development of ticketing terminal application&lt;/p>
&lt;h3 id="types-of-plugin--reader">Types of plugin &amp;amp; reader&lt;/h3>
&lt;p>On Keyple, the smart card readers are managed through plugins in order to integrate specific reader solutions.
The &lt;strong>SmartCard Service&lt;/strong> singleton provides the unique name list of registered plugins. There can be three kinds of plugin:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Plugin&lt;/strong> is the generic interface to list the readers of a plugin, or to access to a specific reader with its name.&lt;/li>
&lt;li>The &lt;strong>Observable Plugin&lt;/strong> interface extends Plugins which have the capability to be observed: in order to notify registered Plugin Observers about the plug or unplug of readers. Plugin Observers could be added or removed to the Observable Plugin. Useful for systems allowing the hot plug / unplug of Readers.&lt;/li>
&lt;li>A &lt;strong>Pool Plugin&lt;/strong> is a plugin for which a Reader is available only after an explicit allocation. When not more necessary, a Reader must be released. Useful for server solutions managing farms of Readers or interfaced with HSM: unallocated Readers or HSM instances could be shared between several smartcard terminal solutions.&lt;/li>
&lt;/ul>
&lt;p>A smartcard Reader is identified through its unique name in a Plugin. There are two kinds of Reader:&lt;/p>
&lt;ul>
&lt;li>The &lt;strong>Reader&lt;/strong> is the generic interface to handle a smartcard reader. The presence of card in a Reader could be checked.&lt;/li>
&lt;li>The &lt;strong>Observable Reader&lt;/strong> interface extends Readers which have the capability to notify registered Reader Observers about the insertion or remove of a Card in the Reader. Reader Observers could be added or removed to the Observable Reader. Useful for systems automatically starting the processing of a Card at its insertion: like a ticketing validator.
&lt;figure id="figure-reader-access-v100">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCore_Reader_ClassDiag_PluginSettingAndReaderAccess_1_0_0.svg" alt="[Reader Access v1.0.0" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
[Reader Access v1.0.0
&lt;/figcaption>&lt;/figure>
&lt;/li>
&lt;/ul>
&lt;p>(The APDU transmission with a Card is managed at a lower layer, through a Card Solution API.)&lt;/p>
&lt;h3 id="specific-plugin-integration">Specific Plugin integration&lt;/h3>
&lt;p>The Plugins are registered to the SmartCard Service through related specific Plugin Factory.
&lt;figure id="figure-specific-plugin-v100">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCore_Reader_ClassDiag_SpecificPluginFactoryAndProtocol_1_0_0.svg" alt="Specific Plugin v1.0.0" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Specific Plugin v1.0.0
&lt;/figcaption>&lt;/figure>
&lt;/p>
&lt;h3 id="reader-notifications">Reader Notifications&lt;/h3>
&lt;p>To be notified about &lt;strong>Plugin Event&lt;/strong> or &lt;strong>Reader Event&lt;/strong>, a terminal application must implement the dedicated &lt;strong>Plugin Observer&lt;/strong> or &lt;strong>Reader Observer&lt;/strong> interfaces.&lt;/p>
&lt;figure id="figure-reader-notifications-v100">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCore_Reader_ClassDiag_ObservablePluginAndReaderEvents_1_0_0.svg" alt="Reader Notifications v1.0.0" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Reader Notifications v1.0.0
&lt;/figcaption>&lt;/figure>
&lt;h3 id="plugin-event">Plugin Event&lt;/h3>
&lt;p>Several &lt;strong>Plugin Observers&lt;/strong> could be registered to an Observable Plugin.
In case of reader connection / disconnection, the Observable Plugin notifies sequentially the registered Plugin Observers with the corresponding Plugin Event.
The Observable Plugin is a blocking API, the thread managing the issuance of the Plugin Event waits the acknowledge of the Plugin Observer currently notified.&lt;/p>
&lt;h3 id="reader-event">Reader Event&lt;/h3>
&lt;p>Several &lt;strong>Reader Observers&lt;/strong> could be registered to an Observable Reader.
In case of Card insertion / removal or selection match, the Observable Reader notifies sequentially the registered Reader Observers with the corresponding Reader Event. The Observable Reader could be a blocking API, the thread managing the issuance of the Plugin Event could wait the acknowledge of the notified Reader Observers.&lt;/p>
&lt;p>An Observable Reader has the capability to be set with a &lt;strong>Default Selections Request&lt;/strong>: in this case when a Card is inserted in the Reader, the Reader will try to operate the configured default selections. If a selection successfully matches with the Card, instead to simply notify about the insertion of a Card, the Observable Reader will notify about a successful selection with a Card application.&lt;/p>
&lt;ul>
&lt;li>If the notification mode is defined as &lt;strong>always&lt;/strong>, then in case of Card insertion, the Observable Reader will notify a matched card Reader Event in case of successful selection, or a simple card insertion Reader Event if not.&lt;/li>
&lt;li>If the notification mode is defined as &lt;strong>matched only&lt;/strong>, then in case of Card insertion, simple card insertion Reader Events are not notified.&lt;/li>
&lt;/ul>
&lt;p>When the processing of an inserted or matched Card is finished, a Reader Observer must release the logical channel with the Card, in order to prepare the Observable Reader to detect the removal of the Card.&lt;/p>
&lt;h3 id="observable-reader-states">Observable Reader states&lt;/h3>
&lt;p>An Observable Reader is active only when at least one Reader Observer is registered, and if the start of the detection has been requested.
When active, an Observable Reader could switch between three internal states: &lt;strong>Wait for Card Insertion&lt;/strong>, &lt;strong>Wait for Card Processing&lt;/strong>, &amp;amp; &lt;strong>Wait for Card Removal&lt;/strong>.&lt;/p>
&lt;p>In the nominal case, a Reader Observer indicates to the Observable Reader that the processing of the SE is finished by releasing the Card Channel.
To manage a failure of the Reader Observer process, the Observable Reader interface provides also a method to finalize the Card processing.&lt;/p>
&lt;figure id="figure-observable-reader-states">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCore_Reader_StateDiag_ObservableReaderStates_1_0_0.svg" alt="Observable Reader States" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Observable Reader States
&lt;/figcaption>&lt;/figure>
&lt;p>The states could be switched:&lt;/p>
&lt;ul>
&lt;li>due to an explicit API request (blue arrows):
&lt;ul>
&lt;li>the release of the Card Channel,&lt;/li>
&lt;li>the call of an Observable Reader method:
&lt;ul>
&lt;li>the addition or the remove of an Observable Reader,&lt;/li>
&lt;li>a request to start or stop the detection, to finalize the Card processing.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Or because of an external event (red arrows), the insertion or the remove of a Card.
&lt;ul>
&lt;li>the insertion a Card causing the Observable Reader to notify a &lt;strong>Card matched&lt;/strong> Reader Event (in case of successful default selection) or a &lt;strong>Card inserted&lt;/strong> Reader Event (Notification Mode defined as always).&lt;/li>
&lt;li>the removal of a Card causing the Observable Reader to notify a &lt;strong>Card removed&lt;/strong> Reader Event.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>If a Card detection is started with the &lt;strong>repeating&lt;/strong> polling mode, then later when the Card is removed, the Reader starts again the detection of a new Card.&lt;/p>
&lt;p>Whatever the Plugin of Observable Reader, when waiting for the Card removal, any Observable Reader shall have the capability to notify the remove of the Card.
Some Plugin solutions could have the capability to notify a Card removal also during the processing of the Card.&lt;/p>
&lt;br>
&lt;h2 id="service-interface---card-selection">Service Interface - Card Selection&lt;/h2>
&lt;p>for the development of ticketing terminal application&lt;/p>
&lt;h3 id="selection-scenarios">Selection scenarios&lt;/h3>
&lt;p>Depending on the Card transaction use case, or on the Reader capability, there are two ways to manage the Selection of a Card:&lt;/p>
&lt;ul>
&lt;li>Either on a simple Reader, a Selection could be operated directly by transmitting the Selection Request. In this case the same entity manages both the Card Selection and the Card processing.&lt;/li>
&lt;li>Otherwise, on an Observable Reader, a Default Selection could be defined. In this case the Selection is operated automatically at the insertion of the Card. In this case, the Card Selection is next managed by the Observable Reader, but the Card processing is managed by a Reader Observer.&lt;/li>
&lt;/ul>
&lt;figure id="figure-selection-v100">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCore_CardSelection_ActivityDiag_Scenarii.svg" alt="Selection v1.0.0" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Selection v1.0.0
&lt;/figcaption>&lt;/figure>
&lt;h3 id="selection-setting-and-processing">Selection setting and processing&lt;/h3>
&lt;p>A Card Selection request is defined with a Card Selector. A Card Selector could be defined with tree optional levels of selection filter.&lt;/p>
&lt;ul>
&lt;li>The selection could be limited to match a specific card communication protocol.&lt;/li>
&lt;li>The Card ATR could be filtered to match a regular expression.&lt;/li>
&lt;li>If an AID is defined, the local reader transmits a Select Application APDU command to the card.
If a SE Selector is defined without any filter, the selection is always successful if a card is present in the reader.&lt;/li>
&lt;/ul>
&lt;p>Depending on the Keyple Card Solution extension library, a card request could be completed with specific card commands to operate at the selection (for example, a Select File for a specific DF LID, the read of a specific file).&lt;/p>
&lt;p>For terminal managing several kinds of card applications, a Card Selection could be prepared with several card selection request to operate sequentially with the card.&lt;/p>
&lt;p>According to the defined &lt;strong>multi selection processing&lt;/strong> mode, the card selection could stop at the first selection request matching card application, otherwise all the prepared card selection request could be operated.&lt;/p>
&lt;ul>
&lt;li>Before the new processing of card selection request, the logical channel previously opened is closed.&lt;/li>
&lt;li>The &lt;strong>channel control&lt;/strong> defines if the logical channel should be kept open or close after the last processed card selection request.&lt;/li>
&lt;/ul>
&lt;figure id="figure-card-selection-v100">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCore_CardSelection_ClassDiag_SelectorAndSelection_1_0_0.svg" alt="Card Selection v1.0.0" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Card Selection v1.0.0
&lt;/figcaption>&lt;/figure>
&lt;p>The result of a card request selection is a card image of a matching card. For a card selection with multiple requests, several matching card could be provided.&lt;/p>
&lt;br>
&lt;h2 id="card-interface">Card Interface&lt;/h2>
&lt;p>for the development of smartcard solution library&lt;/p>
&lt;p>The Keyple Calypso extension uses the card interface to exchange APDU commands with Calypso cards and SAM.&lt;/p>
&lt;h3 id="apdu-transmission">APDU Transmission&lt;/h3>
&lt;figure id="figure-apdu-transmission-v100">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCore_Card_ClassDiag_CardMessage_1_0_0.svg" alt="APDU Transmission v1.0.0" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
APDU Transmission v1.0.0
&lt;/figcaption>&lt;/figure>
&lt;br>
&lt;h2 id="plugin-api">Plugin API&lt;/h2>
&lt;p>for the implementation of smartcard reader plugins&lt;/p>
&lt;h3 id="plugin-factorized-processing">Plugin Factorized Processing&lt;/h3>
&lt;p>The implementation of Plugins requires to extend the classes AbstractPlugin and AbstractLocalReader.&lt;/p>
&lt;ul>
&lt;li>If the reader solution allows the hot plug/unplug of readers then AbstractThreadedObservablePlugin should be extended.&lt;/li>
&lt;li>In case the local reader has the capability to detect the insertion or the removal or a card, then AbstractObservableLocalReader should be extended.&lt;/li>
&lt;/ul>
&lt;p>For reader solutions managing themselves the allocation of logical channel for communicatio with smart cards, the interface SmartSelectionReader should be implemented (e.g. it is the case for the OMAPI plugin).&lt;/p>
&lt;p>Only the abstract methods highlighted &lt;strong>in blue&lt;/strong> have to be implemented have to be implemented by the specific plugins.&lt;/p>
&lt;p>For plugins with ObservableReader: depending on the capability of the reader solution different interfaces could be implemented:&lt;/p>
&lt;ul>
&lt;li>WaitForCardInsertionAutonomous&lt;/li>
&lt;li>WaitForCardRemovalAutonomous&lt;/li>
&lt;li>WaitForCardRemovalDuringProcessing or DontWaitForCardRemovalDuringProcessing&lt;/li>
&lt;li>WaitForCardInsertionBlocking or WaitForCardInsertionNonBlocking&lt;/li>
&lt;li>WaitForCardRemovalBlocking or WaitForCardRemovalNonBlocking&lt;/li>
&lt;li>AbstractObservableLocalAutonomousReader&lt;/li>
&lt;/ul>
&lt;figure id="figure-plugin-factorized-processing-v100">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCore_Plugin_ClassDiag_PluginImplementaion_1_0_0.svg" alt="Plugin Factorized Processing v1.0.0" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Plugin Factorized Processing v1.0.0
&lt;/figcaption>&lt;/figure></description></item><item><title>Keyple Calypso</title><link>https://keyple.org/archives/docs-1.0/architecture/keyple-calypso/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/architecture/keyple-calypso/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;h2 id="features--packages-and-corresponding-usages">Features / packages and corresponding usages&lt;/h2>
&lt;p>The Calypso transaction API provides a high-level of abstraction to define functional commands to manage a secure session with a Calypso Portable Object, to update or authenticate its data.&lt;/p>
&lt;p>The transaction API is defined on a low-level Calypso commands API which contains the builders of PO and SAM APDU commands, and the corresponding parsers of APDU responses. This internal library is deprecated, and will be refactorized for the version 2.0.0 of Keyple Calypso.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Package&lt;/th>
&lt;th>API&lt;br/>level&lt;/th>
&lt;th>Feature&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td width="50%">org.eclipse.keyple.calypso.&lt;b>transaction&lt;/b>&lt;/td>
&lt;td width="8%">high&lt;/td>
&lt;td>Calypso Portable Object commands and secure transaction management&lt;br/>
&lt;ul>&lt;li>CalypsoAPI, command’s settings are limited to functional parameters&lt;br/>&lt;/li>
&lt;li>Calypso SAM (Secure Module) operations automatically processed&lt;br/>&lt;/li>&lt;/ul>
(only functional parameters)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>org.eclipse.keyple.calypso.&lt;b>command&lt;/b>&lt;br/>
org.eclipse.keyple.calypso.&lt;b>command&lt;/b>.po&lt;br/>
org.eclipse.keyple.calypso.&lt;b>command&lt;/b>.po.builder&lt;br/>
org.eclipse.keyple.calypso.&lt;b>command&lt;/b>.po.parser&lt;br/>
org.eclipse.keyple.calypso.&lt;b>command&lt;/b>.po.parser.session&lt;br/>
org.eclipse.keyple.calypso.&lt;b>command&lt;/b>.sam&lt;br/>
org.eclipse.keyple.calypso.&lt;b>command&lt;/b>.sam.builder&lt;br/>
org.eclipse.keyple.calypso.&lt;b>command&lt;/b>.sam.parser&lt;br/>
org.eclipse.keyple.calypso.&lt;b>command&lt;/b>.sam.parser.session&lt;/td>
&lt;td>low&lt;/td>
&lt;td>Calypso PO &amp;amp; SAM APDU commands' sets&lt;br/>
&lt;ul>&lt;li>APDU command builders&lt;br/>&lt;/li>
&lt;li>APDU response parsers&lt;br/>&lt;/li>&lt;/ul>
(technical parameter settings specific to the PO &amp;amp; SAM revisions)&lt;br>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Ticketing terminal applications must import only the high-level Calypso transaction package.&lt;/p>
&lt;figure id="figure-calypso-packages">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCalypso_Packages.svg" alt="Calypso packages" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Calypso packages
&lt;/figcaption>&lt;/figure>
&lt;!-- The only exception is the implementation a Calypso PO/SAM test tool, the setting of low-level APDU commands with wrong settings could require the usage of the Calypso command packages. -->
&lt;br>
&lt;h2 id="calypso-portable-object-selection">Calypso Portable Object Selection&lt;/h2>
&lt;p>Compared to the generic Card Selection API (cf. &lt;a href="https://keyple.org/learn/architecture/keyple-core/#card-selection%29" target="_blank" rel="noopener">https://keyple.org/learn/architecture/keyple-core/#card-selection)&lt;/a>, a PO Selector could be defined to accept only non-invalidated Portable Object (in this cas an invalidated PO isn&amp;rsquo;t selected).&lt;/p>
&lt;p>In addition, a PO Selection Request provides methods:&lt;/p>
&lt;ul>
&lt;li>to prepare Select File command (useful in particular to manage REV1 Calypso PO for which the select of the targeted DF is required).&lt;/li>
&lt;li>and to prepare simple read record command (useful to optimize the read of a file present on all targeted PO).&lt;/li>
&lt;/ul>
&lt;p>The matching SmartCard resulting from a PO Selection Request is a Calypso PO. In case file records have been read during the selection: the corresponding data could be recovered in the Calypso PO card image.&lt;/p>
&lt;figure id="figure-calypso-selection-v100">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCalypso_Transaction_ClassDiag_PO_Selection_1_0_0.svg" alt="Calypso Selection v1.0.0" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Calypso Selection v1.0.0
&lt;/figcaption>&lt;/figure>
&lt;br>
&lt;h2 id="calypso-portable-object-transaction">Calypso Portable Object Transaction&lt;/h2>
&lt;p>A Card Resource is a set of a Reader and a &lt;strong>selected&lt;/strong> Card application.&lt;/p>
&lt;ul>
&lt;li>A Calypso Portable Object is the image of a selected Calypso PO.&lt;/li>
&lt;li>A Calypso SAM is the image of a selected Calypso SAM.&lt;/li>
&lt;/ul>
&lt;p>To operate a Calypso transaction:&lt;/p>
&lt;ul>
&lt;li>At least a Calypso Resource (CardResource&amp;lt;CalypsoPo&amp;gt;) is required.&lt;/li>
&lt;li>A SAM Resource ((CardResource&amp;lt;CalypsoSam&amp;gt;) is required too if security features are involved (Calypso secure session, Stored value transaction, PIN encryption, etc…).&lt;/li>
&lt;/ul>
&lt;p>A Calypso PO image provides public &lt;strong>getters&lt;/strong> in order to &lt;strong>recover&lt;/strong> the information of the selected PO (startup data, file data, … etc).&lt;/p>
&lt;p>A transaction with a Calypso PO is fully managed through the PoTransaction object:&lt;/p>
&lt;ul>
&lt;li>First a set of PO commands could be defined through &lt;strong>prepare&lt;/strong> commands.&lt;/li>
&lt;li>Next the prepared PO commands transmitted when operating a &lt;strong>process&lt;/strong> command.&lt;/li>
&lt;li>The responses of the PO are then recovered through the Calypso PO image.&lt;/li>
&lt;/ul>
&lt;figure id="figure-calypso-api-global-architecture">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCalypso_Transaction_ClassDiag_Overview.svg" alt="Calypso API Global Architecture" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Calypso API Global Architecture
&lt;/figcaption>&lt;/figure>
&lt;h3 id="calypso-card-image">Calypso card image&lt;/h3>
&lt;p>When read commands have been exchanged with a Calypso PO, the corresponding data could be recovered by parsing the file structure of the PO card image.&lt;/p>
&lt;figure id="figure-calypso-po-card-image">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCalypso_Transaction_ClassDiag_CalypsoPo_1_0_0.svg" alt="Calypso PO card image" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Calypso PO card image
&lt;/figcaption>&lt;/figure>
&lt;h3 id="calypso-transaction">Calypso transaction&lt;/h3>
&lt;p>Only the &lt;strong>process&lt;/strong> methods generate communication with the Calypso PO and SAM.&lt;/p>
&lt;ul>
&lt;li>processPoCommands is used to transmit a set of prepared PO commands (outside or inside a secure session).&lt;/li>
&lt;li>processOpening issues an Open Secure Session followed by the prepared PO commands.&lt;/li>
&lt;li>processClosing issues the last prepared PO commands and transmits a Close Secure Session.&lt;/li>
&lt;/ul>
&lt;!---
- prepareManageSession allows to change authenticate or change the encryption mode.
-->
&lt;p>The prepareReleaseChannel method allows to the logical channel with the Calypso PO at the end of the processing of the next process method.&lt;/p>
&lt;figure id="figure-calypso-transaction">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCalypso_Transaction_ClassDiag_PoTransaction_1_0_0.svg" alt="Calypso transaction" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Calypso transaction
&lt;/figcaption>&lt;/figure>
&lt;br>
&lt;h2 id="data-model-extension">Data model extension&lt;/h2>
&lt;figure id="figure-calypso-data-model">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCalypso_Transaction_ClassDiag_SpecificPoTransaction_1_0_0.svg" alt="Calypso Data Model" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Calypso Data Model
&lt;/figcaption>&lt;/figure>
&lt;br>
&lt;h2 id="secure-session-sequence">Secure session sequence&lt;/h2>
&lt;figure id="figure-calypso-session">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/architecture/KeypleCalypso_Transaction_SequenceDiag_SecureSessionProcessing_1_0_0.svg" alt="Calypso session" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Calypso session
&lt;/figcaption>&lt;/figure></description></item><item><title>Build your first Java application</title><link>https://keyple.org/archives/docs-1.0/build-your-first-app/java-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/build-your-first-app/java-app/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;p>This quick start describes how to create a ready-to-execute Java
command-line application that runs a simple transaction based on
a Calypso portable object (PO) involving two smart card readers.&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
The demonstration application created for this quick start requires a
Calypso PO (contactless smart card, mobile phone with contactless
communication) and a Calypso Secure Access Module (SAM).
&lt;/div>
&lt;/div>
&lt;p>We will use three main components of Keyple:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/components-java-1.0/core/">Keyple Core&lt;/a>
which is the base component to which all the others refer,&lt;/li>
&lt;li>&lt;a href="https://keyple.org/archives/components-java-1.0/plugins/pcsc/">Keyple PC/SC plugin&lt;/a>
to provide the ability to manage PC/SC readers,&lt;/li>
&lt;li>&lt;a href="https://keyple.org/archives/components-java-1.0/extensions/calypso/">Keyple Calypso extension&lt;/a>
to handle the commands sent to the Calypso PO and the Calypso SAM.&lt;/li>
&lt;/ul>
&lt;p>In this guide &lt;a href="https://gradle.org/" target="_blank" rel="noopener">Gradle&lt;/a> is used as build automation
tool, but it is easy to transpose these explanations to another tool
such as Maven for example.&lt;/p>
&lt;p>The example can run on any machine: Linux, Windows and macOS. If not
installed in your machine, you will need to download :&lt;/p>
&lt;ul>
&lt;li>Java 1.6 or newer&lt;/li>
&lt;li>&lt;a href="https://gradle.org/install/" target="_blank" rel="noopener">Gradle (any version)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>We recommend that you use a Java IDE like
&lt;a href="https://www.eclipse.org/ide/" target="_blank" rel="noopener">Eclipse&lt;/a> or
&lt;a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">Intellij IDEA&lt;/a> to create your new
Gradle project.&lt;/p>
&lt;br>
&lt;h2 id="create-a-gradle-based-empty-project">Create a Gradle-based empty project&lt;/h2>
&lt;p>Create a new Java project and add the following statements to your
&lt;code>build.gradle&lt;/code> file to import the Keyple components into your
project:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">apply&lt;/span> &lt;span class="nl">plugin:&lt;/span> &lt;span class="s1">&amp;#39;java&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mavenCentral&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Keyple core is a mandatory library for using Keyple, in this case import the last version of keyple-java-core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-java-core:1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Import Calypso library to support Calypso Portable Object, in this case import the last version of keyple-java-calypso
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-java-calypso:1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Import PC/SC library to use a Pcsc reader, in this case import the last version of keyple-java-plugin-pcsc
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-java-plugin-pcsc:1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Import logger lib
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.slf4j:slf4j-api:1.7.25&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">implementation&lt;/span> &lt;span class="s2">&amp;#34;org.slf4j:slf4j-simple:1.7.25&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If necessary, also create the usual tree in which the Java code of this
guide will be placed, namely the folders: &lt;code>\src\main\java&lt;/code>&lt;/p>
&lt;br>
&lt;h2 id="lets-code">Let&amp;rsquo;s code&lt;/h2>
&lt;p>Now let&amp;rsquo;s see step by step how to create in one single class the
elements that allow a certified reading of data through a Calypso secure
session.&lt;/p>
&lt;p>In a real ticketing application, the organization of the code would
probably be different, but the point here is to show how Keyple makes it
possible to perform very simply operations that normally require a
quantity of code and knowledge that far exceeds what is implemented
here.&lt;/p>
&lt;p>You can either progressively copy each of the small portions of code
that follow or copy the whole class at the bottom of this page.&lt;/p>
&lt;h3 id="create-the-class-skeleton">Create the class skeleton&lt;/h3>
&lt;p>Copy the source code below in a new Java Class named
DemoPoAuthentication.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.calypso.command.sam.SamRevision&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.calypso.transaction.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.card.selection.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.util.ByteArrayUtil&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.plugin.pcsc.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DemoPoAuthentication&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// ...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configure-the-pcsc-plugin-and-the-readers">Configure the PC/SC plugin and the readers&lt;/h3>
&lt;p>The first step to use Keyple is to initialize the plugin and smart card readers.&lt;/p>
&lt;p>In this snippet the PC/SC plugin is registered to the SmartCardService.&lt;/p>
&lt;p>Two readers needs to be connected to the local machine. Replace
&amp;ldquo;PO_READER_NAME&amp;rdquo; and &amp;ldquo;SAM_READER_NAME&amp;rdquo; with the name of the USB readers.&lt;/p>
&lt;p>If you don&amp;rsquo;t know the names of the readers, read how to find them in the &lt;a href="#faq">FAQ&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Get the instance of the SmartCardService : main service of Keyple middleware&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Register the PcscPlugin within the SmartCardService to use PC/SC readers&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PcscPluginFactory&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Get the PO reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;PO_READER_NAME&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Configure the PO reader parameters&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setContactless&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Get the SAM reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SAM_READER_NAME&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// ...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="select-the-calypso-sam">Select the Calypso SAM&lt;/h3>
&lt;p>Before executing a transaction each smart card should be selected. The
next step is the selection of the Calypso SAM resulting in a
CalypsoSam object.&lt;/p>
&lt;p>It is then combined with the SAM reader to form the SAM resource needed
later within the transaction service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Prepare a SamSelector that identifies the Calypso SAM&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">SamSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SamSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">samRevision&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SamRevision&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AUTO&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Perform the SAM selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardSelectionService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionService&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">samSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SamSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samSelector&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isCardPresent&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;No SAM is present in the reader &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardSelectionsResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processExplicitSelections&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">hasActiveSelection&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SAM matching failed!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoSam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Associate the calypsoSam and the samReader to create a samResource&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoSam&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">//...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="select-the-calypso-po">Select the Calypso PO&lt;/h3>
&lt;p>1st PO exchange:&lt;/p>
&lt;p>The Calypso PO selection is made using the portable object application&amp;rsquo;s AID
and results in a CalypsoPo object that will contain all the information extracted
from the Calypso PO all along the transaction.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Prepare a Calypso PO selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;315449432E49434131&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cm">/* AID: Keyple test kit profile 1, Application 2 */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardSelectionService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionService&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Setting up a selection based on the AID of a Calypso Revision 3.1 PO&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">//&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Select the first application matching the selection AID whatever the card communication protocol&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">PoSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// the application identifier&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invalidatedPo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PoSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">InvalidatedPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">REJECT&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// to indicate if an invalidated PO should be accepted or not&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Add the selection case to the current selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// (we could have added other cases)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardSelectionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poSelection&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isCardPresent&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The selection of the PO has failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Perform the PO selection and get a CalypsoPo container in return&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processExplicitSelections&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">//...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="open-the-calypso-secure-session">Open the Calypso secure session&lt;/h3>
&lt;p>2nd PO exchange :&lt;/p>
&lt;p>The secure session opening operated by the PoTransaction service is
combined with the reading of the environment file (SFI=07h).&lt;/p>
&lt;p>The mutual authentication process between Calypso PO and Calypso SAM is initiated transparently.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Prepare the security settings used during the Calypso transaction&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PoSecuritySettingsBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Create a PoTransaction service to manage the Calypso transaction&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SFI_Environment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0x07&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Schedule the reading of the Environment file after the secure session is opened&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// (we could have added other commands)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SFI_Environment&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// the sfi to select&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Perform the session opening with the debit key&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processOpening&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SessionSetting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SESSION_LVL_DEBIT&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Get and display the Environment data from the card image CalypsoPo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">efEnvironment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_Environment&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">environmentLog&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">efEnvironment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getData&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getContent&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Environment file content: &amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">environmentLog&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">//...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="close-the-calypso-secure-session">Close the Calypso secure session&lt;/h3>
&lt;p>3rd PO exchange:&lt;/p>
&lt;p>Simply close the Calypso secure session&lt;/p>
&lt;p>The mutual authentication is finalized, it includes the authentication
of the data in the read file.&lt;/p>
&lt;p>Note: any technical, crytographic or content-related incident in the Calypso PO
would be signalled by an exception and would interrupt the thread of
execution.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Schedule the closure of the channel with the PO after the closing of the secure session&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareReleasePoChannel&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Perform the closing of the Calypso Secure Session&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processClosing&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The data read in session have been certified by the successful closing.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">//... &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="unregister-the-plugin">Unregister the plugin&lt;/h3>
&lt;p>Finally unregister the plugin before shutting down the application&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Shutdown the application&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unregisterPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Find the complete code source &lt;a href="#full-code">below&lt;/a>.&lt;/p>
&lt;br>
&lt;h2 id="run">Run&lt;/h2>
&lt;ol>
&lt;li>Connect two USB PC/SC Readers.&lt;/li>
&lt;li>Insert the Calypso SAM in the SAM reader.&lt;/li>
&lt;li>Insert the Calypso PO in the PO reader.&lt;/li>
&lt;li>Run the application.&lt;/li>
&lt;/ol>
&lt;div class="alert alert-note">
&lt;div>
All project dependencies, including Keyple
components, are downloaded during the first run, which can take some
time.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;p>&lt;strong>How do I find out the names of the readers?&lt;/strong>&lt;/p>
&lt;p>To find out the names of the readers connected to your computer, we will
use Keyple with the following class which prints in the console the
number and names of the readers present:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.Plugin&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.SmartCardService&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.plugin.pcsc.PcscPluginFactory&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.util.Set&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ReaderDiscovery&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PcscPluginFactory&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Set&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">names&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderNames&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">names&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; readers found.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">names&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sc">&amp;#39;&amp;#34;&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sc">&amp;#39;&amp;#34;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The console output should look something like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">2 readers found.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;ASK LoGO 0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;Identive CLOUD 2700 R Smart Card Reader 0&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Identify which reader will be the PO (contactless) reader and the SAM
(contact) reader and replace &lt;code>PO_READER_NAME&lt;/code> and
&lt;code>SAM_READER_NAME&lt;/code> with their values.&lt;/p>
&lt;p>&lt;strong>How to activate the Keyple&amp;rsquo;s logs?&lt;/strong>&lt;/p>
&lt;p>As soon as the &lt;code>slf4j&lt;/code> library is imported into the project, Keyple
modules are able to produce logs.&lt;/p>
&lt;p>However, to take full advantage of the possibilities of this library, it
is necessary to create a &lt;code>simplelogger.properties&lt;/code> file in the
&lt;code>/src/main/resources&lt;/code> folder of the project.&lt;/p>
&lt;p>The self-documented content of this file may be:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># SLF4J&amp;#39;s SimpleLogger configuration file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Simple implementation of Logger that sends all enabled log messages, for all defined loggers, to System.err.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Default logging detail level for all instances of SimpleLogger.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Must be one of (&amp;#34;trace&amp;#34;, &amp;#34;debug&amp;#34;, &amp;#34;info&amp;#34;, &amp;#34;warn&amp;#34;, or &amp;#34;error&amp;#34;).
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># If not specified, defaults to &amp;#34;info&amp;#34;.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">org.slf4j.simpleLogger.defaultLogLevel=debug
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Logging detail level for a SimpleLogger instance named &amp;#34;xxxxx&amp;#34;.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Must be one of (&amp;#34;trace&amp;#34;, &amp;#34;debug&amp;#34;, &amp;#34;info&amp;#34;, &amp;#34;warn&amp;#34;, or &amp;#34;error&amp;#34;).
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># If not specified, the default logging detail level is used.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#org.slf4j.simpleLogger.log.xxxxx=
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Set to true if you want the current date and time to be included in output messages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Default is false, and will output the number of milliseconds elapsed since startup.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">org.slf4j.simpleLogger.showDateTime=true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># The date and time format to be used in the output messages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># The pattern describing the date and time format is the same that is used in java.text.SimpleDateFormat.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># If the format is not specified or is invalid, the default format is used.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># The default format is yyyy-MM-dd HH:mm:ss:SSS Z.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">org.slf4j.simpleLogger.dateTimeFormat=[HH:mm:ss:SSS]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Set to true if you want to output the current thread name.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Defaults to true.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">org.slf4j.simpleLogger.showThreadName=true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Set to true if you want the Logger instance name to be included in output messages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Defaults to true.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">org.slf4j.simpleLogger.showLogName=false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Set to true if you want the last component of the name to be included in output messages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Defaults to false.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">org.slf4j.simpleLogger.showShortLogName=true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">org.slf4j.simpleLogger.levelInBrackets=true
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Why do I see a warning in the console about illegal reflexive access
when running the application?&lt;/strong>&lt;/p>
&lt;p>A known problem on Windows 8/10 platforms causes the smartcard service
to stop when the last reader is removed. This problem prevents a
&amp;ldquo;classic&amp;rdquo; monitoring of connections and disconnections of readers with
the smartcard.io library (Java PC/SC). So for the moment we are using a
workaround based on reflexivity to overcome this problem and allow a
correct monitoring of the readers in the PC/SC plugin. This has the
disadvantage of generating a warning message with recent versions of the
JVM. However, we have not found any problems with this implementation of
the PC/SC plugin so far.&lt;/p>
&lt;h4 id="full-code">Full code&lt;/h4>
&lt;p>Here is the complete code of this quick start in one single block.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.calypso.command.sam.SamRevision&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.calypso.transaction.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.card.selection.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.service.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.core.util.ByteArrayUtil&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.eclipse.keyple.plugin.pcsc.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DemoPoAuthentication&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get the instance of the SmartCardService : main service of Keyple middleware&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Register a PcscPlugin within the SmartCardService to use PC/SC USB Readers&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PcscPluginFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get the PO reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ASK LoGO 0&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Configure the PO reader parameters&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setContactless&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get a SAM reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Identive CLOUD 2700 R Smart Card Reader 0&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Prepare a SamSelector that identifies the Calypso SAM&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SamSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SamSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">samRevision&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SamRevision&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AUTO&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Perform the SAM selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">samSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SamSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samSelector&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isCardPresent&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;No SAM is present in the reader &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processExplicitSelections&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">hasActiveSelection&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SAM matching failed!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoSam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Associate the calypsoSam and the samReader to create a samResource&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoSam&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Prepare a Calypso PO selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;315449432E49434131&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cm">/* AID: Keyple test kit profile 1, Application 2 */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SFI_Environment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0x07&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Setting up a selection based on the AID of a Calypso Revision 3.1 PO&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Select the first application matching the selection AID whatever the card communication protocol&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// the application identifier&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invalidatedPo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PoSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">InvalidatedPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">REJECT&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// to indicate if an invalidated PO should be accepted or not&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Add the selection case to the current selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// (we could have added other cases)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poSelection&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isCardPresent&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The selection of the PO has failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Perform the PO selection and get a CalypsoPo container in return&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processExplicitSelections&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Prepare the security settings used during the Calypso transaction&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PoSecuritySettingsBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a PoTransaction service to manage the Calypso transaction&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Schedule the reading of the Environment file after the secure session is opened&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// (we could have added other commands)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SFI_Environment&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// the sfi to select&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Perform the session opening with the debit key&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processOpening&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SessionSetting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SESSION_LVL_DEBIT&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get and display the Environment data from the card image CalypsoPo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">efEnvironment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_Environment&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">environmentLog&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">efEnvironment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getData&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getContent&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Environment file content: &amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">environmentLog&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Schedule the closure of the channel with the PO after the closing of the secure session&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareReleasePoChannel&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Perform the closing of the Calypso Secure Session&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processClosing&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The data read in session have been certified by the successful closing.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Shutdown the application&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unregisterPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Build your first Android application</title><link>https://keyple.org/archives/docs-1.0/build-your-first-app/android-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/build-your-first-app/android-app/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;h3 id="overview">Overview&lt;/h3>
&lt;p>&lt;strong>Since Keyple is supported by the Android operating system, developers can take advantage of this quick and easy way to implement solution to provide SmartCard communication functionalities in their own mobile application.&lt;/strong>&lt;/p>
&lt;p>For example, Keyple could be used to facilitate the development of a ticketing application based on the use of conteners on a SIM card and relying on &lt;a href="https://developer.android.com/reference/android/se/omapi/package-summary" target="_blank" rel="noopener">Android SE OMAPI&lt;/a>.
Keyple could also be used to develop an application reading SmartCard content through NFC using &lt;a href="https://developer.android.com/guide/topics/connectivity/nfc/advanced-nfc" target="_blank" rel="noopener">Android NFC&lt;/a>.&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/android-app/component/Android_App_Overview.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>As Keyple request low-level reader access, the key features of Keyple middleware relies on components called &lt;strong>Plugins&lt;/strong>. These are the plugins that allow access to the hardware functionality of the terminal by using the native Android SDK or the terminal manufacturer&amp;rsquo;s own custom SDKs.&lt;/p>
&lt;p>This guide will describe how to start a ticketing application using Keyple middleware and Android NFC plugin to read the content of a Calypso SmartCard. As we want to focus on Keyple integration, the Android application architecture will remain the simplest as possible.&lt;/p>
&lt;h3 id="what-to-we-need-for-this-guide">What to we need for this guide?&lt;/h3>
&lt;ul>
&lt;li>Retail Device with NFC powered by android.nfc library (integrated into standard Android SDK).&lt;/li>
&lt;li>Android OS 19+&lt;/li>
&lt;li>A NFC SmartCard with Calypso PO&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="integration">Integration&lt;/h2>
&lt;h3 id="application-setup">Application setup&lt;/h3>
&lt;p>Like for any other Android NFC Application, we need to declare items in the application manifest.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;manifest&lt;/span> &lt;span class="na">xmlns:android=&lt;/span>&lt;span class="s">&amp;#34;http://schemas.android.com/apk/res/android&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uses-permission&lt;/span> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;android.permission.NFC&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uses-feature&lt;/span> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;android.hardware.nfc&amp;#34;&lt;/span> &lt;span class="na">android:required=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/manifest&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Also make sure your minSdkVersion is at least 19.&lt;/p>
&lt;h3 id="sdk-integration">SDK Integration&lt;/h3>
&lt;h4 id="keyple-core">Keyple Core&lt;/h4>
&lt;p>This high-level API is convenient for developers implementing smart card processing application for terminal interfaced
with smart card readers. Access to the readers is provided by the plugins.&lt;/p>
&lt;p>To use Keyple core API (and in fact, anything keyple&amp;rsquo;s related) import the jar within the gradle dependencies of your
Android application.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-java-core:$keyple_version&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please refer to Architecture/Keyle Core&lt;/p>
&lt;h4 id="keyple-plugins">Keyple Plugins&lt;/h4>
&lt;p>There are many Keyple plugins available, the one to use depends on the device and ticketing tools you are aiming to
use.&lt;/p>
&lt;p>To use the NFC plugin simply import it within the gradle dependencies of your Android application.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-android-plugin-nfc:$keyple_version&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="keyple-calypso">Keyple Calypso&lt;/h4>
&lt;p>The Keyple Calypso User API is an extension of the Keyple Core User API to manage Calypso Portable Objects.&lt;/p>
&lt;p>Please refer to Architecture/Keyle Calypso&lt;/p>
&lt;p>To use Keyple Calypso User API simply import the jar within the gradle dependencies of your Android application.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-java-calypso:$keyple_version&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;br>
&lt;h2 id="lets-code">Let&amp;rsquo;s code&lt;/h2>
&lt;h3 id="initializing-the-sdk">Initializing the SDK&lt;/h3>
&lt;h4 id="register-a-plugin">Register a plugin&lt;/h4>
&lt;p>In order to setup Keyple, we need to register at least one plugin. Here we register our NFC plugin. To do so, we use the singleton SmartCardService and the plugin Factory. (See plugin development guide to know more about plugins)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onCreate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">savedInstanceState&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Bundle&lt;/span>&lt;span class="p">?)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">onCreate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">savedInstanceState&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* register Android NFC Plugin to the SmartCardService */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">readerObservationExceptionHandler&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">ReaderObservationExceptionHandler&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">pluginName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">readerName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">SmartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AndroidNfcPluginFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">readerObservationExceptionHandler&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">KeypleException&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* do something with it */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note: Plugins Factory&amp;rsquo;s initialisation could request more steps to execute before passing it to registerPlugin(). It depends on plugins, please check the documentation or usage example of desired plugin.&lt;/p>
&lt;h4 id="unregister-a-plugin">Unregister a plugin&lt;/h4>
&lt;p>Clean resources.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onDestroy&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Unregister Android NFC Plugin to the SmartCardService */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">SmartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">unregisterPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">AndroidNfcPlugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PLUGIN_NAME&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">onDestroy&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="retrieve-a-specific-reader">Retrieve a specific reader&lt;/h3>
&lt;p>With the plugin registered we can retrieve all instances of the component mapping the SmartCard readers. Here we want to retrieve the NFC reader.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//We keep a reference to the reader for later use
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">private&lt;/span> &lt;span class="k">lateinit&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="py">reader&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">AndroidNfcReader&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//PLUGIN_NAME and READER_NAME are constants provided by the used Keyple plugin
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">reader&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">readers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nc">AndroidNfcReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">READER_NAME&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">AndroidNfcReader&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="add-observer-to-handle-nfc-events">Add observer to handle NFC events&lt;/h3>
&lt;p>When native NFC is activated on an Android device, the OS dispatches insertion events occurring in the NFC detection field. In our application, we need detect it in order to proceed to exchanges with the SmartCard.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//To keep it simple we choose to have our MainActivity implementing ObservableReader.ReaderObserver
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//interface.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="nc">MainActivity&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">AppCompatActivity&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nc">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReaderObserver&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Belongs to ObservableReader.ReaderObserver
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//NFC Reader events will be received here.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//this method is not triggered in UI thread
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ReaderEvent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">eventType&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nc">ReaderEvent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">EventType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CARD_INSERTED&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//We&amp;#39;ll select PO when SmartCard is presented in field
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//Method handlePo is described below
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">handlePo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="activate-a-protocol">Activate a protocol&lt;/h3>
&lt;p>Before starting to read a NFC tag, you must activate the protocol in which you wish to detect it.
If you do not activate any protocol, no card will be detected by the Keyple library.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MainActivity&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">AppCompatActivity&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nc">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReaderObserver&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onCreate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">savedInstanceState&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Bundle&lt;/span>&lt;span class="p">?)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">onCreate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">savedInstanceState&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// with this protocol settings we activate the nfc for ISO1443_4 protocol
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">activateProtocol&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">AndroidNfcProtocolSettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getSetting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="deactivate-a-protocol">Deactivate a protocol&lt;/h3>
&lt;p>When your are done with your NFC operations, you can deactivate the NFC protocol :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MainActivity&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">AppCompatActivity&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nc">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReaderObserver&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onDestroy&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Deactivate nfc for ISO1443_4 protocol
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">reader&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">deactivateProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">onDestroy&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we have an access to our NFC Reader, we can activate Card Detection.&lt;/p>
&lt;h3 id="activate-card-detection">Activate Card detection&lt;/h3>
&lt;p>We will start detection as soon as our application comes in foreground and stop when application go background.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MainActivity&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">AppCompatActivity&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nc">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReaderObserver&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onResume&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">onResume&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">let&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//We choose to continue waiting for a new card persentation
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">it&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">startCardDetection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">PollingMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">REPEATING&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="deactivate-card-detection">Deactivate Card detection&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MainActivity&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">AppCompatActivity&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nc">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReaderObserver&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onPause&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">let&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">it&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">stopCardDetection&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">onPause&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can detect when a SmartCard is presented in the field, we can proceed to card application selection and data reading.&lt;/p>
&lt;h3 id="handling-a-calypso-po">Handling a Calypso PO&lt;/h3>
&lt;h4 id="calypso-selection-api">Calypso Selection API&lt;/h4>
&lt;p>With Keyple, PO selection and FCI retrieving can be done using only Keyple Core, but Keyple Calypso API provides specific tools to handle Calypso POs and make the process a bit more simple.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">fun&lt;/span> &lt;span class="nf">handlePo&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">let&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//check if card is in the NFC field
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">it&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">isCardPresent&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Instanciate class handling card selection service
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">cardSelectionsService&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//We only want to select the PO so we choose to close communication channel once
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//selection is done
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareReleaseChannel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//We build a selection request managing specific characteristics of Calypso POs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">poSelection&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">PoSelection&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PoSelector&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Smarcard standard protocol
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">cardProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">YOUR_AID&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//Set the AID of your Calypso PO
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//indicates how to carry out the file occurrence in accordance with
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//ISO7816-4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">fileOccurrence&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">FileOccurrence&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">FIRST&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//indicates which template is expected in accordance with ISO7816-4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">fileControlInformation&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">FileControlInformation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">FCI&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">).&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poSelection&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Proceed to selection using the reader
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">selectionResult&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">processExplicitSelections&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">it&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">runOnUiThread&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//We check the selection result and read the FCI
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">hasActiveSelection&lt;/span>&lt;span class="p">()){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">matchedSmartCard&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">selectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">activeSmartCard&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">fci&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">matchedSmartCard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">fciBytes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Selected, Fci %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fci&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_LONG&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Not selected&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we&amp;rsquo;ve seen we can select our PO we can retrieve more data from it.&lt;/p>
&lt;h4 id="reading-environment-and-usage">Reading Environment and usage&lt;/h4>
&lt;p>In the below example we&amp;rsquo;ll read Environment and Usage data of an Hoplink container.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Data related to Hoplink
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">poAid&lt;/span>&lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;A000000291A000000191&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">sfiHoplinkEFEnvironment&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0x14&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toByte&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">sfiHoplinkEFUsage&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0x1A&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toByte&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">private&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">handlePo&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Prepare the reading order. We&amp;#39;ll read the first record of the EF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//specified by its SFI. This reading will be done within explicit selection.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">poSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sfiHoplinkEFEnvironment&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">poSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sfiHoplinkEFUsage&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Hoplink is a Calypso PO, we can cast the SmartCard
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//with CalypsoPo class, representing the PO content.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">calypsoPO&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">selectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">activeSmartCard&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">CalypsoPo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">environment&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">calypsoPO&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sfiHoplinkEFEnvironment&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">usage&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">calypsoPO&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sfiHoplinkEFUsage&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Environment %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">environment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Usage %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">usage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="full-code">Full code&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;manifest&lt;/span> &lt;span class="na">xmlns:android=&lt;/span>&lt;span class="s">&amp;#34;http://schemas.android.com/apk/res/android&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">package=&lt;/span>&lt;span class="s">&amp;#34;org.eclipse.keyple.android.quickstart&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uses-permission&lt;/span> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;android.permission.NFC&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uses-feature&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;android.hardware.nfc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:required=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;application&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:allowBackup=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:screenOrientation=&lt;/span>&lt;span class="s">&amp;#34;portrait&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:icon=&lt;/span>&lt;span class="s">&amp;#34;@mipmap/ic_launcher&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:label=&lt;/span>&lt;span class="s">&amp;#34;@string/app_name&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:roundIcon=&lt;/span>&lt;span class="s">&amp;#34;@mipmap/ic_launcher_round&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:supportsRtl=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:theme=&lt;/span>&lt;span class="s">&amp;#34;@style/AppTheme&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;activity&lt;/span> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;.MainActivity&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;intent-filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;action&lt;/span> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;category&lt;/span> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;android.intent.category.LAUNCHER&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/intent-filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/activity&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/application&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/manifest&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MainActivity&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">AppCompatActivity&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nc">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReaderObserver&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">private&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="py">reader&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">AndroidNfcReader&lt;/span>&lt;span class="p">?&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">poAid&lt;/span>&lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;A000000291A000000191&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">sfiHoplinkEFEnvironment&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0x14&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toByte&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">sfiHoplinkEFUsage&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0x1A&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toByte&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onCreate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">savedInstanceState&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Bundle&lt;/span>&lt;span class="p">?)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">onCreate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">savedInstanceState&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setContentView&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">R&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">layout&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">activity_main&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">readerObservationExceptionHandler&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">ReaderObservationExceptionHandler&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">pluginName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">readerName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">plugin&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nc">SmartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AndroidNfcPluginFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">readerObservationExceptionHandler&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">reader&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">readers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nc">AndroidNfcReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">READER_NAME&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">AndroidNfcReader&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">activateProtocol&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">AndroidNfcProtocolSettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getSetting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">reader&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">reader&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">KeypleException&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Timber&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Error: %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_LONG&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onResume&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">onResume&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">let&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">it&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">startCardDetection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">PollingMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SINGLESHOT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hunt enabled&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onPause&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">let&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">it&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">stopCardDetection&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">onPause&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">onDestroy&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Deactivate nfc for ISO1443_4 protocol */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">deactivateProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Unregister Android NFC Plugin to the SmartCardService */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">SmartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">unregisterPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">AndroidNfcPlugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PLUGIN_NAME&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">onDestroy&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ReaderEvent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Timber&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Event: %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">eventType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">runOnUiThread&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Event: %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">eventType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">eventType&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nc">ReaderEvent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">EventType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CARD_INSERTED&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">handlePo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//With Calypso API
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">private&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">handlePo&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">let&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">it&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">isCardPresent&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">cardSelectionsService&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareReleaseChannel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">poSelection&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">PoSelection&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PoSelector&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">cardProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poAid&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">fileOccurrence&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">FileOccurrence&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">FIRST&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">fileControlInformation&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">FileControlInformation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">FCI&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">).&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poSelection&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Prepare the reading order. We&amp;#39;ll read the first record of the EF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//specified by his SFI. This reading will be done with selection.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">poSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sfiHoplinkEFEnvironment&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">poSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sfiHoplinkEFUsage&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Selection and file reading will be done here
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">selectionResult&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">processExplicitSelections&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">it&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">runOnUiThread&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">hasActiveSelection&lt;/span>&lt;span class="p">()){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">matchedSmartCard&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">selectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">activeSmartCard&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">fci&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">matchedSmartCard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">fciBytes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Selected, Fci %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fci&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Hoplink is a Calypso PO, we can cast the SmartCard
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//with CalypsoPo class, representing the PO content.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">calypsoPO&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">selectionResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">activeSmartCard&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">CalypsoPo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">environment&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">calypsoPO&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sfiHoplinkEFEnvironment&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">usage&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">calypsoPO&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sfiHoplinkEFUsage&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Environment %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">environment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Usage %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">usage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Not selected&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;br>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;p>&lt;strong>How to fix &amp;ldquo;More than one file was found with OS independent path &amp;lsquo;META-INF/NOTICE.md&amp;rsquo;.&amp;rdquo;&lt;/strong>&lt;/p>
&lt;p>Add lines below to your :app build.gradle file&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">android&lt;/span>&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">packagingOptions&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exclude&lt;/span> &lt;span class="s1">&amp;#39;META-INF/NOTICE.md&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Where can I see more examples&lt;/strong>&lt;/p>
&lt;p>Android native plugins are provided with example applications. Check it to see more use cases: &lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/example" target="_blank" rel="noopener">Examples&lt;/a>&lt;/p></description></item><item><title>Build your first C++ application</title><link>https://keyple.org/archives/docs-1.0/build-your-first-app/cpp-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/build-your-first-app/cpp-app/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;p>This quick start describes how to create a ready-to-execute C++
command-line application that runs a simple transaction based on
a Calypso portable object (PO) involving two smart card readers.&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
The demonstration application created for this quick start requires a
Calypso PO (contactless smart card, mobile phone with contactless
communication) and a Calypso Secure Access Module (SAM).
&lt;/div>
&lt;/div>
&lt;p>We will use three main components of Keyple:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/components-cpp-0.9/core/">Keyple Core&lt;/a>
which is the base component to which all the others refer,&lt;/li>
&lt;li>&lt;a href="https://keyple.org/archives/components-cpp-0.9/plugins/pcsc/">Keyple PC/SC plugin&lt;/a>
to provide the ability to manage PC/SC readers,&lt;/li>
&lt;li>&lt;a href="https://keyple.org/archives/components-cpp-0.9/extensions/calypso/">Keyple Calypso extension&lt;/a>
to handle the commands sent to the Calypso PO and the Calypso SAM.&lt;/li>
&lt;/ul>
&lt;p>In this guide CMake is used as build automation tool.&lt;/p>
&lt;p>The example can run on any machine: Linux, Windows and macOS. If not installed in your machine, you
will need to download :&lt;/p>
&lt;ul>
&lt;li>CMake 2.8 or newer &lt;a href="https://cmake.org/install/" target="_blank" rel="noopener">(download)&lt;/a>&lt;/li>
&lt;li>GCC / CLang / MSVC compiler&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="lets-code">Let&amp;rsquo;s code&lt;/h2>
&lt;p>Now let&amp;rsquo;s see step by step how to create in one single class the
elements that allow a certified reading of data through a Calypso secure
session.&lt;/p>
&lt;p>In a real ticketing application, the organization of the code would
probably be different, but the point here is to show how Keyple makes it
possible to perform very simply operations that normally require a
quantity of code and knowledge that far exceeds what is implemented
here.&lt;/p>
&lt;p>You can either progressively copy each of the small portions of code
that follow or copy the whole class at the bottom of this page.&lt;/p>
&lt;h3 id="create-the-class-skeleton">Create the class skeleton&lt;/h3>
&lt;p>Copy the source code below in a new C++ Class named
DemoPoAuthentication.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Common */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;IllegalStateException.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;LoggerFactory.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Core */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ByteArrayUtil.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SeCommonProtocols.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SeSelector.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SeSelection.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SeProxyService.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* PCSC */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscPluginFactory.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscProtocolSetting.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscReader.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Calypso */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;CalypsoPo.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;CalypsoSam.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ElementaryFile.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PoSecuritySettings.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PoSelectionRequest.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PoSelector.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PoTransaction.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SamRevision.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SamSelector.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SamSelectionRequest.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">po&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">po&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">po&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">parser&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">transaction&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">common&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">common&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">exception&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">exception&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">selection&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">exception&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">protocol&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">pcsc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configure-the-pcsc-plugin-and-the-readers">Configure the PC/SC plugin and the readers&lt;/h3>
&lt;p>The first step to use Keyple is to initialize the plugin and smart card readers.&lt;/p>
&lt;p>In this snippet the PC/SC plugin is registered to the SmartCardService.&lt;/p>
&lt;p>Two readers needs to be connected to the local machine. Replace
&amp;ldquo;PO_READER_NAME&amp;rdquo; and &amp;ldquo;SAM_READER_NAME&amp;rdquo; with the name of the USB readers.&lt;/p>
&lt;p>If you don&amp;rsquo;t know the names of the readers, read how to find them in the &lt;a href="#faq">FAQ&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* ... */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* PO Reader name */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">PO_READER_NAME&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;XXX&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* SAM Reader name */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">SAM_READER_NAME&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;XXX&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Get the instance of the SeProxyService (Singleton pattern) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SeProxyService&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">seProxyService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SeProxyService&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">getInstance&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Register the PcscPlugin with SeProxyService, get the corresponding generic ReaderPlugin */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">pluginFactory&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PcscPluginFactory&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ReaderPlugin&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">readerPlugin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">seProxyService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pluginFactory&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Get the PO reader */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SeReader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">poReader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">readerPlugin&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PO_READER_NAME&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Configure the PO reader parameters */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">poReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setParameter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_KEY_PROTOCOL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_PROTOCOL_T1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Get a SAM reader */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SeReader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">samReader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">readerPlugin&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SAM_READER_NAME&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Configure the SAM reader parameters */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">samReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setParameter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_KEY_PROTOCOL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_PROTOCOL_T0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * PC/SC card access mode:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * The SAM is left in the SHARED mode (by default) to avoid automatic resets due to the limited
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * time between two consecutive exchanges granted by Windows.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * This point will be addressed in a coming release of the Keyple PcSc reader plugin.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * The PO reader is set to EXCLUSIVE mode to avoid side effects (on OS Windows 8+) during the
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * selection step that may result in session failures.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * See KEYPLE-CORE.PC.md file to learn more about this point.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">samReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setParameter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_KEY_MODE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_MODE_SHARED&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">poReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setParameter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_KEY_MODE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_MODE_SHARED&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Set the PO reader protocol flag */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">poReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">addSeProtocolSetting&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_ISO14443_4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PcscProtocolSetting&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PCSC_PROTOCOL_SETTING&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_ISO14443_4&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">poReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">addSeProtocolSetting&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_B_PRIME&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PcscProtocolSetting&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PCSC_PROTOCOL_SETTING&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_B_PRIME&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">samReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">addSeProtocolSetting&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_ISO7816_3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PcscProtocolSetting&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PCSC_PROTOCOL_SETTING&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_ISO7816_3&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* ... */&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="select-the-calypso-sam">Select the Calypso SAM&lt;/h3>
&lt;p>Before executing a transaction each smart card should be selected. The
next step is the selection of the Calypso SAM resulting in a
CalypsoSam object.&lt;/p>
&lt;p>It is then combined with the SAM reader to form the SAM resource needed
later within the transaction service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* ... */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Prepare the selector to ensure the correct SAM is used */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">selector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SamSelector&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">samRevision&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SamRevision&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">AUTO&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">samSelector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SamSelector&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selector&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Make the SAM selection */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SeSelection&lt;/span> &lt;span class="n">samSelection&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">samSelectionRequest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SamSelectionRequest&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samSelector&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">abstractSamSelectionRequest&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">reinterpret_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AbstractSeSelectionRequest&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AbstractApduCommandBuilder&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samSelectionRequest&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">samSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">abstractSamSelectionRequest&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">calypsoSam&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">isSePresent&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SelectionsResult&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">selectionsResult&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">samSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">processExplicitSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">selectionsResult&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">hasActiveSelection&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">calypsoSam&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selectionsResult&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getActiveMatchingSe&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="nf">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SAM matching failed!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="nf">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;No SAM is present in the reader &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">samReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getName&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Associate the calypsoSam and the samReader to create the samResource */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">samResource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SeResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">calypsoSam&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* ... */&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="select-the-calypso-po">Select the Calypso PO&lt;/h3>
&lt;p>1st PO exchange:&lt;/p>
&lt;p>The Calypso PO selection is made using the portable object application&amp;rsquo;s AID
and results in a CalypsoPo object that will contain all the information extracted
from the Calypso PO all along the transaction.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Prepare a Calypso PO selection */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SeSelection&lt;/span> &lt;span class="n">seSelection&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Keyple test kit profile 1, Application 2 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">AID&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;315449432E49434131&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Setting of an AID based selection of a Calypso Revision 3.1 PO
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Select the first application matching the selection AID whatever the card communication
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * protocol
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Keep the logical channel open after the selection
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Calypso selection: configures a PoSelectionRequest with all the desired attributes to
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * make the selection and read additional information afterwards
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">aidSelector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SeSelector&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">AidSelector&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">seSelector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PoSelector&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aidSelector&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="cm">/* The application identifier
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> to indicate if an invalidated PO should be accepted
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> or not */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">invalidatedPo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PoSelector&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">InvalidatedPo&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">REJECT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">poSelector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PoSelector&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">seSelector&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">poSelectionRequest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PoSelectionRequest&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poSelector&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Add the selection case to the current selection (we could have added other cases) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">abstractPoSelectionRequest&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">reinterpret_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AbstractSeSelectionRequest&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AbstractApduCommandBuilder&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poSelectionRequest&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">seSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">abstractPoSelectionRequest&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">isSePresent&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Actual PO communication: operate through a single request the Calypso PO selection
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">calypsoPo&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">seSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">processExplicitSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getActiveMatchingSe&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* ... */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">Exception&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* ... */&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="open-the-calypso-secure-session">Open the Calypso secure session&lt;/h3>
&lt;p>2nd PO exchange :&lt;/p>
&lt;p>The secure session opening operated by the PoTransaction service is
combined with the reading of the environment file (SFI=07h).&lt;/p>
&lt;p>The mutual authentication process between Calypso PO and Calypso SAM is initiated transparently.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Prepare the security settings used during the Calypso transaction */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">poSecuritySettings&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PoSecuritySettingsBuilder&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Create a PoTransaction object to manage the Calypso transaction */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">poTransaction&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SeResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">uint8_t&lt;/span> &lt;span class="n">RECORD_NUMBER_1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">uint8_t&lt;/span> &lt;span class="n">SFI_Environment&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x07&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Read the Environment file at the Session Opening (we could have added other commands) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">poTransaction&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SFI_Environment&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* The sfi to select */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Open Session with the debit key */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">poTransaction&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">processOpening&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SessionSetting&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">AccessLevel&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SESSION_LVL_DEBIT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Get the Environment data */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">efEnvironment&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calypsoPo&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_Environment&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">environmentLog&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ByteArrayUtil&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">efEnvironment&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getData&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getContent&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* ... */&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="close-the-calypso-secure-session">Close the Calypso secure session&lt;/h3>
&lt;p>3rd PO exchange:&lt;/p>
&lt;p>Simply close the Calypso secure session&lt;/p>
&lt;p>The mutual authentication is finalized, it includes the authentication
of the data in the read file.&lt;/p>
&lt;p>Note: any technical, crytographic or content-related incident in the Calypso PO
would be signalled by an exception and would interrupt the thread of
execution.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Schedule the closure of the channel with the PO after the closing of the secure session */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">poTransaction&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prepareReleasePoChannel&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Perform the closing of the Calypso Secure Session */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">poTransaction&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">processClosing&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* ... */&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Find the complete code source &lt;a href="#full-code">below&lt;/a>.&lt;/p>
&lt;br>
&lt;h2 id="cmake-build">CMake build&lt;/h2>
&lt;p>Create a CMakeLists.txt file as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># Copyright (c) 2020 Calypso Networks Association https:&lt;/span>&lt;span class="c1">//www.calypsonet-asso.org/
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># All rights reserved. This program and the accompanying materials are made available under the
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># terms of the Eclipse Public License version 2.0 which accompanies this distribution, and is
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># available at https:&lt;/span>&lt;span class="c1">//www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CMAKE_MINIMUM_REQUIRED&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">VERSION&lt;/span> &lt;span class="mf">2.8&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CMAKE_LEGACY_CYGWIN_WIN32&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CMAKE_MACOSX_RPATH&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CMAKE_CXX_STANDARD&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CMAKE_C_COMPILER_WORKS&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CMAKE_CXX_COMPILER_WORKS&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PROJECT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KeypleDemo&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span> &lt;span class="s">&amp;#34;&amp;lt;path_to_keyple_repos&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">INCLUDE_DIRECTORIES&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">CMAKE_CURRENT_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cp"># Core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">exception&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">selection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">seproxy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">event&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">exception&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">message&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">protocol&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">util&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">bertlv&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cp"># Plugin
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">pcsc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cp"># Common
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">common&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">common&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">exception&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cp"># Calypso
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">po&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">po&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">builder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">po&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">parser&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sam&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">KEYPLE_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyple&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">transaction&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cp"># pcsc (Linux / macOS)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">include&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">PCSC&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">IF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WIN32&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CMAKE_FIND_LIBRARY_PREFIXES&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CMAKE_FIND_LIBRARY_SUFFIXES&lt;/span> &lt;span class="s">&amp;#34;.dll&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CMAKE_BUILD_DIRECTORY&lt;/span> &lt;span class="s">&amp;#34;${CMAKE_CURRENT_BINARY_DIR}&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WINSCARD&lt;/span> &lt;span class="n">winscard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ENDIF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WIN32&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">IF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APPLE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CMAKE_FIND_LIBRARY_PREFIXES&lt;/span> &lt;span class="s">&amp;#34;lib&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CMAKE_FIND_LIBRARY_SUFFIXES&lt;/span> &lt;span class="s">&amp;#34;.dylib&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CMAKE_BUILD_DIRECTORY&lt;/span> &lt;span class="s">&amp;#34;${CMAKE_CURRENT_BINARY_DIR}&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WINSCARD&lt;/span> &lt;span class="s">&amp;#34;-framework PCSC&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ENDIF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APPLE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">IF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UNIX&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SPEC_LIBS&lt;/span> &lt;span class="n">pthread&lt;/span> &lt;span class="n">pcsclite&lt;/span> &lt;span class="n">rt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ENDIF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UNIX&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">IF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APPLE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SPEC_LIBS&lt;/span> &lt;span class="n">pthread&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ENDIF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APPLE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ADD_EXECUTABLE&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">demo_po_authentication&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">CMAKE_CURRENT_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cpp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">TARGET_LINK_DIRECTORIES&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">demo_po_authentication&lt;/span> &lt;span class="n">PUBLIC&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">CMAKE_CURRENT_SOURCE_DIR&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">TARGET_LINK_LIBRARIES&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">demo_po_authentication&lt;/span> &lt;span class="n">keyplecommon&lt;/span> &lt;span class="n">keyplepluginpcsc&lt;/span> &lt;span class="n">keyplecore&lt;/span> &lt;span class="n">keyplecalypso&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">SPEC_LIBS&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now build the demo code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmake ..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;br>
&lt;h2 id="run">Run&lt;/h2>
&lt;ol>
&lt;li>Connect two USB PC/SC Readers.&lt;/li>
&lt;li>Insert the Calypso SAM in the SAM reader.&lt;/li>
&lt;li>Insert the Calypso PO in the PO reader.&lt;/li>
&lt;li>Run the application.&lt;/li>
&lt;/ol>
&lt;br>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;p>&lt;strong>How do I find out the names of the readers?&lt;/strong>&lt;/p>
&lt;p>If you don’t know the reader name, several options:&lt;/p>
&lt;ul>
&lt;li>run the application in debug mode and get the reader name in plugin variable&lt;/li>
&lt;li>run &amp;lsquo;pcsctest&amp;rsquo; (macOS)&lt;/li>
&lt;li>run &amp;lsquo;pcsc_scan&amp;rsquo; (Linux)&lt;/li>
&lt;/ul>
&lt;p>Identify which reader will be the PO (contactless) reader and the SAM
(contact) reader and replace &lt;code>PO_READER_NAME&lt;/code> and
&lt;code>SAM_READER_NAME&lt;/code> with their values.&lt;/p>
&lt;p>&lt;strong>How to activate the Keyple&amp;rsquo;s logs?&lt;/strong>&lt;/p>
&lt;p>Logs are automatically activated but log level can be dynamically changed by a simple call to the
Logger::setLevel() function. Default value is Logger::Level::logDebug.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">DemoPoAuthentication&lt;/span> &lt;span class="k">final&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Logger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LoggerFactory&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">getLogger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">typeid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DemoPoAuthentication&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setLoggerLevel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Logger&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">Level&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">logError&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="full-code">Full code&lt;/h4>
&lt;p>Here is the complete code of this quick start in one single block.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**************************************************************************************************
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Copyright (c) 2020 Calypso Networks Association *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * https://www.calypsonet-asso.org/ *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * See the NOTICE file(s) distributed with this work for additional information regarding *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * copyright ownership. *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * This program and the accompanying materials are made available under the terms of the Eclipse *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Public License 2.0 which is available at http://www.eclipse.org/legal/epl-2.0 *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * SPDX-License-Identifier: EPL-2.0 *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> **************************************************************************************************/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Common */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;IllegalStateException.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;LoggerFactory.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Core */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ByteArrayUtil.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SeCommonProtocols.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SeSelector.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SeSelection.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SeProxyService.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* PCSC */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscPluginFactory.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscProtocolSetting.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PcscReader.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Calypso */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;CalypsoPo.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;CalypsoSam.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;ElementaryFile.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PoSecuritySettings.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PoSelectionRequest.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PoSelector.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;PoTransaction.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SamRevision.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SamSelector.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;SamSelectionRequest.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">po&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">po&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">po&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">parser&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sam&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">calypso&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">transaction&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">common&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">common&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">exception&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">exception&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">selection&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">exception&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">seproxy&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">protocol&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">keyple&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">pcsc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">DemoPoAuthentication&lt;/span> &lt;span class="k">final&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Logger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LoggerFactory&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">getLogger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">typeid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DemoPoAuthentication&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// PO Reader name
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">PO_READER_NAME&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;XXX&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// SAM Reader name
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">SAM_READER_NAME&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;XXX&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Keyple test kit profile 1, Application 2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">AID&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;315449432E49434131&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">uint8_t&lt;/span> &lt;span class="n">RECORD_NUMBER_1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">uint8_t&lt;/span> &lt;span class="n">SFI_Environment&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x07&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Get the instance of the SeProxyService (Singleton pattern)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">SeProxyService&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">seProxyService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SeProxyService&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">getInstance&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= Get and Configure the PO &amp;amp; SAM Readers =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Register the PcscPlugin with SeProxyService, get the corresponding generic ReaderPlugin
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">auto&lt;/span> &lt;span class="n">pluginFactory&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PcscPluginFactory&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ReaderPlugin&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">readerPlugin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">seProxyService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pluginFactory&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Get the PO reader
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SeReader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">poReader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">readerPlugin&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PO_READER_NAME&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Get a SAM reader
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SeReader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">samReader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">readerPlugin&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SAM_READER_NAME&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Eventually, configure the SAM reader parameters
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Set Pcsc settings per reader */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">poReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setParameter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_KEY_PROTOCOL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_PROTOCOL_T1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">samReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setParameter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_KEY_PROTOCOL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_PROTOCOL_T0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * PC/SC card access mode:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * The SAM is left in the SHARED mode (by default) to avoid automatic resets due to the limited
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * time between two consecutive exchanges granted by Windows.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * This point will be addressed in a coming release of the Keyple PcSc reader plugin.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * The PO reader is set to EXCLUSIVE mode to avoid side effects (on OS Windows 8+) during the
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * selection step that may result in session failures.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * See KEYPLE-CORE.PC.md file to learn more about this point.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">samReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setParameter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_KEY_MODE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_MODE_SHARED&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">poReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setParameter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_KEY_MODE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PcscReader&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SETTING_MODE_SHARED&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Set the PO reader protocol flag */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">poReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">addSeProtocolSetting&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_ISO14443_4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PcscProtocolSetting&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PCSC_PROTOCOL_SETTING&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_ISO14443_4&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">poReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">addSeProtocolSetting&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_B_PRIME&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PcscProtocolSetting&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PCSC_PROTOCOL_SETTING&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_B_PRIME&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">samReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">addSeProtocolSetting&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_ISO7816_3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PcscProtocolSetting&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PCSC_PROTOCOL_SETTING&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PROTOCOL_ISO7816_3&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= Create a SAM resource after selecting the SAM =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Prepare the selector to ensure the correct SAM is used
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">auto&lt;/span> &lt;span class="n">selector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SamSelector&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">samRevision&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SamRevision&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">AUTO&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">samSelector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SamSelector&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selector&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Make the SAM selection
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">SeSelection&lt;/span> &lt;span class="n">samSelection&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">samSelectionRequest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SamSelectionRequest&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samSelector&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">abstractSamSelectionRequest&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">reinterpret_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AbstractSeSelectionRequest&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AbstractApduCommandBuilder&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">samSelectionRequest&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">samSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">abstractSamSelectionRequest&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">calypsoSam&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">isSePresent&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SelectionsResult&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">selectionsResult&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">samSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">processExplicitSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">selectionsResult&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">hasActiveSelection&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">calypsoSam&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selectionsResult&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getActiveMatchingSe&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SAM matching failed!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;No SAM is present in the reader &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">samReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getName&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Associate the calypsoSam and the samReader to create the samResource
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">auto&lt;/span> &lt;span class="n">samResource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SeResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">calypsoSam&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Prepare the security settings used during the Calypso transaction
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">auto&lt;/span> &lt;span class="n">poSecuritySettings&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">PoSecuritySettingsBuilder&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= Display basic information about the readers and SAM =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= PO Reader Name = %&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">poReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getName&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">samSerialNumber&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ByteArrayUtil&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getMatchingSe&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getSerialNumber&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= SAM Reader Name = %, Serial Number = %&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">samResource&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getSeReader&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getName&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">samSerialNumber&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= Prepare the Calypso PO selection =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Prepare a Calypso PO selection
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">SeSelection&lt;/span> &lt;span class="n">seSelection&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Setting of an AID based selection of a Calypso Revision 3.1 PO
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// Select the first application matching the selection AID whatever the card communication
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// protocol
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// Keep the logical channel open after the selection
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// Calypso selection: configures a PoSelectionRequest with all the desired attributes to
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// make the selection and read additional information afterwards
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">auto&lt;/span> &lt;span class="n">aidSelector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SeSelector&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">AidSelector&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">seSelector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PoSelector&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aidSelector&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// the application identifier
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// to indicate if an invalidated PO should be accepted
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// or not
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">invalidatedPo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PoSelector&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">InvalidatedPo&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">REJECT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">poSelector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PoSelector&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">seSelector&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">poSelectionRequest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PoSelectionRequest&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poSelector&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Add the selection case to the current selection
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// (we could have added other cases)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">auto&lt;/span> &lt;span class="n">abstractPoSelectionRequest&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">reinterpret_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AbstractSeSelectionRequest&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AbstractApduCommandBuilder&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">poSelectionRequest&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">seSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">abstractPoSelectionRequest&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= Check if a PO is present in the reader =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">isSePresent&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= Start of the Calypso PO processing =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= 1st PO exchange =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= AID based selection =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Actual PO communication: operate through a single request the Calypso PO selection
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">calypsoPo&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">dynamic_pointer_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">seSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">processExplicitSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getActiveMatchingSe&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The selection of the PO has succeeded&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= 2nd PO exchange =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= Open a Calypso secure session =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= Reading of Environment file (SFI=07h) =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Create a PoTransaction object to manage the Calypso transaction
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">auto&lt;/span> &lt;span class="n">poTransaction&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SeResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Read the Environment file at the Session Opening
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// (we could have added other commands)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">poTransaction&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SFI_Environment&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// the sfi to select
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">RECORD_NUMBER_1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Open Session with the debit key
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">poTransaction&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">processOpening&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PoTransaction&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SessionSetting&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">AccessLevel&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">SESSION_LVL_DEBIT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Get the Environment data
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">efEnvironment&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">calypsoPo&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_Environment&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">environmentLog&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ByteArrayUtil&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">efEnvironment&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getData&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getContent&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;File Environment log: %&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">environmentLog&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">isDfRatified&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============= Previous Calypso Secure Session was not ratified =============&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= 3th PO exchange =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= Close the Calypso secure session =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// To close the channel with the PO after the closing
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">poTransaction&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prepareReleasePoChannel&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Close the Calypso Secure Session
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// A ratification command will be sent (CONTACTLESS_MODE)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">poTransaction&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">processClosing&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= The Calypso secure session ended successfully =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= (Successful mutual authentication) =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= End of the Calypso PO processing =&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;============================================================================&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">Exception&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Exception: %&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getMessage&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The selection of the PO has failed&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="sample-trace">Sample trace&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> Get and Configure the PO &lt;span class="p">&amp;amp;&lt;/span> SAM &lt;span class="nv">Readers&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">initNativeReaders - getting card terminals
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">run - starting executor monitoring thread
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>PcscReaderImpl&lt;span class="o">]&lt;/span> &lt;span class="nv">constructor&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; using terminal OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span>transmission_mode, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> protocol, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> mode, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> disconnect, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">run - starting executor monitoring thread
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">constructor&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; using terminal OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> transmission_mode, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> protocol, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> mode, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> disconnect, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Registering a new Plugin to the platform : PcscPlugin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> protocol, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span> T1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> protocol, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span> T0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> mode, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span> shared
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">setParameter&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; PCSC: Set a parameter. &lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> mode, &lt;span class="nv">VALUE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">shared&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> Create a SAM resource after selecting the &lt;span class="nv">SAM&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">protocolFlagMatches - physical channel not open, opening it
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> openAndConnect - protocol: &lt;span class="nv">T&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openAndConnect - connecting tp OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span> with protocol: &lt;span class="nv">T&lt;/span>&lt;span class="o">=&lt;/span>0, connectProtocol: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> and sharingMode: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openAndConnect - card state: &lt;span class="m">84&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> Opening of a physical SE channel in shared mode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">protocolFlagMatches&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; matching SE. &lt;span class="nv">PROTOCOLFLAG&lt;/span> &lt;span class="o">=&lt;/span> SEPROTOCOL:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> ISO 7816-3, &lt;span class="nv">TRANMISSIONMODE&lt;/span> &lt;span class="o">=&lt;/span> CONTACTS&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">processSeRequestSet - processing requests &lt;span class="nb">set&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">processSeRequests&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; transmit SEREQUEST: &lt;span class="o">{&lt;/span>&lt;span class="nv">REQUESTS&lt;/span> &lt;span class="o">=&lt;/span> ApduRequests: &lt;span class="o">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">SELECTOR&lt;/span> &lt;span class="o">=&lt;/span> SESELECTOR: &lt;span class="o">{&lt;/span>SEPROTOCOL: &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> ISO 7816-3, &lt;span class="nv">TRANMISSIONMODE&lt;/span> &lt;span class="o">=&lt;/span> CONTACTS&lt;span class="o">}&lt;/span>&lt;span class="nv">AIDSELECTOR&lt;/span> &lt;span class="o">=&lt;/span> null,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ATRFILTER: &lt;span class="o">{&lt;/span>&lt;span class="nv">REGEX&lt;/span> &lt;span class="o">=&lt;/span> .*&lt;span class="o">}}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">processSeRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; Logical channel &lt;span class="nv">open&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">processSeRequests&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; receive SERESPONSE: &lt;span class="o">{&lt;/span>&lt;span class="nv">RESPONSES&lt;/span> &lt;span class="o">=&lt;/span> APDURESPONSES: &lt;span class="o">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">SELECTIONSTATUS&lt;/span> &lt;span class="o">=&lt;/span> SELECTIONSTATUS: &lt;span class="o">{&lt;/span>&lt;span class="nv">ATR&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">ATR&lt;/span> &lt;span class="o">=&lt;/span> 3b3f9600805a4880c1205017aec11a36829000, &lt;span class="nv">FCI&lt;/span> &lt;span class="o">=&lt;/span> R-APDU:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>&lt;span class="nv">STATUS&lt;/span> &lt;span class="o">=&lt;/span> FAILURE, BYTES &lt;span class="o">(&lt;/span>0&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">}&lt;/span>, &lt;span class="nv">HASMATCHED&lt;/span> &lt;span class="o">=&lt;/span> 1&lt;span class="o">}&lt;/span>, &lt;span class="nv">CHANNELWASOPEN&lt;/span> &lt;span class="o">=&lt;/span> 0&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> Display basic information about the readers and &lt;span class="nv">SAM&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> PO Reader &lt;span class="nv">Name&lt;/span> &lt;span class="o">=&lt;/span> OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> SAM Reader &lt;span class="nv">Name&lt;/span> &lt;span class="o">=&lt;/span> OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span>, Serial &lt;span class="nv">Number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">AEC11A36&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> Prepare the Calypso PO &lt;span class="nv">selection&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> Check &lt;span class="k">if&lt;/span> a PO is present in the &lt;span class="nv">reader&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> Start of the Calypso PO &lt;span class="nv">processing&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> 1st PO &lt;span class="nv">exchange&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> AID based &lt;span class="nv">selection&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">protocolFlagMatches - physical channel not open, opening it
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> openAndConnect - protocol: &lt;span class="nv">T&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openAndConnect - connecting tp OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)&lt;/span> with protocol: &lt;span class="nv">T&lt;/span>&lt;span class="o">=&lt;/span>1, connectProtocol: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> and sharingMode: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openAndConnect - card state: &lt;span class="m">84&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> Opening of a physical SE channel in shared mode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">protocolFlagMatches&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; matching SE. &lt;span class="nv">PROTOCOLFLAG&lt;/span> &lt;span class="o">=&lt;/span> SEPROTOCOL:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> ISO 14443-4, &lt;span class="nv">TRANMISSIONMODE&lt;/span> &lt;span class="o">=&lt;/span> CONTACTLESS&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">processSeRequestSet - processing requests &lt;span class="nb">set&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">processSeRequests&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; transmit SEREQUEST: &lt;span class="o">{&lt;/span>&lt;span class="nv">REQUESTS&lt;/span> &lt;span class="o">=&lt;/span> ApduRequests:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{}&lt;/span>, &lt;span class="nv">SELECTOR&lt;/span> &lt;span class="o">=&lt;/span> SESELECTOR: &lt;span class="o">{&lt;/span>SEPROTOCOL: &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> ISO 14443-4, &lt;span class="nv">TRANMISSIONMODE&lt;/span> &lt;span class="o">=&lt;/span> CONTACTLESS&lt;span class="o">}&lt;/span>AIDSELECTOR:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>&lt;span class="nv">AIDTOSELECT&lt;/span> &lt;span class="o">=&lt;/span> 315449432e49434131FILEOCCURRENCE: &lt;span class="o">{&lt;/span>&lt;span class="nv">ISOBITMASK&lt;/span> &lt;span class="o">=&lt;/span> 0&lt;span class="o">(&lt;/span>0x00&lt;span class="o">)}&lt;/span>FILECONTROLINFORMATION:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>&lt;span class="nv">ISOBITMASK&lt;/span> &lt;span class="o">=&lt;/span> 0&lt;span class="o">(&lt;/span>0x00&lt;span class="o">)}&lt;/span>0x0&lt;span class="o">}&lt;/span>, &lt;span class="nv">ATRFILTER&lt;/span> &lt;span class="o">=&lt;/span> null&lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">processSeRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; Logical channel &lt;span class="nv">open&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">openLogicalChannel&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; Select Application with &lt;span class="nv">AID&lt;/span> &lt;span class="o">=&lt;/span> 315449432e49434131
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">processApduRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; APDUREQUEST: &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> Internal Select Application,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">RAWDATA&lt;/span> &lt;span class="o">=&lt;/span> 00a4040009315449432e4943413100, &lt;span class="nv">CASE4&lt;/span> &lt;span class="o">=&lt;/span> 1&lt;span class="o">}&lt;/span>, elapsed 13c ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> transmitApdu - c-apdu &amp;gt;&amp;gt; 00a4040009315449432e4943413100
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> transmitApdu - r-apdu &lt;span class="s">&amp;lt;&amp;lt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> 6f238409315449432e49434131a516bf0c13c70800000000c17be1f653070a3c23051410019000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[OMNIKEY CardMan (076B:5421) 5421(2)] processApduRequest =&amp;gt; R-APDU: {STATUS = SUCCESS, BYTES (39) = 6f238409315449432e49434131a516bf0c13c70800000000c17be1f653070a3c23051410019000&lt;/span>&lt;span class="o">}&lt;/span>, elapsed c ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">processSeRequests&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; receive SERESPONSE: &lt;span class="o">{&lt;/span>&lt;span class="nv">RESPONSES&lt;/span> &lt;span class="o">=&lt;/span> APDURESPONSES: &lt;span class="o">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">SELECTIONSTATUS&lt;/span> &lt;span class="o">=&lt;/span> SELECTIONSTATUS: &lt;span class="o">{&lt;/span>&lt;span class="nv">ATR&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">ATR&lt;/span> &lt;span class="o">=&lt;/span> 3b888001000000009171710098, &lt;span class="nv">FCI&lt;/span> &lt;span class="o">=&lt;/span> R-APDU: &lt;span class="o">{&lt;/span>&lt;span class="nv">STATUS&lt;/span> &lt;span class="o">=&lt;/span> SUCCESS,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> BYTES &lt;span class="o">(&lt;/span>27&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> 6f238409315449432e49434131a516bf0c13c70800000000c17be1f653070a3c23051410019000&lt;span class="o">}&lt;/span>, &lt;span class="nv">HASMATCHED&lt;/span> &lt;span class="o">=&lt;/span> 1&lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">CHANNELWASOPEN&lt;/span> &lt;span class="o">=&lt;/span> 0&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Application Serial &lt;span class="nv">Number&lt;/span> &lt;span class="o">=&lt;/span> 00000000C17BE1F6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Discretionary &lt;span class="nv">Data&lt;/span> &lt;span class="o">=&lt;/span> 0a3c2305141001
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The selection of the PO has &lt;span class="nv">succeeded&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> 2nd PO &lt;span class="nv">exchange&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> Open a Calypso secure &lt;span class="nv">session&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> Reading of Environment file &lt;span class="o">(&lt;/span>&lt;span class="nv">SFI&lt;/span>&lt;span class="o">=&lt;/span>07h&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">processSeRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; Logical channel &lt;span class="nv">open&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">processApduRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; APDUREQUEST: &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> Select Diversifier,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">RAWDATA&lt;/span> &lt;span class="o">=&lt;/span> 801400000800000000c17be1f6, &lt;span class="nv">CASE4&lt;/span> &lt;span class="o">=&lt;/span> 0&lt;span class="o">}&lt;/span>, elapsed &lt;span class="m">208&lt;/span> ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> transmitApdu - c-apdu &amp;gt;&amp;gt; 801400000800000000c17be1f6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> transmitApdu - r-apdu &lt;span class="s">&amp;lt;&amp;lt; 9000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[OMNIKEY CardMan (076B:5421) 5421(1)] processApduRequest =&amp;gt; R-APDU: {STATUS = SUCCESS, BYTES (2) =
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> 9000&lt;/span>&lt;span class="o">}&lt;/span>, elapsed &lt;span class="m">37&lt;/span> ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">processApduRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; APDUREQUEST: &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> Get Challenge,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">RAWDATA&lt;/span> &lt;span class="o">=&lt;/span> 8084000004, &lt;span class="nv">CASE4&lt;/span> &lt;span class="o">=&lt;/span> 0&lt;span class="o">}&lt;/span>, elapsed &lt;span class="m">0&lt;/span> ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> transmitApdu - c-apdu &amp;gt;&amp;gt; &lt;span class="m">8084000004&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> transmitApdu - r-apdu &lt;span class="s">&amp;lt;&amp;lt; ef48651d9000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[OMNIKEY CardMan (076B:5421) 5421(1)] processApduRequest =&amp;gt; R-APDU: {STATUS = SUCCESS, BYTES (6) =
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ef48651d9000&lt;/span>&lt;span class="o">}&lt;/span>, elapsed &lt;span class="m">3&lt;/span> ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">identification: &lt;span class="nv">TERMINALCHALLENGE&lt;/span> &lt;span class="o">=&lt;/span> ef48651d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">processSeRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; Logical channel &lt;span class="nv">open&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">processApduRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; APDUREQUEST: &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> Open Secure Session
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> V3.1 - &lt;span class="nv">KEYINDEX&lt;/span>&lt;span class="o">=&lt;/span>3, &lt;span class="nv">SFI&lt;/span>&lt;span class="o">=&lt;/span>07, &lt;span class="nv">REC&lt;/span>&lt;span class="o">=&lt;/span>1, &lt;span class="nv">RAWDATA&lt;/span> &lt;span class="o">=&lt;/span> 008a0b3904ef48651d00, &lt;span class="nv">CASE4&lt;/span> &lt;span class="o">=&lt;/span> 1&lt;span class="o">}&lt;/span>, elapsed c7 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> transmitApdu - c-apdu &amp;gt;&amp;gt; 008a0b3904ef48651d00
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> transmitApdu - r-apdu &lt;span class="s">&amp;lt;&amp;lt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> 030ab2cf0030791d00000000000000000000000000000000000000000000000000000000009000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[OMNIKEY CardMan (076B:5421) 5421(2)] processApduRequest =&amp;gt; R-APDU: {STATUS = SUCCESS, BYTES (39) = 030ab2cf0030791d00000000000000000000000000000000000000000000000000000000009000&lt;/span>&lt;span class="o">}&lt;/span>, elapsed e ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">processAtomicOpening&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; opening: &lt;span class="nv">CARDCHALLENGE&lt;/span> &lt;span class="o">=&lt;/span> CF, &lt;span class="nv">POKIF&lt;/span> &lt;span class="o">=&lt;/span> 30, &lt;span class="nv">POKVC&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">79&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">initialize: &lt;span class="nv">POREVISION&lt;/span> &lt;span class="o">=&lt;/span> REV3_1, &lt;span class="nv">SAMREVISION&lt;/span> &lt;span class="o">=&lt;/span> C1, &lt;span class="nv">SESSIONENCRYPTION&lt;/span> &lt;span class="o">=&lt;/span> 0, &lt;span class="nv">VERIFICATIONMODE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">initialize: &lt;span class="nv">VERIFICATIONMODE&lt;/span> &lt;span class="o">=&lt;/span> 0, &lt;span class="nv">REV32MODE&lt;/span> &lt;span class="o">=&lt;/span> 0, &lt;span class="nv">KEYRECNUMBER&lt;/span> &lt;span class="o">=&lt;/span> 0&lt;span class="o">(&lt;/span>0x00&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">initialize: &lt;span class="nv">KIF&lt;/span> &lt;span class="o">=&lt;/span> 48&lt;span class="o">(&lt;/span>0x30&lt;span class="o">)&lt;/span>, &lt;span class="nv">KVC&lt;/span> &lt;span class="o">=&lt;/span> 79&lt;span class="o">(&lt;/span>0x79&lt;span class="o">)&lt;/span>, &lt;span class="nv">DIGESTDATA&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 030ab2cf0030791d0000000000000000000000000000000000000000000000000000000000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">File Environment log: &lt;span class="nv">0000000000000000000000000000000000000000000000000000000000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> 3th PO &lt;span class="nv">exchange&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> Close the Calypso secure &lt;span class="nv">session&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">processSeRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; Logical channel &lt;span class="nv">open&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">processApduRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; APDUREQUEST: &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> Digest Init, &lt;span class="nv">RAWDATA&lt;/span> &lt;span class="o">=&lt;/span> 808a00ff273079030ab2cf0030791d0000000000000000000000000000000000000000000000000000000000, &lt;span class="nv">CASE4&lt;/span> &lt;span class="o">=&lt;/span> 0&lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> elapsed 2f ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> transmitApdu - c-apdu &amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 808a00ff273079030ab2cf0030791d0000000000000000000000000000000000000000000000000000000000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> transmitApdu - r-apdu &lt;span class="s">&amp;lt;&amp;lt; 9000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[OMNIKEY CardMan (076B:5421) 5421(1)] processApduRequest =&amp;gt; R-APDU: {STATUS = SUCCESS, BYTES (2) = 9000&lt;/span>&lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> elapsed &lt;span class="m">6&lt;/span> ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">processApduRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; APDUREQUEST: &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> Digest Close,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">RAWDATA&lt;/span> &lt;span class="o">=&lt;/span> 808e000004, &lt;span class="nv">CASE4&lt;/span> &lt;span class="o">=&lt;/span> 0&lt;span class="o">}&lt;/span>, elapsed &lt;span class="m">0&lt;/span> ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> transmitApdu - c-apdu &amp;gt;&amp;gt; 808e000004
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> transmitApdu - r-apdu &lt;span class="s">&amp;lt;&amp;lt; 819e515d9000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[OMNIKEY CardMan (076B:5421) 5421(1)] processApduRequest =&amp;gt; R-APDU: {STATUS = SUCCESS, BYTES (6) =
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> 819e515d9000&lt;/span>&lt;span class="o">}&lt;/span>, elapsed &lt;span class="m">9&lt;/span> ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">SIGNATURE&lt;/span> &lt;span class="o">=&lt;/span> 819e515d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">processSeRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; Logical channel &lt;span class="nv">open&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">processApduRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; APDUREQUEST: &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> Close Secure Session,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">RAWDATA&lt;/span> &lt;span class="o">=&lt;/span> 008e800004819e515d00, &lt;span class="nv">CASE4&lt;/span> &lt;span class="o">=&lt;/span> 1&lt;span class="o">}&lt;/span>, elapsed &lt;span class="m">31&lt;/span> ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> transmitApdu - c-apdu &amp;gt;&amp;gt; 008e800004819e515d00
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> transmitApdu - r-apdu &lt;span class="s">&amp;lt;&amp;lt; 08d222e99000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[OMNIKEY CardMan (076B:5421) 5421(2)] processApduRequest =&amp;gt; R-APDU: {STATUS = SUCCESS, BYTES (6) =
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> 08d222e99000&lt;/span>&lt;span class="o">}&lt;/span>, elapsed &lt;span class="m">34&lt;/span> ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">processApduRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; APDUREQUEST: &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> , &lt;span class="nv">RAWDATA&lt;/span> &lt;span class="o">=&lt;/span> 00b2000000,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">CASE4&lt;/span> &lt;span class="o">=&lt;/span> 0&lt;span class="o">}&lt;/span>, elapsed &lt;span class="m">0&lt;/span> ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> transmitApdu - c-apdu &amp;gt;&amp;gt; 00b2000000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> transmitApdu - r-apdu &lt;span class="s">&amp;lt;&amp;lt; 6b00
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[OMNIKEY CardMan (076B:5421) 5421(2)] processApduRequest =&amp;gt; R-APDU: {STATUS = FAILURE, BYTES (2) = 6b00&lt;/span>&lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> elapsed 2a ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> closePhysicalChannel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> closeAndDisconnect - reset: y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>2&lt;span class="o">)]&lt;/span> &lt;span class="nv">Ignore&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; Event SE_PROCESSED received in currentState
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> WAIT_FOR_START_DETECTION
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">processSeRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; Logical channel &lt;span class="nv">open&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> &lt;span class="nv">processApduRequest&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; APDUREQUEST: &lt;span class="o">{&lt;/span>&lt;span class="nv">NAME&lt;/span> &lt;span class="o">=&lt;/span> Digest Authenticate,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">RAWDATA&lt;/span> &lt;span class="o">=&lt;/span> 808200000408d222e9, &lt;span class="nv">CASE4&lt;/span> &lt;span class="o">=&lt;/span> 0&lt;span class="o">}&lt;/span>, elapsed &lt;span class="m">61&lt;/span> ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> transmitApdu - c-apdu &amp;gt;&amp;gt; 808200000408d222e9
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>OMNIKEY CardMan &lt;span class="o">(&lt;/span>076B:5421&lt;span class="o">)&lt;/span> 5421&lt;span class="o">(&lt;/span>1&lt;span class="o">)]&lt;/span> transmitApdu - r-apdu &lt;span class="s">&amp;lt;&amp;lt; 9000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[OMNIKEY CardMan (076B:5421) 5421(1)] processApduRequest =&amp;gt; R-APDU: {STATUS = SUCCESS, BYTES (2) = 9000&lt;/span>&lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> elapsed 5e &lt;span class="nv">ms&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> The Calypso secure session ended &lt;span class="nv">successfully&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>Successful mutual authentication&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">=&lt;/span> End of the Calypso PO &lt;span class="nv">processing&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">============================================================================&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Common concepts</title><link>https://keyple.org/archives/docs-1.0/developer-guide/common-concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/developer-guide/common-concepts/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;p>This page describes the core elements of Keyple, i.e. the concepts and APIs of &lt;strong>Keyple Core&lt;/strong> that are used to build any application implementing Keyple.&lt;/p>
&lt;p>It is essential for the future user of Keyple to be familiar with what is said in this chapter because the other modules made available by the project are all dependent on &lt;strong>Keyple Core&lt;/strong>.&lt;/p>
&lt;br>
&lt;h2 id="reader">Reader&lt;/h2>
&lt;p>Keyple&amp;rsquo;s primary goal being to interact with smart cards (or smartphones) worn by individuals, it is logical to put the Reader at the top of &lt;strong>Keyple Core&lt;/strong>&amp;rsquo;s concepts.&lt;/p>
&lt;p>Indeed, it is through the reader interfaces that all interactions with the smart cards will take place, either directly via &lt;strong>Keyple Core&lt;/strong> or using an extension (such as &lt;strong>Keyple Calypso&lt;/strong>).&lt;/p>
&lt;p>These interfaces provide the means to&lt;/p>
&lt;ul>
&lt;li>identify the underlying physical reader,&lt;/li>
&lt;li>manage communication protocols,&lt;/li>
&lt;li>detect the presence and communicate with smart cards.&lt;/li>
&lt;/ul>
&lt;p>The reader concept also applies to the hardware interfaces used to communicate with security elements such as SAMs (Secure Access Modules), which are sometimes integrated into devices and the virtual interfaces represented by the remote implementations.&lt;/p>
&lt;p>&lt;a href="./archives/docs-1.0/architecture/keyple-core/#reader-access">More information&lt;/a>&lt;/p>
&lt;br>
&lt;h2 id="plugin">Plugin&lt;/h2>
&lt;p>In Keyple language a plugin is a service that allows the management of readers of a certain type.
The plugin is responsible for informing the application about the availability of readers.
The readers of the same plugin are usually hardware linked to the same physical interface.&lt;/p>
&lt;p>Depending on its profile, an application may use different types of plugins to communicate with the different elements it needs (card, SAM).&lt;/p>
&lt;p>The Plugin interface essentially allows to list and retrieve the available readers.&lt;/p>
&lt;p>&lt;a href="./archives/docs-1.0/architecture/keyple-core/#reader-access">More information&lt;/a>&lt;/p>
&lt;br>
&lt;h2 id="smart-card-service">Smart card service&lt;/h2>
&lt;p>This is the &lt;strong>Keyple Core&lt;/strong> service that concentrates the knowledge of active plugins and readers.&lt;/p>
&lt;p>At startup, a Keyple application must register the plugins it uses. Conversely, it can also unregister them.&lt;/p>
&lt;p>The &lt;strong>SmartCardService&lt;/strong> will then make sure that the resources used are properly released.&lt;/p>
&lt;p>&lt;a href="./archives/docs-1.0/architecture/keyple-core/#reader-access">More information&lt;/a>&lt;/p>
&lt;br>
&lt;h2 id="observation">Observation&lt;/h2>
&lt;p>The observation concept applies to readers as well as to plugins; optional, it is used depending on the needs.&lt;/p>
&lt;p>It consists in monitoring changes such as reader connection/disconnection or card insertion/removal and informing the observing application through a dedicated interface.&lt;/p>
&lt;p>Not all plugins and readers are observable.&lt;/p>
&lt;p>&lt;a href="./archives/docs-1.0/architecture/keyple-core/#reader-notifications">More information&lt;/a>&lt;/p>
&lt;br>
&lt;h2 id="selection">Selection&lt;/h2>
&lt;p>In Keyple the concept of selection is derived from the application selection defined by the ISO7816-4 standard.&lt;/p>
&lt;p>It supplements it by managing cards that do not have the standard command using identification mechanisms based on Answer To Reset and the communication protocol, and also by allowing the execution of commands immediately following application selection or detection.&lt;/p>
&lt;p>This principle optimizes the processing by allowing the application to elaborate advanced card discovery requests.&lt;/p>
&lt;p>Several targets can be defined by the application according to the different customer cards expected.&lt;/p>
&lt;p>The &lt;strong>default selection&lt;/strong> principle consists in providing an observable reader with a set of selection cases corresponding to the expected cards and receiving notifications containing not only the card identification but also the result of all additional commands that the application will have attached.&lt;/p>
&lt;p>&lt;a href="./archives/docs-1.0/architecture/keyple-core/#card-selection">More information&lt;/a>&lt;/p>
&lt;br>
&lt;h2 id="abstract-smart-card">Abstract smart card&lt;/h2>
&lt;p>The &lt;strong>abstract smart card&lt;/strong> concept is used by specific extensions (e.g. &lt;strong>Keyple Calypso&lt;/strong>) and by the &lt;strong>Keyple Core&lt;/strong> selection mechanism.
It corresponds to an abstract container model implemented by the extension specific to a card type and returned by the selection process.&lt;/p>
&lt;p>This container will be able to carry all the useful information known about the card.&lt;/p>
&lt;p>Note: this concept, mentioned here for understanding, should not appear to the application developer if he uses a card extension.&lt;/p>
&lt;p>&lt;a href="./archives/docs-1.0/architecture/keyple-core/#card-selection">More information&lt;/a>&lt;/p></description></item><item><title>Standalone application</title><link>https://keyple.org/archives/docs-1.0/developer-guide/standalone-application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/developer-guide/standalone-application/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>A standalone application is an application that runs in a device in contact
with the end user.&lt;/p>
&lt;p>It has at least one local smart card reader and manages itself the
interaction with the user.&lt;/p>
&lt;p>In the ticketing industry, it is typically the software that runs a
validator, a vending machine or a control terminal.&lt;/p>
&lt;p>The diagram below illustrates the organization of the local standalone
components:
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="archive-1.0/standalone-application/component/Local_Application_Components_Overview.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;br>
&lt;h2 id="before-you-start">Before you start&lt;/h2>
&lt;ol>
&lt;li>In pre-requisite, read the &lt;a href="./archives/docs-1.0/developer-guide/common-concepts/">common concepts&lt;/a> page and become familiar with the basic
concepts on which Keyple is based.&lt;/li>
&lt;li>Any implementation of a Keyple application starts with the
implementation of &lt;strong>Keyple Core&lt;/strong>, please study the
&lt;a href="#workflow">workflow&lt;/a> proposed in the following chapter.&lt;/li>
&lt;li>Explore the &lt;a href="#keyplecoreapi">Keyple Core API&lt;/a> to discover all the
possibilities offered by &lt;strong>Keyple Core&lt;/strong>.&lt;/li>
&lt;li>Take inspiration from the &lt;a href="#examples">examples&lt;/a>.&lt;/li>
&lt;li>Follow the explanations given in the &lt;a href="https://keyple.org/archives/docs-1.0/build-your-first-app/">Build your first app&lt;/a> section to configure your
environment.&lt;/li>
&lt;li>Using the &lt;a href="https://keyple.org/archives/components-java-1.0/">Java components&lt;/a> or &lt;a href="https://keyple.org/archives/components-cpp-0.9/">C++ components&lt;/a> pages, import
&lt;strong>Keyple Core&lt;/strong> into your project and start playing with Keyple.&lt;/li>
&lt;li>Don&amp;rsquo;t forget to explore the potential of Keyple card-specific
extensions such as &lt;strong>Keyple Calypso&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;br>
&lt;h2 id="workflow">Workflow&lt;/h2>
&lt;p>&lt;strong>Keyple Core&lt;/strong> is built around the concepts described &lt;a href="./archives/docs-1.0/developer-guide/common-concepts/">here&lt;/a> and sometimes proposes several ways to perform
an action or to achieve a result depending on the needs of the
application.&lt;/p>
&lt;p>The purpose of this section is to guide you in its use.&lt;/p>
&lt;h3 id="creation-of-the-smart-card-service">Creation of the Smart Card Service&lt;/h3>
&lt;p>This is the very first step in the realization of a Keyple application:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Get the instance of the SmartCardService */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SmartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The Smart Card Service is based on the SmartCardService object, which is
a singleton that must be held by the application all along its
execution.&lt;/p>
&lt;p>Its main role is to centralize Keyple resources and manage their
lifecycle.&lt;/p>
&lt;h3 id="choose-the-plugin">Choose the plugin&lt;/h3>
&lt;p>The Keyple application developer will choose the plugins he needs
according to the equipment on which his Keyple application will run.&lt;/p>
&lt;p>For example, if the environment is PC based, one will probably, but
without obligation, go for the PC/SC plugin.&lt;/p>
&lt;p>For an Andoid terminal environment, the plugin could be the standard
Android NFC plugin or one of the plugins available from the industrial
partners of the project. For a complete list of available plugins,
please see the &lt;a href="https://keyple.org/archives/components-java-1.0/">Java&lt;/a> or &lt;a href="https://keyple.org/archives/components-cpp-0.9/">C++&lt;/a> pages.&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
A new plugin can also be &lt;a href="./archives/docs-1.0/developer-guide/create-plugin/">created&lt;/a> if the envisaged hardware does not yet have its
plugin.
&lt;/div>
&lt;/div>
&lt;h3 id="register-the-plugin">Register the plugin&lt;/h3>
&lt;p>All Keyple plugins implement the &lt;code>Plugin&lt;/code> interface.&lt;/p>
&lt;p>The plugin registration consists in submitting its factory to the Smart
Card Service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Assign the PcscPlugin to the SmartCardService */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PcscPluginFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerExceptionHandlerImpl&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="alert alert-note">
&lt;div>
&lt;p>The plugin factories all implement the interface expected by
SmartCardService.&lt;/p>
&lt;p>Depending on the case, the constructor of the factory provided by the
plugin can take parameters as argument.&lt;/p>
&lt;p>For example, in the code above, the PC/SC plugin expects exception
handlers, but in other cases it could be other parameters.&lt;/p>
&lt;/div>
&lt;/div>
&lt;h3 id="observation-of-the-plugin">Observation of the plugin&lt;/h3>
&lt;div class="alert alert-warning">
&lt;div>
The notion of plugin observation applies only to
hardware environments in which the readers are removable.
&lt;/div>
&lt;/div>
&lt;p>The observation of reader connections and disconnections is achieved
through a background task managed by &lt;strong>Keyple Core&lt;/strong>.&lt;/p>
&lt;p>It is therefore imperative to provide an exception handler to allow
&lt;strong>Keyple Core&lt;/strong> to warn the application in case of an execution error
during monitoring or event notification.&lt;/p>
&lt;p>Here is an example of exception handler implementation in a PC/SC plugin
context:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">PluginExceptionHandlerImpl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PluginObservationExceptionHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">onPluginObservationError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pluginName&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">throwable&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;An unexpected plugin error occurred: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pluginName&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">throwable&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cm">/* Create an exception handler for plugin observation */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">PluginExceptionHandlerImpl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pluginExceptionHandlerImpl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ExceptionHandlerImpl&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cm">/* Assign the PcscPlugin to the SmartCardService */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PcscPluginFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pluginExceptionHandlerImpl&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For the observation of the plugin itself, the application must provide
an object implementing the &lt;code>PluginObserver&lt;/code> interface to the plugin
after having cast it in &lt;code>ObservablePlugin&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">((&lt;/span>&lt;span class="n">ObservablePlugin&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PluginObserver&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>PluginObserver&lt;/code> interface requires the implementation of the
&lt;code>update&lt;/code> method that will be called by Keyple Core when notifying
plugin events.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">PluginObserver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ObservablePlugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PluginObserver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PluginEvent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">switch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getEventType&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">READER_CONNECTED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// here the processing to be done when a reader is connected&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">READER_DISCONNECTED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// here the processing to be done when a reader is disconnected&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="retrieve-the-reader">Retrieve the reader&lt;/h3>
&lt;p>Readers are objects implementing the &lt;code>Reader&lt;/code> interface and are
returned by the plugin&amp;rsquo;s &lt;code>getReader&lt;/code> method taking the name of the
reader as argument.&lt;/p>
&lt;p>The names of the readers available from the plugin are returned as a
list of strings by the &lt;code>getReaderNames&lt;/code> method.&lt;/p>
&lt;p>The &lt;code>getReaders&lt;/code> method also allows to retrieve all readers in a Map
whose key is the name of the reader and the value the &lt;code>Reader&lt;/code>
object.&lt;/p>
&lt;p>Here is an example to get the 1st PC/SC reader:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerName&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReaderNames&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Reader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">readerName&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="alert alert-note">
&lt;div>
Depending on the type of plugin, the reader names are
more or less dynamic (e.g. a PC/SC based system vs. an embedded
terminal), it is sometimes necessary to implement an identification
mechanism in order to assign the right reader to the right place in the
system (for example by using regular expressions).
&lt;/div>
&lt;/div>
&lt;h3 id="customize-the-reader-settings">Customize the reader settings&lt;/h3>
&lt;p>Take a close look at the parameters proposed by the plugin and its
readers.&lt;/p>
&lt;p>In particular, it is necessary to configure the expected communication
protocols, but it is also possible that other settings exist depending
on the hardware context.&lt;/p>
&lt;h3 id="observation-of-the-reader">Observation of the reader&lt;/h3>
&lt;p>The observation of inserting and removing cards from readers is similar
to the observation of plugins in that it requires the same operations,
i.e. the use of an exception handler and an object implementing a
dedicated interface.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ReaderExceptionHandlerImpl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ReaderObservationExceptionHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">onReaderObservationError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pluginName&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerName&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">throwable&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;An unexpected reader error occurred: {}:{}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pluginName&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerName&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">throwable&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cm">/* Create an exception handler for reader observation */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">ReaderExceptionHandlerImpl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerExceptionHandlerImpl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ExceptionHandlerImpl&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cm">/* Assign the PcscPlugin to the SmartCardService */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PcscPluginFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pluginExceptionHandlerImpl&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readerExceptionHandlerImpl&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The observation of the events of the reader is done in a similar way to
that of the plugin, by adding an observer:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">addObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ReaderObserver&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and implementing the ReaderObserver interface:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">ReaderObserver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ReaderObserver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ReaderEvent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">switch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getEventType&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_INSERTED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// here the processing to be done when a card is inserted&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_MATCHED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// here the processing to be done when a card matched the selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_REMOVED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// here the processing to be done when a card is removed&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="alert alert-note">
&lt;div>
Observation of the readers is optional in Keyple. It
facilitates an event-driven programming mode, but an application
developer can choose not to observe a reader, either because this reader
is not designed to manage card insertions/withdrawals (for example an
Android OMAPI reader or a SAM reader), or because the application is
designed to directly manage the presence of a card (refer to the
&lt;code>Reader&lt;/code> interface).
&lt;/div>
&lt;/div>
&lt;h3 id="card-selection">Card selection&lt;/h3>
&lt;p>The card selection service offered by &lt;strong>Keyple Core&lt;/strong> gives multiple
possibilities to choose the processing according to the type of card
presented to the reader.&lt;/p>
&lt;p>It is based on a filtering process according to three possible criteria,
each of which is optional:&lt;/p>
&lt;ul>
&lt;li>the communication protocol of the card (usually also identifying a
card technology)&lt;/li>
&lt;li>the answer to reset of the card (ATR)&lt;/li>
&lt;li>the ISO standardized application identifier (AID)&lt;/li>
&lt;/ul>
&lt;p>Each of these criteria can be defined in a &lt;code>CardSelector&lt;/code> object.&lt;/p>
&lt;p>When a card is inserted, it is evaluated according to these criteria and
will be given the status &amp;ldquo;selected&amp;rdquo; or not.&lt;/p>
&lt;p>When a card is not selected, no other operation will be possible with
it. Depending on the chosen setting, the result of the selection will or
will not be made available to the application. It is thus possible to
directly ignore cards that do not correspond to the defined selection
criteria.&lt;/p>
&lt;p>When a card is selected, the result is an object that extends the
AbstractSmartCard and contains all the information known about the card
at that stage.&lt;/p>
&lt;p>In the case of a ISO standardized card, the application is selected with
the provided AID (additional settings are available to specify the
desired navigation within the card applications list).&lt;/p>
&lt;p>In addition to the selection process itself, specific APDU commands can
be sent to the card if the selection is successful. The output data of
these commands are available in the instance of the object
&lt;code>AbstractSmarCard&lt;/code>.&lt;/p>
&lt;p>The &lt;code>CardSelector&lt;/code> and the additional APDU commands are grouped in a
&lt;code>CardSelectionRequest&lt;/code> object.&lt;/p>
&lt;p>One or more &lt;code>CardSelectionRequest&lt;/code> can be set up to perform as many
selection cases, each targeting a particular card or application.&lt;/p>
&lt;p>The final selection process takes as input a list of
&lt;code>CardSelectionRequest&lt;/code> and gets in return a list of
&lt;code>CardSelectionResponse&lt;/code>.&lt;/p>
&lt;h4 id="card-selection-steps">Card selection steps&lt;/h4>
&lt;p>In this guide we will not show the addition of supplementary APDU
commands. Please refer to the Calypso guide for an implementation
example.&lt;/p>
&lt;h5 id="create-the-card-selection-service">Create the card selection service&lt;/h5>
&lt;p>The card selection service will be used all along the card search
process.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="create-the-selection-cases">Create the selection cases&lt;/h5>
&lt;p>The application can create as many selection cases as the type of cards
expected. The order in which the selection cases are prepared is
important because it will favor the latency delay for the processing of
the cards corresponding to the first case. It is therefore recommended
to place the most common card profile in the application context first.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/** Create a new class extending AbstractCardSelection */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">GenericCardSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">extends&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AbstractCardSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">GenericCardSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelector&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">super&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardSelector&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AbstractSmartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardSelectionResponse&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionResponse&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">GenericSmartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">extends&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AbstractSmartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">GenericSmartCard&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardSelectionResponse&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionResponse&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">super&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardSelectionResponse&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">toJson&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;{}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GenericSmartCard&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardSelectionResponse&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">aid1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;AABBCCDDEE&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">aid2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;EEDDCCBBAA&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// first selection case targeting cards with AID1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">GenericCardSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelector1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GenericCardSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">cardProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aid1&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Add the selection case to the current selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardSelector1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// first selection case targeting cards with AID1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">GenericCardSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelector2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GenericCardSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">cardProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aid2&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Add the selection case to the current selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cardSelector2&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="proceed-to-the-selection-with-a-non-observable-reader">Proceed to the selection with a non-observable reader&lt;/h5>
&lt;p>The &lt;code>processExplicitSelections&lt;/code> method of &lt;code>CardSelectionService&lt;/code>
performs the actual communication with the card.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Check if a card is present in the reader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isCardPresent&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;No Po Card is present in the reader.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Actual card communication: operate through a single request the card selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CardSelectionsResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processExplicitSelections&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="proceed-to-the-selection-with-an-observable-reader">Proceed to the selection with an observable reader&lt;/h5>
&lt;p>In the case of an observable reader, the selection request is provided
to the reader (it is then named Default Selection) and will be processed
automatically as soon as a card is presented. The application is then
notified of the event with the data resulting from the selection.
Depending on the selection settings, the application will be notified of
all card presentations (&lt;code>CARD_INSERTED&lt;/code> event) or only those
presentations that led to a successful selection (&lt;code>CARD_MATCHED&lt;/code>
event).&lt;/p>
&lt;h6 id="add-a-default-selection">Add a default selection&lt;/h6>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Provide the Reader with the selection operation to be processed when a card is inserted.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setDefaultSelectionRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getDefaultSelection&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getDefaultSelectionsRequest&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">NotificationMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">MATCHED_ONLY&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PollingMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">REPEATING&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>NotificationMode&lt;/code> allows you to specify whether all card
insertions should be reported to the application or only those that led
to a successful selection.&lt;/p>
&lt;p>&lt;code>PollingMode&lt;/code> indicates whether to go back to waiting for the card
after processing (&lt;code>REPEATING&lt;/code>) or let the application decide when to
restart the search (&lt;code>SINGLESHOT&lt;/code>) with &lt;code>startCardDetection&lt;/code>.&lt;/p>
&lt;p>Note: when the default selection is set with the &lt;code>PollingMode&lt;/code>
parameter, the card detection is started automatically. However, it is
possible to set a default selection without automatic start and by
starting the detection independently with &lt;code>startCardDetection&lt;/code>.&lt;/p>
&lt;h6 id="receive-the-result-as-an-event">Receive the result as an event&lt;/h6>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ReaderEvent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">switch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getEventType&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_MATCHED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">AbstractSmartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">selectedCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">selectedCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">getDefaultSelection&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processDefaultSelectionsResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getDefaultSelectionsResponse&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KeypleException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Exception: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">())).&lt;/span>&lt;span class="na">finalizeCardProcessing&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selectedCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Observer notification: the selection of the card has succeeded.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// insert the processing of the card here&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;= #### End of the card processing.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;The selection of the card has failed. Should not have occurred due to the MATCHED_ONLY selection mode.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_INSERTED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;CARD_INSERTED event: should not have occurred due to the MATCHED_ONLY selection mode.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CARD_REMOVED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">trace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;There is no PO inserted anymore. Return to the waiting state...&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getEventType&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ReaderEvent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">EventType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CARD_INSERTED&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getEventType&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ReaderEvent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">EventType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CARD_MATCHED&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Informs the underlying layer of the end of the card processing, in order to manage the&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// removal sequence.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ObservableReader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">())).&lt;/span>&lt;span class="na">finalizeCardProcessing&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="get-the-selection-result">Get the selection result&lt;/h5>
&lt;p>The result of the selection is available in the &lt;code>AbstractSmartCard&lt;/code>
object.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">hasActiveSelection&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">warn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The selection of the application &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardAid&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; failed.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">AbstractSmartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">smartCard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The selection of the card has succeeded.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">smartCard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">hasFci&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fci&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">smartCard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getFciBytes&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Application FCI = {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fci&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">smartCard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">hasAtr&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">atr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">smartCard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getAtrBytes&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Card ATR = {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">atr&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="implementation-of-the-application-service">Implementation of the application service&lt;/h3>
&lt;p>The applicative processing of the card that follows the selection of the
card is to be inserted in the processing of the &lt;code>CARD_INSERTED&lt;/code> or
&lt;code>CARD_MATCHED&lt;/code> event.&lt;/p>
&lt;p>It can be processed in the thread provided by the monitoring task or
detached in a separate thread. The application developer must pay
attention to the handling of exceptions in this part of the application.
Indeed, in case of a runtime exception, the information will be given to
the application via the exception handler configured beforehand.&lt;/p>
&lt;h3 id="stopping-the-application">Stopping the application&lt;/h3>
&lt;p>The clean shutdown of a Keyple application requires the release of
resources and in particular the shutdown of the observation threads.&lt;/p>
&lt;p>This is done by unregistering the plugins in the following way:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">smartCardService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unregisterPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;br>
&lt;h2 id="keyple-core-api">Keyple Core API&lt;/h2>
&lt;p>To learn all the details of the &lt;strong>Keyple Core&lt;/strong> API, please consult the
&lt;a href="https://keyple.org/archives/docs-1.0/api-reference/">Javadoc documentation&lt;/a>.&lt;/p>
&lt;p>However, here are two diagrams showing the main features of Keyple Core:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The diagram below represents the main classes implemented around the
&lt;strong>Smart Card Service&lt;/strong> with in particular the observation mechanisms.
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="archive-1.0/architecture/KeypleCore_Reader_ClassDiag_PluginSettingAndReaderAccess_1_0_0.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The diagram below represents the main classes used for selection
operations.
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="archive-1.0/architecture/KeypleCore_CardSelection_ClassDiag_SelectorAndSelection_1_0_0.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>To help in the implementation of the different facilities offered by
Keyple to process smart cards, a set of examples is present in the
project repository
&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/example/generic/standalone" target="_blank" rel="noopener">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> examples&lt;/a>&lt;/p>
&lt;p>Nevertheless, you will find below a brief description of them:&lt;/p>
&lt;h3 id="explicit-selection">Explicit Selection&lt;/h3>
&lt;p>Shows the use of Keyple to make a card selection without observing the
reader, based on testing the presence of the card by the application.&lt;/p>
&lt;p>&lt;a href="https://github.com/eclipse-keyple/keyple-java/blob/master/java/example/generic/standalone/src/main/java/org/eclipse/keyple/example/generic/centralized/UseCase1_ExplicitSelectionAid" target="_blank" rel="noopener">see the code&lt;/a>&lt;/p>
&lt;h3 id="default-selection">Default Selection&lt;/h3>
&lt;p>Shows the use of Keyple to make a card selection with observation of the
reader. A default selection is prepared, the presentation of a card
triggers the notification of a reader event to the application.&lt;/p>
&lt;p>&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/example/generic/standalone/src/main/java/org/eclipse/keyple/example/generic/centralized/UseCase2_DefaultSelectionNotification" target="_blank" rel="noopener">see the code&lt;/a>&lt;/p>
&lt;h3 id="sequential-multiple-selection">Sequential Multiple Selection&lt;/h3>
&lt;p>Executes successively several independent selection operations with the
use of the ISO &amp;lsquo;NEXT&amp;rsquo; navigation flag.&lt;/p>
&lt;p>&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/example/generic/standalone/src/main/java/org/eclipse/keyple/example/generic/centralized/UseCase3_SequentialMultiSelection" target="_blank" rel="noopener">see the code&lt;/a>&lt;/p>
&lt;p>Illustrates the case of a card exploration with maintenance of the physical channel open.&lt;/p>
&lt;h3 id="grouped-multiple-selection">Grouped Multiple Selection&lt;/h3>
&lt;p>Executes a multiple selection with logical channel closure between each
selection.&lt;/p>
&lt;p>Allows the exploration of the applications of a card in a single
operation but without selection at the end.&lt;/p>
&lt;p>&lt;a href="https://github.com/eclipse-keyple/keyple-java/blob/master/java/example/generic/standalone/src/main/java/org/eclipse/keyple/example/generic/centralized/UseCase4_GroupedMultiSelection" target="_blank" rel="noopener">see the code&lt;/a>&lt;/p>
&lt;h3 id="demo-card-protocol-detection">Demo Card Protocol Detection&lt;/h3>
&lt;p>Demonstrates the use of Keyple in a context where several card
technologies are likely to be processed by the application.&lt;/p>
&lt;p>&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/example/generic/standalone/src/main/java/org/eclipse/keyple/example/generic/centralized/Demo_CardProtocolDetection" target="_blank" rel="noopener">see the code&lt;/a>&lt;/p>
&lt;h3 id="demo-observable-reader-notification">Demo Observable Reader Notification&lt;/h3>
&lt;p>Demonstrates the use of Keyple to implement the observation of a plugin
and its readers. Readers are dynamically created and an observer is
assigned to them.&lt;/p>
&lt;p>&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/example/generic/standalone/src/main/java/org/eclipse/keyple/example/generic/centralized/Demo_ObservableReaderNotification" target="_blank" rel="noopener">see the code&lt;/a>&lt;/p>
&lt;br>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>The artifact &lt;strong>Keyple Core&lt;/strong> and how to integrate it into your
application is available here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/components-java-1.0/core/">Keyple Core Java component&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://keyple.org/archives/components-cpp-0.9/core/">Keyple Core C++ component&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Distributed application</title><link>https://keyple.org/archives/docs-1.0/developer-guide/distributed-application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/developer-guide/distributed-application/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>&lt;strong>Keyple provides the &amp;ldquo;Keyple Distributed&amp;rdquo; solution which allows a terminal to communicate with a smart card reader available in another terminal&lt;/strong>.&lt;/p>
&lt;p>In this way, you can manage transactions within a distributed architecture.&lt;/p>
&lt;p>The diagram below shows the role of the &lt;strong>Keyple Distributed&lt;/strong> components in the software layers used in a distributed architecture :&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/distributed-application/component/Distributed_Component_Overview.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;br>
&lt;h2 id="how-to-use-it-">How to use it ?&lt;/h2>
&lt;ol>
&lt;li>In pre-requisite, read page &lt;a href="./archives/docs-1.0/developer-guide/standalone-application/">Standalone application&lt;/a> to understand the main concepts of Keyple in a standalone application.&lt;/li>
&lt;li>Read chapter &lt;a href="#concepts">Concepts&lt;/a> to understand the main terms and concepts of the &lt;strong>Keyple Distributed&lt;/strong> solution.&lt;/li>
&lt;li>Read the introduction of chapter &lt;a href="#configuration-modes">Configuration modes&lt;/a> to be informed about the different features and APIs proposed by the solution.&lt;/li>
&lt;li>Using chapter &lt;a href="#use-cases">Use cases&lt;/a>, find your use case. This will help you to determine exactly which library and API to use.&lt;/li>
&lt;li>Using chapter &lt;a href="#download">Download&lt;/a>, import into your project the libraries specified by your use case.&lt;/li>
&lt;li>Using chapter &lt;a href="#network-configuration">Network configuration&lt;/a>, implement the transport layer adapted to your network configuration.&lt;/li>
&lt;li>Implement your ticketing services as specified in the associated use case.&lt;/li>
&lt;/ol>
&lt;br>
&lt;h2 id="concepts">Concepts&lt;/h2>
&lt;p>Here are the main concepts to keep in mind before continuing to read this user guide :&lt;/p>
&lt;div id="concepts-table-1">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Concept&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Remote Lib&lt;/strong>&lt;/td>
&lt;td>This is the library &lt;code>keyple-java-distributed-remote&lt;/code>.&lt;br>It must be imported and used by the application installed on the terminal not having local access to the smart card reader and that wishes to control the reader remotely.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Local Lib&lt;/strong>&lt;/td>
&lt;td>This is the library &lt;code>keyple-java-distributed-local&lt;/code>.&lt;br>It must be imported and used by the application installed on the terminal having local access to the smart card reader but wishes to delegate all or part of the ticketing processing to a remote application.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Network Lib&lt;/strong>&lt;/td>
&lt;td>This is the library &lt;code>keyple-java-distributed-network&lt;/code>.&lt;br>This library is &lt;strong>implicitly&lt;/strong> imported by &lt;strong>Remote Lib&lt;/strong> and &lt;strong>Local Lib&lt;/strong> because it contains common network elements.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Remote Plugin&lt;/strong>&lt;/td>
&lt;td>Part of the &lt;strong>Remote Lib&lt;/strong>, this is a Keyple plugin which provides only &lt;strong>Remote Readers&lt;/strong> to the application. It manages data exchanges with the &lt;strong>Local Service&lt;/strong>. This plugin must be registered to the smart card service like any Keyple plugin.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Remote Reader&lt;/strong>&lt;/td>
&lt;td>Part of the &lt;strong>Remote Plugin&lt;/strong>, this is a Keyple reader which has some specificities :&lt;br>- each remote reader is connected to a local reader ;&lt;br>- any command sent by the application to a remote reader will be forwarded to the associated local reader ;&lt;br>- any event occurs on a local reader or plugin will be forwarded to the associated remote reader or plugin.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Local Service&lt;/strong>&lt;/td>
&lt;td>Part of the &lt;strong>Local Lib&lt;/strong>, this service ensures data exchange between the &lt;strong>Remote Plugin&lt;/strong> and local plugins and readers. It must be initialized and started by the host application.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Factory&lt;/strong>&lt;/td>
&lt;td>&lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> each have a specific factory class to initialize them.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Utility&lt;/strong>&lt;/td>
&lt;td>&lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> each have a specific utility class to access them everywhere in the code.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Node&lt;/strong>&lt;/td>
&lt;td>&lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> each are bind to a specific internal node which is responsible for the interfacing with the &lt;strong>Network Endpoint&lt;/strong>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Network Endpoint&lt;/strong>&lt;/td>
&lt;td>At the user&amp;rsquo;s charge, this component ensures the network exchanges between the &lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> nodes.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;style>
#concepts-table-1 table th:first-of-type {
width: 130px;
}
&lt;/style>
&lt;p>The diagram below illustrates the main functional concepts through a standard use case :&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/distributed-application/component/Distributed_Component_Concepts_1.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>The second diagram below illustrates an arbitrary more complex possible use case with several hardware readers connected to different terminals.&lt;/p>
&lt;p>These could be for example a ticketing reloading service, where the business logic would be on the terminal with remote readers, with thin clients on A &amp;amp; B terminals communicating locally with the cards.&lt;/p>
&lt;p>In this use case, the &lt;strong>Keyple Distributed&lt;/strong> solution is use for card communication.&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/distributed-application/component/Distributed_Component_Concepts_2.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>Here is another example, but this time it illustrates several &lt;strong>Remote Plugin&lt;/strong> components connected to the same &lt;strong>Local Service&lt;/strong>.&lt;/p>
&lt;p>These could be for example ticketing terminals with transaction logic, which communicate locally with cards, but which do not have SAM, and which use a SAM server with hardware reader.&lt;/p>
&lt;p>In this use case, the &lt;strong>Keyple Distributed&lt;/strong> solution is use for SAM communication.&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/distributed-application/component/Distributed_Component_Concepts_3.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;br>
&lt;h2 id="configuration-modes">Configuration modes&lt;/h2>
&lt;p>The &lt;strong>Keyple Distributed&lt;/strong> solution provides &lt;strong>3&lt;/strong> different configuration modes, each one having a specific &lt;a href="#apis">API&lt;/a> designed on a &lt;strong>Client-Server&lt;/strong> model :&lt;/p>
&lt;div id="plugins-table-1">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Configuration mode&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="#reader-client-side">Reader Client Side&lt;/a>&lt;/td>
&lt;td>Allows a &lt;strong>server&lt;/strong> application to control a smart card reader available on a &lt;strong>client&lt;/strong> (e.g. PO reader).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#reader-server-side">Reader Server Side&lt;/a>&lt;/td>
&lt;td>Allows a &lt;strong>client&lt;/strong> application to control a smart card reader available on a &lt;strong>server&lt;/strong> (e.g. SAM reader).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#pool-reader-server-side">Pool Reader Server Side&lt;/a>&lt;/td>
&lt;td>Allows a &lt;strong>client&lt;/strong> application to control a &lt;strong>pool&lt;/strong> of smart cards readers available on a &lt;strong>server&lt;/strong> (e.g. HSM readers).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;style>
#plugins-table-1 table th:first-of-type {
width: 190px;
}
&lt;/style>
&lt;p>Each mode provides a different &lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> components and their associated factories and utility classes.&lt;/p>
&lt;p>Each &lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> has a default name, but it&amp;rsquo;s possible to specify a custom name during the initialization phase.&lt;/p>
&lt;p>In an application, it is thus possible to use simultaneously several configuration modes and as many instances of a configuration mode as you want, as long as the components are initialized with different names.&lt;/p>
&lt;h3 id="reader-client-side">Reader Client Side&lt;/h3>
&lt;p>This configuration mode allows a &lt;strong>server&lt;/strong> application to control a smart card reader available on a &lt;strong>client&lt;/strong> (e.g. PO reader).&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>API&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Library&lt;/strong>&lt;/td>
&lt;td>Local Lib&lt;/td>
&lt;td>Remote Lib&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Remote Plugin&lt;/strong> / &lt;strong>Local Service&lt;/strong>&lt;/td>
&lt;td>&lt;code>LocalServiceClient&lt;/code>&lt;/td>
&lt;td>&lt;code>RemotePluginServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Factory&lt;/strong>&lt;/td>
&lt;td>&lt;code>LocalServiceClientFactory&lt;/code>&lt;/td>
&lt;td>&lt;code>RemotePluginServerFactory&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Utility&lt;/strong>&lt;/td>
&lt;td>&lt;code>LocalServiceClientUtils&lt;/code>&lt;/td>
&lt;td>&lt;code>RemotePluginServerUtils&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="operating-mode">OPERATING MODE&lt;/h4>
&lt;ul>
&lt;li>Server side :
&lt;ol>
&lt;li>configure the factory by providing the network and plugin observer implementation. Please note that &lt;strong>this plugin is observable only to trigger ticketing services&lt;/strong> on the server side, but does not allow observation on the local plugin (reader insertion, etc&amp;hellip;),&lt;/li>
&lt;li>register the &lt;strong>Remote Plugin&lt;/strong> to the smart card service using the factory,&lt;/li>
&lt;li>await for events of type &lt;code>PluginEvent.READER_CONNECTED&lt;/code>,&lt;/li>
&lt;li>when an event occurs, get the specified remote reader from the &lt;strong>Remote Plugin&lt;/strong>,&lt;/li>
&lt;li>use information inside the remote reader to identify the ticketing service to execute,&lt;/li>
&lt;li>execute the specified ticketing service using the remote reader and all of its others information,&lt;/li>
&lt;li>terminate the remote ticketing service using the &lt;strong>Remote Plugin&lt;/strong> API by transmitting if needed personal information to the client.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Client side :
&lt;ol>
&lt;li>configure the factory and start the &lt;strong>Local Service&lt;/strong> by providing the network implementation,&lt;/li>
&lt;li>register at least a local plugin to the smart card service and get the local reader to connect to the server,&lt;/li>
&lt;li>execute the remote service using the &lt;strong>Local Service&lt;/strong> API by indicating the ticketing service id to execute and transmitting to the server if needed personal information or smart card content previously read.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h4 id="illustration">ILLUSTRATION&lt;/h4>
&lt;p>The following sequence diagram shows the capabilities of the plugin through an arbitrary example that illustrates :&lt;/p>
&lt;ul>
&lt;li>the initialization phase of the local and remote components ;&lt;/li>
&lt;li>the registration of the local plugin and observable reader ;&lt;/li>
&lt;li>the selection phase of an observable reader carried out directly by the client ;&lt;/li>
&lt;li>the sending of the selection result and additional information to the server to remotely perform a specific ticketing service (materialization, validation, etc&amp;hellip;) ;&lt;/li>
&lt;li>the reception by the server of the transmitted data ;&lt;/li>
&lt;li>the execution of the remote ticketing service ;&lt;/li>
&lt;li>the server subscription to observable reader events ;&lt;/li>
&lt;li>the sending of information to the client at the end of processing.&lt;/li>
&lt;/ul>
&lt;p>Note that the network layer is deliberately hide in this diagram. Its implementation is described in the &lt;a href="#network-configuration">Network configuration&lt;/a> chapter.&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/distributed-application/sequence/Distributed_Sequence_ReaderClientSide_API.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;h3 id="reader-server-side">Reader Server Side&lt;/h3>
&lt;div class="alert alert-warning">
&lt;div>
This configuration mode will only be available from version &lt;strong>1.1&lt;/strong> onwards.
&lt;/div>
&lt;/div>
&lt;p>This configuration mode allows a &lt;strong>client&lt;/strong> application to control a smart card reader available on a &lt;strong>server&lt;/strong> (e.g. SAM reader).&lt;/p>
&lt;p>It also allows to observe the plugin events (such as reader connection, etc&amp;hellip;) if desired.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>API&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Library&lt;/strong>&lt;/td>
&lt;td>Remote Lib&lt;/td>
&lt;td>Local Lib&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Remote Plugin&lt;/strong> / &lt;strong>Local Service&lt;/strong>&lt;/td>
&lt;td>&lt;code>RemotePluginClient&lt;/code> or&lt;br>&lt;code>ObservableRemotePluginClient&lt;/code>&lt;/td>
&lt;td>&lt;code>LocalServiceServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Factory&lt;/strong>&lt;/td>
&lt;td>&lt;code>RemotePluginClientFactory&lt;/code>&lt;/td>
&lt;td>&lt;code>LocalServiceServerFactory&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Utility&lt;/strong>&lt;/td>
&lt;td>&lt;code>RemotePluginClientUtils&lt;/code>&lt;/td>
&lt;td>&lt;code>LocalServiceServerUtils&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="operating-mode-1">OPERATING MODE&lt;/h4>
&lt;ul>
&lt;li>Server side :
&lt;ol>
&lt;li>configure the factory and start the &lt;strong>Local Service&lt;/strong> by providing the network implementation,&lt;/li>
&lt;li>register at least a local plugin to the smart card service.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Client side :
&lt;ol>
&lt;li>configure the factory by providing the network implementation,&lt;/li>
&lt;li>register the &lt;strong>Remote Plugin&lt;/strong> to the smart card service using the factory,&lt;/li>
&lt;li>use the &lt;strong>Remote Plugin&lt;/strong> and its remote readers as a local plugin (or observable plugin) with local readers.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3 id="pool-reader-server-side">Pool Reader Server Side&lt;/h3>
&lt;p>This configuration mode allows a &lt;strong>client&lt;/strong> application to control a &lt;strong>pool&lt;/strong> of smart cards readers available on a &lt;strong>server&lt;/strong> (e.g. HSM readers).&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>API&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Library&lt;/strong>&lt;/td>
&lt;td>Remote Lib&lt;/td>
&lt;td>Local Lib&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Remote Plugin&lt;/strong> / &lt;strong>Local Service&lt;/strong>&lt;/td>
&lt;td>&lt;code>PoolRemotePluginClient&lt;/code>&lt;/td>
&lt;td>&lt;code>PoolLocalServiceServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Factory&lt;/strong>&lt;/td>
&lt;td>&lt;code>PoolRemotePluginClientFactory&lt;/code>&lt;/td>
&lt;td>&lt;code>PoolLocalServiceServerFactory&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Utility&lt;/strong>&lt;/td>
&lt;td>&lt;code>PoolRemotePluginClientUtils&lt;/code>&lt;/td>
&lt;td>&lt;code>PoolLocalServiceServerUtils&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="operating-mode-2">OPERATING MODE&lt;/h4>
&lt;ul>
&lt;li>Server
&lt;ol>
&lt;li>configure the factory and start the &lt;strong>Local Service&lt;/strong> by providing the network implementation,&lt;/li>
&lt;li>register at least a local pool plugin to the smart card service.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Client
&lt;ol>
&lt;li>configure the factory by providing the network implementation,&lt;/li>
&lt;li>register the &lt;strong>Remote Plugin&lt;/strong> to the smart card service using the factory,&lt;/li>
&lt;li>use the &lt;strong>Remote Plugin&lt;/strong> and its remote readers as a local pool plugin with local readers.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="use-cases">Use cases&lt;/h2>
&lt;p>Here is a summary table of all proposed use cases. Search for the one that corresponds to your need and then look at the associated description :&lt;/p>
&lt;div id="use-cases-table-2">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Use Case&lt;/th>
&lt;th style="text-align:center">Reader type&lt;/th>
&lt;th style="text-align:center">Reader endpoint&lt;/th>
&lt;th style="text-align:center">Reader observation&lt;/th>
&lt;th style="text-align:center">Plugin observation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="#uc-1">UC 1&lt;/a>&lt;/td>
&lt;td style="text-align:center">Simple&lt;/td>
&lt;td style="text-align:center">Client&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="#uc-2">UC 2&lt;/a>&lt;/td>
&lt;td style="text-align:center">Simple&lt;/td>
&lt;td style="text-align:center">Client&lt;/td>
&lt;td style="text-align:center">&amp;#x2714;&amp;#xfe0f;&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="#uc-3">UC 3&lt;/a>&lt;/td>
&lt;td style="text-align:center">Simple&lt;/td>
&lt;td style="text-align:center">Server&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="#uc-4">UC 4&lt;/a>&lt;/td>
&lt;td style="text-align:center">Simple&lt;/td>
&lt;td style="text-align:center">Server&lt;/td>
&lt;td style="text-align:center">&amp;#x2714;&amp;#xfe0f;&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="#uc-5">UC 5&lt;/a>&lt;/td>
&lt;td style="text-align:center">Simple&lt;/td>
&lt;td style="text-align:center">Server&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&amp;#x2714;&amp;#xfe0f;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="#uc-6">UC 6&lt;/a>&lt;/td>
&lt;td style="text-align:center">Simple&lt;/td>
&lt;td style="text-align:center">Server&lt;/td>
&lt;td style="text-align:center">&amp;#x2714;&amp;#xfe0f;&lt;/td>
&lt;td style="text-align:center">&amp;#x2714;&amp;#xfe0f;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="#uc-7">UC 7&lt;/a>&lt;/td>
&lt;td style="text-align:center">Pool&lt;/td>
&lt;td style="text-align:center">Server&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;style>
#use-cases-table-2 table th:nth-of-type(6) {
width: 240px;
}
&lt;/style>
&lt;h4 id="uc-1">UC 1&lt;/h4>
&lt;p>This use case requires to use the &lt;a href="#reader-client-side">Reader Client Side&lt;/a> configuration mode.&lt;/p>
&lt;p>Use this mode if you don&amp;rsquo;t plan to observe &amp;ldquo;remotely&amp;rdquo; the events related to the local reader (smart card insertion, removal, etc&amp;hellip;).&lt;/p>
&lt;p>Please note that it is still possible to observe locally the reader on the client side if needed.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Methods to be used when initializing the factory&lt;/td>
&lt;td>&lt;code>withoutReaderObservation()&lt;/code>&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Possible readers to use&lt;/td>
&lt;td>&lt;code>Reader&lt;/code> or &lt;code>ObservableReader&lt;/code>&lt;/td>
&lt;td>&lt;code>RemoteReaderServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="uc-2">UC 2&lt;/h4>
&lt;p>This use case requires to use the &lt;a href="#reader-client-side">Reader Client Side&lt;/a> configuration mode.&lt;/p>
&lt;p>Use this mode if you plan to observe &amp;ldquo;remotely&amp;rdquo; the events related to the local reader (smart card insertion, removal, etc&amp;hellip;).&lt;/p>
&lt;p>Please note that this mode is only possible if the local reader is observable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Methods to be used when initializing the factory&lt;/td>
&lt;td>&lt;code>withReaderObservation(...)&lt;/code>&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Possible readers to use&lt;/td>
&lt;td>&lt;code>ObservableReader&lt;/code>&lt;/td>
&lt;td>&lt;code>ObservableRemoteReaderServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>To observe &amp;ldquo;remotely&amp;rdquo; the reader events, you must :&lt;/p>
&lt;ul>
&lt;li>Server
&lt;ol>
&lt;li>register at least one observer to the remote reader created during the first client call and await for reader events,&lt;/li>
&lt;li>retrieve the remote reader from the &lt;strong>Remote Plugin&lt;/strong> &lt;strong>imperatively&lt;/strong> using the reader name contained in the received event,&lt;/li>
&lt;li>execute the ticketing service associated to the event using the remote reader and all of its others information,&lt;/li>
&lt;li>terminate the remote ticketing service associated to the event using the &lt;strong>Remote Plugin&lt;/strong> API by transmitting if needed personal information to the client.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Client
&lt;ol>
&lt;li>execute a remote service first in order to connect a remote reader to the local reader and to allow the remote application to subscribe to the events of the remote reader.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h4 id="uc-3">UC 3&lt;/h4>
&lt;p>This use case requires to use the &lt;a href="#reader-server-side">Reader Server Side&lt;/a> configuration mode with the &lt;code>RemotePluginClient&lt;/code> plugin.&lt;/p>
&lt;p>Use this mode if you don&amp;rsquo;t plan to observe &amp;ldquo;remotely&amp;rdquo; the events related to the local reader (smart card insertion, removal, etc&amp;hellip;).&lt;/p>
&lt;p>Please note that it is still possible to observe locally the reader on the server side if needed.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Methods to be used when initializing the factory&lt;/td>
&lt;td>&lt;code>withoutPluginObservation()&lt;/code>&lt;br>&lt;code>withoutReaderObservation()&lt;/code>&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Possible readers to use&lt;/td>
&lt;td>&lt;code>Reader&lt;/code>&lt;/td>
&lt;td>&lt;code>Reader&lt;/code> or &lt;code>ObservableReader&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="uc-4">UC 4&lt;/h4>
&lt;p>This use case requires to use the &lt;a href="#reader-server-side">Reader Server Side&lt;/a> configuration mode with the &lt;code>RemotePluginClient&lt;/code> plugin.&lt;/p>
&lt;p>Use this mode if you plan to observe &amp;ldquo;remotely&amp;rdquo; the events related to the local reader (smart card insertion, removal, etc&amp;hellip;).&lt;/p>
&lt;p>Please note that this mode is only possible if the local reader is observable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Methods to be used when initializing the factory&lt;/td>
&lt;td>&lt;code>withoutPluginObservation()&lt;/code>&lt;br>&lt;code>withReaderObservation()&lt;/code>&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Possible readers to use&lt;/td>
&lt;td>&lt;code>ObservableReader&lt;/code>&lt;/td>
&lt;td>&lt;code>ObservableReader&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="uc-5">UC 5&lt;/h4>
&lt;p>This use case requires to use the &lt;a href="#reader-server-side">Reader Server Side&lt;/a> configuration mode with the &lt;code>ObservableRemotePluginClient&lt;/code> plugin.&lt;/p>
&lt;p>Use this mode if you don&amp;rsquo;t plan to observe &amp;ldquo;remotely&amp;rdquo; the events related to the local reader (smart card insertion, removal, etc&amp;hellip;).&lt;/p>
&lt;p>Please note that it is still possible to observe locally the reader on the server side if needed.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Methods to be used when initializing the factory&lt;/td>
&lt;td>&lt;code>withPluginObservation()&lt;/code>&lt;br>&lt;code>withoutReaderObservation()&lt;/code>&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Possible readers to use&lt;/td>
&lt;td>&lt;code>Reader&lt;/code>&lt;/td>
&lt;td>&lt;code>Reader&lt;/code> or &lt;code>ObservableReader&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="uc-6">UC 6&lt;/h4>
&lt;p>This use case requires to use the &lt;a href="#reader-server-side">Reader Server Side&lt;/a> configuration mode with the &lt;code>ObservableRemotePluginClient&lt;/code> plugin.&lt;/p>
&lt;p>Use this mode if you plan to observe &amp;ldquo;remotely&amp;rdquo; the events related to the local reader (smart card insertion, removal, etc&amp;hellip;).&lt;/p>
&lt;p>Please note that this mode is only possible if the local reader is observable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Methods to be used when initializing the factory&lt;/td>
&lt;td>&lt;code>withPluginObservation()&lt;/code>&lt;br>&lt;code>withReaderObservation()&lt;/code>&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Possible readers to use&lt;/td>
&lt;td>&lt;code>ObservableReader&lt;/code>&lt;/td>
&lt;td>&lt;code>ObservableReader&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="uc-7">UC 7&lt;/h4>
&lt;p>This use case requires to use the &lt;a href="#pool-reader-server-side">Pool Reader Server Side&lt;/a> configuration mode.&lt;/p>
&lt;p>This unique mode proposed for this plugin does not allow to observe the local reader.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Methods to be used when initializing the factory&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Possible readers to use&lt;/td>
&lt;td>&lt;code>Reader&lt;/code>&lt;/td>
&lt;td>&lt;code>Reader&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;h2 id="network-configuration">Network configuration&lt;/h2>
&lt;p>The &lt;strong>Keyple Distributed&lt;/strong> solution &lt;strong>does not provide&lt;/strong> the network layer implementation, but it provides a set of SPIs (Service Provider Interfaces) to be implemented by the user in order to enable it to exchange data between &lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> components.&lt;/p>
&lt;h3 id="synchronous">Synchronous&lt;/h3>
&lt;p>Choose this mode if you want to implement a Client-Server &lt;strong>Synchronous&lt;/strong> communication protocol, such as standard HTTP for example.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>SPI to be implemented&lt;/td>
&lt;td>&lt;code>SyncEndpointClient&lt;/code>&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Node API&lt;/td>
&lt;td>&lt;code>SyncNodeClient&lt;/code>&lt;/td>
&lt;td>&lt;code>SyncNodeServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Methods to be used when initializing the factory&lt;/td>
&lt;td>&lt;code>withSyncNode(...)&lt;/code>&lt;/td>
&lt;td>&lt;code>withSyncNode(...)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Utility method to use to access the node&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;code>getSyncNode()&lt;/code> or&lt;br> &lt;code>getSyncNode(...)&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Here is the minimal algorithm to implement in a context with a &lt;strong>single server instance&lt;/strong> :&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/distributed-application/sequence/Distributed_Sequence_SyncNode_API.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>In a context with several server instances, a mechanism must be implemented to ensure that all messages containing information about a &lt;code>serverNodeId&lt;/code> are routed to the server associated with a &lt;code>SyncNodeServer&lt;/code> node having the &lt;code>serverNodeId&lt;/code>.&lt;/p>
&lt;h3 id="asynchronous">Asynchronous&lt;/h3>
&lt;p>Choose this mode if you want to implement a Full-Duplex &lt;strong>Asynchronous&lt;/strong> communication protocol, such as Web Sockets for example.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Client&lt;/th>
&lt;th>Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>SPI to be implemented&lt;/td>
&lt;td>&lt;code>AsyncEndpointClient&lt;/code>&lt;/td>
&lt;td>&lt;code>AsyncEndpointServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Node API&lt;/td>
&lt;td>&lt;code>AsyncNodeClient&lt;/code>&lt;/td>
&lt;td>&lt;code>AsyncNodeServer&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Methods to be used when initializing the factory&lt;/td>
&lt;td>&lt;code>withAsyncNode(...)&lt;/code>&lt;/td>
&lt;td>&lt;code>withAsyncNode(...)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Utility method to use to access the node&lt;/td>
&lt;td>&lt;code>getAsyncNode()&lt;/code> or&lt;br> &lt;code>getAsyncNode(...)&lt;/code>&lt;/td>
&lt;td>&lt;code>getAsyncNode()&lt;/code> or&lt;br> &lt;code>getAsyncNode(...)&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Here is the minimal algorithm to implement :&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/distributed-application/sequence/Distributed_Sequence_AsyncNode_API.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;h3 id="exchanged-data">Exchanged data&lt;/h3>
&lt;p>The data exchanged between &lt;strong>Remote Plugin&lt;/strong> and &lt;strong>Local Service&lt;/strong> components are contained in the DTO (Data Transfer Object) &lt;code>MessageDto&lt;/code>. It is built and processed by the plugin and &lt;strong>you don&amp;rsquo;t need to modify it&lt;/strong>.&lt;/p>
&lt;p>However, it is necessary in some contexts to access certain information such as the &lt;code>sessionId&lt;/code> in the case of asynchronous communication or the &lt;code>serverNodeId&lt;/code> in the case of synchronous communication with several server instances.&lt;/p>
&lt;br>
&lt;h2 id="apis">APIs&lt;/h2>
&lt;p>The class diagrams below shows the different APIs exposed and SPIs required by the &lt;strong>Keyple Distributed&lt;/strong> solution.&lt;/p>
&lt;p>An &lt;strong>SPI&lt;/strong> (Service Provider Interface) is an interface that must be implemented by the user.&lt;/p>
&lt;p>Here are the available APIs depending on the library imported by your project :&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th style="text-align:center">Remote Lib&lt;/th>
&lt;th style="text-align:center">Local Lib&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="#network-api">Network API&lt;/a>&lt;/td>
&lt;td style="text-align:center">&amp;#x2714;&amp;#xfe0f;&lt;/td>
&lt;td style="text-align:center">&amp;#x2714;&amp;#xfe0f;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#remote-api">Remote API&lt;/a>&lt;/td>
&lt;td style="text-align:center">&amp;#x2714;&amp;#xfe0f;&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#local-api">Local API&lt;/a>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&amp;#x2714;&amp;#xfe0f;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>The associated &lt;strong>API&lt;/strong> documentations are accessible from the page &lt;a href="https://keyple.org/archives/docs-1.0/api-reference/">API Reference&lt;/a>.&lt;/p>
&lt;h3 id="network-api">Network API&lt;/h3>
&lt;p>The associated &lt;strong>API&lt;/strong> documentation is available &lt;a href="../../api-reference/java-api/keyple-java-distributed-network/1.0.0/index.html">here&lt;/a>.&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/distributed-application/class/Distributed_Class_Network_API.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;h3 id="remote-api">Remote API&lt;/h3>
&lt;p>The associated &lt;strong>API&lt;/strong> documentation is available &lt;a href="../../api-reference/java-api/keyple-java-distributed-remote/1.0.0/index.html">here&lt;/a>.&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/distributed-application/class/Distributed_Class_Remote_API.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;h3 id="local-api">Local API&lt;/h3>
&lt;p>The associated &lt;strong>API&lt;/strong> documentation is available &lt;a href="../../api-reference/java-api/keyple-java-distributed-local/1.0.0/index.html">here&lt;/a>.&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/distributed-application/class/Distributed_Class_Local_API.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;br>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/example/generic/distributed" target="_blank" rel="noopener">Java examples&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="download">Download&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/components-java-1.0/distributed-systems/">Java components&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Calypso application</title><link>https://keyple.org/archives/docs-1.0/developer-guide/calypso-application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/developer-guide/calypso-application/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Keyple API was designed to support an extension system. On top of &lt;strong>Keyple Core&lt;/strong>, APIs can be developed to extend
Keyple features. For example, Calypso Network Association provides &lt;strong>Keyple Calypso Extension&lt;/strong>.&lt;/p>
&lt;p>The use of &lt;strong>Keyple Calypso Extension&lt;/strong> open the ability to operate commands with a Calypso Portable Object and to manage a
secure Calypso transaction seamlessly. It completely hides the details of the APDU commands that are sent to POs and SAMs, which are usually tedious operations.&lt;/p>
&lt;p>The diagram below shows the role of the &lt;strong>Keyple Calypso Extension&lt;/strong> components in the software layers for a standalone application :&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/archive-1.0/calypso-app-development/component/Local_Component_Overview.svg" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;h2 id="before-you-start">Before you start&lt;/h2>
&lt;ol>
&lt;li>In pre-requisite, have knowledge of the standard Calypso.&lt;/li>
&lt;li>Read the &lt;a href="./archives/docs-1.0/developer-guide/common-concepts/">common concepts&lt;/a> page and become familiar with the basic concepts on which Keyple is based.&lt;/li>
&lt;li>Any implementation of a Keyple application starts with the implementation of &lt;strong>Keyple Core&lt;/strong>, please study the &lt;a href="./archives/docs-1.0/developer-guide/standalone-application/">workflow&lt;/a> proposed in Standalone application guide.&lt;/li>
&lt;li>Read chapter &lt;a href="#concepts">Concepts&lt;/a> to understand the main terms and concepts of the &lt;strong>Keyple Calypso Extension&lt;/strong> API.&lt;/li>
&lt;li>Explore the &lt;a href="#keyplecalypsoapi">Keyple Calypso API&lt;/a> to discover all the possibilities offered by &lt;strong>Keyple Calypso Extension&lt;/strong>.&lt;/li>
&lt;li>Take inspiration from the &lt;a href="#examples">examples&lt;/a>.&lt;/li>
&lt;li>Follow the explanations given in the &lt;a href="https://keyple.org/archives/docs-1.0/build-your-first-app/">Build your first app&lt;/a> section to configure your environment.&lt;/li>
&lt;li>Using the &lt;a href="https://keyple.org/archives/components-java-1.0/core/">Java components&lt;/a> or &lt;a href="https://keyple.org/archives/components-cpp-0.9/core/">C++ components&lt;/a> pages, import &lt;strong>Keyple Core&lt;/strong> into your project.&lt;/li>
&lt;li>Using the &lt;a href="https://keyple.org/archives/components-java-1.0/extensions/calypso/">Java components&lt;/a> or &lt;a href="https://keyple.org/archives/components-cpp-0.9/extensions/calypso/">C++ components&lt;/a> pages, import &lt;strong>Keyple Calypso Extension&lt;/strong> into your project.&lt;/li>
&lt;li>Start playing with Keyple.&lt;/li>
&lt;/ol>
&lt;h2 id="concepts">Concepts&lt;/h2>
&lt;p>Here are the main concepts to keep in mind before continuing to read this user guide :&lt;/p>
&lt;h3 id="calypso-po">Calypso PO&lt;/h3>
&lt;p>Concentrates all known information about the Personal Object being processed. Accessible information are&lt;/p>
&lt;ul>
&lt;li>The application identification fields (revision/version, class, DF name, serial number, ATR, issuer)&lt;/li>
&lt;li>The indication of the presence of optional features (Stored Value, PIN, Rev3.2 mode, ratification management)&lt;/li>
&lt;li>The management information of the session modifications buffer&lt;/li>
&lt;li>The invalidation status&lt;/li>
&lt;li>The files, counters, SV data read or modified during the execution of the processes defined by PoTransaction&lt;/li>
&lt;/ul>
&lt;p>The Calypso PO fields are first populated from the CardSelectionResponse obtained through the PO selection process then each time a PoTransaction &amp;ldquo;process&amp;rdquo; method is called.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//Retrieve PO&amp;#39;s informations&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">atr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getAtr&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">applicationSerial&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">Number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getApplicationSerialNumber&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//SFI_EventLog = 0x08&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">efEventLog&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_EventLog&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//SFI_EnvironmentAndHolder = 0x07&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">efEnvironmentAndHolder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_EnvironmentAndHolder&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="elementaryfile">ElementaryFile&lt;/h3>
&lt;p>Object containing the description of a Calypso Elementary File. Can be retrieved from Calypso PO using its SFI.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">efEventLog&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SFI_EventLog&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//Read data content of sevent log elemenatary file&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">eventLog&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">efEventLog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getData&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getContent&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="calypso-sam">Calypso SAM&lt;/h3>
&lt;p>Concentrates all the informations we know about the SAM currently selected. Accessible informations are:&lt;/p>
&lt;ul>
&lt;li>The Sam Revision&lt;/li>
&lt;li>The Serial number&lt;/li>
&lt;li>The Platform identifier&lt;/li>
&lt;li>The Application Type&lt;/li>
&lt;li>The Application SubType&lt;/li>
&lt;li>The Software Issuer identifier&lt;/li>
&lt;li>The Software Version number&lt;/li>
&lt;li>The Software Revision number&lt;/li>
&lt;/ul>
&lt;p>Calypso SAM fields are populated by analysis of the ATR within a CardSelectionResponse obtained through the SAM selection process.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">serialNumber&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoSam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getSerialNumber&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="posecuritysettings">PoSecuritySettings&lt;/h3>
&lt;p>Concentrate the security settings involved in Calypso Secure Sessions:&lt;/p>
&lt;ul>
&lt;li>A reference to the SAM resource&lt;/li>
&lt;li>The default KIF&lt;/li>
&lt;li>The default KVC&lt;/li>
&lt;li>The default Key Record Number&lt;/li>
&lt;li>The modification mode&lt;/li>
&lt;li>The ratification mode&lt;/li>
&lt;li>The pin transmission mode&lt;/li>
&lt;li>The default Pin Ciphering Key&lt;/li>
&lt;li>The SV Get Log Read mode&lt;/li>
&lt;li>The SV Negative balance mode&lt;/li>
&lt;/ul>
&lt;p>The fields are populated with default values when the object is instantiated but can be customized to adjust the settings
to the application needs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getSessionModificationMode&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Secure session settings can be finely tuned with PoSecuritySettings and a set of enums provided by Keyple:&lt;/p>
&lt;h4 id="modification-mode">Modification mode&lt;/h4>
&lt;p>Indicates whether the secure session can be closed and reopened to manage the limitation of the PO buffer memory (session modifications buffer).&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>ModificationMode&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>&lt;code>ATOMIC&lt;/code>&lt;/strong>&lt;/td>
&lt;td>The secure session is atomic.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>MULTIPLE&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Several secure sessions will be chained (to manage the writing of large amounts of data).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PoSecuritySettingsBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">svGetLogReadMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SvSettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LogRead&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ALL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ratification-mode">Ratification mode&lt;/h4>
&lt;p>The ratification mode defines the behavior of processClosing regarding the ratification process.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>RatificationMode&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>&lt;code>CLOSE_RATIFIED&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Close session with ratification.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>CLOSE_NOT_RATIFIED&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Close session without ratification&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PoSecuritySettingsBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ratificationMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RatificationMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CLOSE_RATIFIED&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="pin-transmission-mode">Pin Transmission Mode&lt;/h4>
&lt;p>Defines the PIN transmission modes: plain or encrypted.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>PinTransmissionMode&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>&lt;code>PLAIN&lt;/code>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>ENCRYPTED&lt;/code>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="sv-log-read-mode">SV Log Read mode&lt;/h4>
&lt;p>Specifies whether only one or both SV logs (debit and load) should be read.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>LogRead&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>&lt;code>SINGLE&lt;/code>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>ALL&lt;/code>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="sv-negative-balance-mode">SV Negative balance mode&lt;/h4>
&lt;p>Specifies whether POs with a negative SV balance should be accepted.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>NegativeBalance&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>&lt;code>FORBIDDEN&lt;/code>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>AUTHORIZED&lt;/code>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="basic-operations">Basic Operations&lt;/h2>
&lt;h3 id="poselection">PoSelection&lt;/h3>
&lt;p>This service provides the means to define a selection case targeting a particular PO (in the ISO 7816-4 sense) with the possibility to collect additional information about the PO before a transaction.&lt;/p>
&lt;p>It integrates with the &lt;strong>Keyple Core Card Selection&lt;/strong> service to manage the specific features of Calypso POs:&lt;/p>
&lt;ul>
&lt;li>Sends optional &lt;em>read&lt;/em> and/or &lt;em>select&lt;/em> commands to the POs right after the initial card selection.&lt;/li>
&lt;li>Produces a CalypsoPO object from the CardSelectionResponse. The object is filled with the PO identification data from the FCI and the
possible responses to additional APDU commands executed after the selection.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Prepare a Calypso PO selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Setting of an AID based selection of a Calypso REV3 PO&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Select the first application matching the selection AID whatever the card communication&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// protocol keep the logical channel open after the selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Calypso selection: configures a PoSelection with all the desired attributes to&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// make the selection and read additional information afterwards&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">cardProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ContactlessCardCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ISO_14443_4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoClassicInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AID&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invalidatedPo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PoSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">InvalidatedPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">REJECT&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Prepare the reading order.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoClassicInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SFI_EnvironmentAndHolder&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoClassicInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">RECORD_NUMBER_1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Add the selection case to the current selection (we could have added other cases&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// here)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poSelection&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processExplicitSelections&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="samselection">SamSelection&lt;/h2>
&lt;p>This service provides the means to define a selection case targeting a Calypso SAM.&lt;/p>
&lt;p>It integrates with the &lt;strong>Keyple Core Card Selection&lt;/strong> service to manage the specific features of Calypso SAMs:&lt;/p>
&lt;ul>
&lt;li>optionally executes an unlock command during the selection process.&lt;/li>
&lt;li>provides an instance of Calypso SAM.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsService&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//Sam selection parameters&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SamSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SamSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">samRevision&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SamRevision&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">C1&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">serialNumber&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;.*&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">samSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SamSelection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samSelector&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//Sam reader retrieved from registered plugin&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardSelectionsResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samSelection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processExplicitSelections&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">hasActiveSelection&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Unable to open a logical channel for SAM!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//Cast selected card to CalypsoSam&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoSam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cardSelectionsResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getActiveSmartCard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="potransaction">PoTransaction&lt;/h3>
&lt;p>Service providing high-level API to manage transactions with a Calypso PO. The tied CalypsoPO Object is kept and updated at
each step of using this service.&lt;/p>
&lt;p>This service workflow is composed of two steps:&lt;/p>
&lt;ul>
&lt;li>Prepares the commands to be sent to the PO; several command preparations can be stacked (no communication neither with the PO nor with the SAM).&lt;/li>
&lt;li>Process the prepared commands. Performs all necessary communications with the PO and/or the SAM to carry out the previously prepared operations. CalypsoPo is updated accordingly.&lt;/li>
&lt;/ul>
&lt;p>Note:&lt;/p>
&lt;ul>
&lt;li>Regarding of commands, the presence of SAM is mandatory or not (mandatory when a &lt;em>Calypso Secure Session&lt;/em> is open).&lt;/li>
&lt;li>Pay attention to the number of commands affecting the session modifications buffer, see the &lt;em>ModificationMode&lt;/em> setting.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// CardResource allow management of specific card.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// In this example a SAM is available &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poResource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CardResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoSam&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CardResource&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CalypsoPo&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoSam&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Configure Security settings&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Both Reload and Debit SV logs are requested&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PoSecuritySettingsBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">svGetLogReadMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SvSettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LogRead&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ALL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poResource&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Read the EventLog file at record 1 within the Session Opening&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoClassicInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SFI_EventLog&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoClassicInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">RECORD_NUMBER_1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Open a secure session (DEBIT level) and execute the prepared command&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processOpening&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SessionSetting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SESSION_LVL_DEBIT&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get and display the EventLog data&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">efEventLog&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoClassicInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SFI_EventLog&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Example of data parsing&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">eventLog&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">efEventLog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getData&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getContent&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Prepare a SV Debit (this command could also have been placed before processOpening&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// since it is not followed by any other command)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareSvGet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SvSettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Operation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">DEBIT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SvSettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Action&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">DO&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Execute the prepared command&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processPoCommands&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//Get updated sv balance&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">svBalance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getSvBalance&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//Get the updated SV last transaction number&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">svLastTNum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getSvLastTNum&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="secure-session-access-level">Secure Session Access level&lt;/h4>
&lt;p>PoTransaction.processOpening() allows to open a Calypso Secure Session. If commands have been prepared previously, they will be executed.&lt;/p>
&lt;p>Keyple provides an enums to easily configure the Secure Session AccessLevel:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>AccessLevel&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>&lt;code>SESSION_LVL_PERSO&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Session Access Level used for personalization purposes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>SESSION_LVL_LOAD&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Session Access Level used for reloading purposes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>SESSION_LVL_DEBIT&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Session Access Level used for validating and debiting purposes.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="transaction-flow-and-calypso-secure-session-management">Transaction flow and Calypso Secure Session management&lt;/h4>
&lt;p>PoTransaction allows you to process a Calypso Secure session in different ways. These are difficult to describe
all in detail but here is an example from which other variants can be obtained.&lt;/p>
&lt;p>A typical Calypso PO transaction flow, for example for ticket validation, could be :&lt;/p>
&lt;ul>
&lt;li>Execute the selection of a Calypso PO and retrieves the contents of the environment file at the same time.&lt;/li>
&lt;li>Open a secure session and get the contract list&lt;/li>
&lt;li>Get the contract and associated counter&lt;/li>
&lt;li>Decrease the counter, append a new event log&lt;/li>
&lt;li>Close the secure session&lt;/li>
&lt;/ul>
&lt;p>Translated into Keyple Calypso operations, the entire transaction would include the following steps (simplified syntax):&lt;/p>
&lt;ul>
&lt;li>&lt;code>poSelection = new PoSelection(CARD_IAD)&lt;/code>&lt;/li>
&lt;li>&lt;code>poSelection.prepareReadRecordFile(ENVIRONMENT_SFI)&lt;/code>&lt;/li>
&lt;li>process the poSelection (either explicitly or by default, see the &lt;a href="./archives/docs-1.0/developer-guide/standalone-application/">standalone application&lt;/a>) guide&lt;/li>
&lt;li>retrieve CalypsoPo, check its content (environment data)&lt;/li>
&lt;li>&lt;code>poTransaction = new PoTransaction(calypsoPo)&lt;/code>&lt;/li>
&lt;li>&lt;code>poTransaction.prepareReadRecordFile(CONTRACT_LIST_SFI)&lt;/code>&lt;/li>
&lt;li>&lt;code>poTransaction.processOpening(DEBIT)&lt;/code>&lt;/li>
&lt;li>check CalypsoPo content (contract list), decide which contract/counter to read&lt;/li>
&lt;li>&lt;code>poTransaction.prepareReadRecordFile(CONTRACT_n)&lt;/code>&lt;/li>
&lt;li>&lt;code>poTransaction.prepareReadRecordFile(COUNTER_n)&lt;/code>&lt;/li>
&lt;li>&lt;code>poTransaction.processPoCommands()&lt;/code>&lt;/li>
&lt;li>check CalypsoPo content (contract/counter), decide action (decrease counter, append event log)&lt;/li>
&lt;li>&lt;code>poTransaction.prepareDecrease(COUNTER_n, X)&lt;/code>&lt;/li>
&lt;li>&lt;code>poTransaction.prepareAppendRecord(EVENT, event_data&lt;/code>&lt;/li>
&lt;li>&lt;code>poTransaction.prepareReleaseChannel()&lt;/code>&lt;/li>
&lt;li>&lt;code>poTransaction.processClosing()&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>Detailed use case examples can be seen here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/example/calypso/src/main/java/org/eclipse/keyple/example/calypso" target="_blank" rel="noopener">PC&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/eclipse-keyple/keyple-java/tree/master/java/example/generic/android" target="_blank" rel="noopener">Android&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Create a plugin</title><link>https://keyple.org/archives/docs-1.0/developer-guide/create-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/developer-guide/create-plugin/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
Coming soon
&lt;/div>
&lt;/div></description></item><item><title>Create an extension</title><link>https://keyple.org/archives/docs-1.0/developer-guide/create-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/developer-guide/create-extension/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
Coming soon
&lt;/div>
&lt;/div></description></item><item><title>Upgrade from an earlier version of Keyple</title><link>https://keyple.org/archives/docs-1.0/developer-guide/upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/developer-guide/upgrade/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot. For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;p>This guide is intended to help a user of a previous version of Keyple Java to upgrade his application to a new version of the library.&lt;/p>
&lt;p>Upgrade from:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#upgrade-from-090-to-100">0.9.0 to 1.0.0&lt;/a>&lt;/li>
&lt;li>&lt;a href="#upgrade-from-081-to-090">0.8.1 to 0.9.0&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Note: here we describe the evolutions in broad outline, for the details of the APIs, the reader is invited to consult
the &lt;a href="https://keyple.org/archives/docs-1.0/api-reference/">API reference&lt;/a> section.&lt;/p>
&lt;br>
&lt;h2 id="upgrade-from-090-to-100">Upgrade from 0.9.0 to 1.0.0&lt;/h2>
&lt;h3 id="whats-changed">What&amp;rsquo;s changed?&lt;/h3>
&lt;p>Compared to version 0.9, the goal of Keyple 1.0 is mainly to fix bugs,
add features to make Keyple more robust and rename/reorganize classes to make it easier to learn.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#class-renaming">Renamings&lt;/a>&lt;/li>
&lt;li>&lt;a href="#internal-exception-handling">Internal exception handling&lt;/a>&lt;/li>
&lt;li>&lt;a href="#pcsc-plugin">PC/SC plugin&lt;/a>&lt;/li>
&lt;li>&lt;a href="#keyple-distributed">Keyple Distributed&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="class-renaming">Class renaming&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Module&lt;/th>
&lt;th>Old name (0.9.0)&lt;/th>
&lt;th>New name (1.0.0)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Keyple Core&lt;/td>
&lt;td>SeProxyService&lt;/td>
&lt;td>SmartCardService&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Keyple Core&lt;/td>
&lt;td>ReaderPlugin&lt;/td>
&lt;td>Plugin&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Keyple Core&lt;/td>
&lt;td>SeReader&lt;/td>
&lt;td>Reader&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Keyple Core&lt;/td>
&lt;td>ReaderPoolPlugin&lt;/td>
&lt;td>PoolPlugin&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Keyple Core&lt;/td>
&lt;td>SeSelection&lt;/td>
&lt;td>CardSelectionService&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Keyple Core&lt;/td>
&lt;td>SeSelector&lt;/td>
&lt;td>CardSelector&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Keyple Core&lt;/td>
&lt;td>AbstractMatchingSe&lt;/td>
&lt;td>AbstractSmartCard&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Keyple Calypso&lt;/td>
&lt;td>PoSelectionRequest&lt;/td>
&lt;td>PoSelection&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Keyple Calypso&lt;/td>
&lt;td>SamSelectionRequest&lt;/td>
&lt;td>SamSelection&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="internal-exception-handling">Internal exception handling&lt;/h4>
&lt;p>New possibilities have been added in the management of observable objects (&lt;em>Plugin&lt;/em> and &lt;em>Reader&lt;/em>).&lt;/p>
&lt;p>If the Plugin or Reader is observable, it is now necessary to define exception handlers that will be called by the internal layers of Keyple in the case of an exception raised by an observation process.&lt;/p>
&lt;p>Two new interfaces have been added to the &lt;em>event&lt;/em> package to allow applications via the factories of the concerned plugins to define the method that will be called when needed:&lt;/p>
&lt;ul>
&lt;li>&lt;code>PluginObservationExceptionHandler&lt;/code>&lt;/li>
&lt;li>&lt;code>ReaderObservationExceptionHandler&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>These handlers are usually provided by the application via the constructor of the plugin&amp;rsquo;s factory.&lt;/p>
&lt;h4 id="pcsc-plugin">PC/SC plugin&lt;/h4>
&lt;p>The generic parameterization interface for plugins and readers has been removed in favor of methods specific to each plugin.&lt;/p>
&lt;p>In the case of the PC/SC plugin, the following methods have appeared:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>PcscPlugin&lt;/td>
&lt;td>&lt;code>setReaderNameFilter&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PcscPlugin&lt;/td>
&lt;td>&lt;code>setProtocolIdentificationRule&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PcscReader&lt;/td>
&lt;td>&lt;code>setSharingMode&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PcscReader&lt;/td>
&lt;td>&lt;code>setContactless&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PcscReader&lt;/td>
&lt;td>&lt;code>setIsoProtocol&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PcscReader&lt;/td>
&lt;td>&lt;code>setDisconnectionMode&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="keyple-distributed">Keyple Distributed&lt;/h4>
&lt;p>The use of Keyple in a remote context has been extensively reviewed and its description is beyond the scope of this guide. Please refer to the &lt;a href="./archives/docs-1.0/developer-guide/distributed-application/">distributed application&lt;/a> section.&lt;/p>
&lt;hr>
&lt;h2 id="upgrade-from-081-to-090">Upgrade from 0.8.1 to 0.9.0&lt;/h2>
&lt;h3 id="whats-changed-1">What&amp;rsquo;s changed?&lt;/h3>
&lt;p>From a user API point of view, the changes relate to the following topics:
From a user API point of view, the changes relate to the following topics:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#plugin-registration-in-the-seproxyservice">plugin registration in the SeProxyService&lt;/a>&lt;/li>
&lt;li>&lt;a href="#preparation-of-selection-cases">preparation of selection cases&lt;/a>&lt;/li>
&lt;li>&lt;a href="#retrieving-selection-results">retrieving selection results&lt;/a>&lt;/li>
&lt;li>&lt;a href="#definition-of-the-security-settings-of-the-transaction">definition of the security settings of the transaction&lt;/a>&lt;/li>
&lt;li>&lt;a href="#creation-of-the-potransaction-object">creation of the PoTransaction object&lt;/a>&lt;/li>
&lt;li>&lt;a href="#transaction-commands-preparation">transaction commands preparation&lt;/a>&lt;/li>
&lt;li>&lt;a href="#transaction-commands-processing">transaction commands processing&lt;/a>&lt;/li>
&lt;li>&lt;a href="#retrieving-data-read-from-pos">retrieving data read from POs&lt;/a>&lt;/li>
&lt;li>&lt;a href="#error-handling">error handling&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="plugin-registration-in-the-seproxyservice">Plugin registration in the SeProxyService&lt;/h3>
&lt;p>The &lt;code>registerPlugin&lt;/code> method of the &lt;code>SeProxyService&lt;/code> class now returns the reference of the registered plugin.&lt;/p>
&lt;p>This makes it possible, for example, to perform a reader setup in an application such as this one:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create a PcscPlugin and register it into the SeProxyService&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ReaderPlugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pcscPlugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">seProxyService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">registerPlugin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PcscPluginFactory&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Get the PO reader from the plugin&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SeReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pcscPlugin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ASK LoGO 0&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="preparation-of-selection-cases">Preparation of selection cases&lt;/h3>
&lt;p>The &lt;code>AidSelector&lt;/code>, &lt;code>Selector&lt;/code> and &lt;code>PoSelector&lt;/code> classes now follow the Fluent Builder pattern for better handling of optional parameters.&lt;/p>
&lt;p>The construction of an &lt;code>AidSelector&lt;/code> is as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">AidSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">appAidSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">fileControlInformation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">FileControlInformation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">FCI&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">fileOccurrence&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">FileOccurrence&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">FIRST&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>fileControlInformation&lt;/code> and &lt;code>fileOccurrence&lt;/code> fields are optional (shown here with their default values), so a simple version can be :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">AidSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">aidSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AidSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">aidToSelect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoClassicInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AID&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The construction of a &lt;code>SeSelector&lt;/code> is as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">seSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SeSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">seProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PROTOCOL_ISO14443_4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">appAidSelector&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>PoSelector&lt;/code> adds the possibility to specify that an invalidated PO should be processed&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">seSelector&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SeSelector&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">seProtocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SeCommonProtocols&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PROTOCOL_ISO14443_4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">aidSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">appAidSelector&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invalidatedPo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InvalidatedPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ACCEPT&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The management of PO commands to be performed after the selection step (when it has been successful) is handled by the methods of the &lt;code>PoSelectionRequest&lt;/code> class:&lt;/p>
&lt;ul>
&lt;li>preparing to read files has been simplified and is done using the unique following method:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sfi&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">recordNumber&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>preparing to select files is done using the following method:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareSelectFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lid&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareSelectFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">short&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lid&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that from now the &amp;ldquo;prepare&amp;rdquo; methods no longer return indexes, the data will be placed in the CalypsoPo object.&lt;/p>
&lt;h3 id="retrieving-selection-results">Retrieving selection results&lt;/h3>
&lt;p>The &lt;code>MatchingSelection&lt;/code> class no longer exists.
In the class &lt;code>SelectionsResult&lt;/code> (see &lt;code>processDefaultSelection/processExplicitSelection&lt;/code>):&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>getActiveSelection&lt;/code> is replaced by &lt;code>getActiveMatchingSe&lt;/code> which returns an &lt;code>AbstractMatchingSe&lt;/code> object (the still existing &lt;code>hasActiveSelection&lt;/code> method must be used before)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>getMatchingSelection&lt;/code> is replaced by &lt;code>getMatchingSe&lt;/code> which returns an &lt;code>AbstractMatchingSe&lt;/code> object (may be null if the index provided does not correspond to a successful selection case)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>getMatchingSelections&lt;/code> now returns a Map containing a list of associated &lt;code>AbstractMatchingSe&lt;/code> with the selection index that produced it (&lt;code>Map&amp;lt;Integer, AbstractMatchingSe&amp;gt;&lt;/code>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>a new &lt;code>hasSelectionMatched&lt;/code> method indicates whether the selection index provided corresponds to a successful selection case&lt;/p>
&lt;/li>
&lt;li>
&lt;p>a new &lt;code>getActiveSelectionIndex&lt;/code> method returns the index of the active selection (the still existing &lt;code>hasActiveSelection&lt;/code> method must be used before)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="definition-of-the-security-settings-of-the-transaction">Definition of the security settings of the transaction&lt;/h3>
&lt;p>These parameters are defined via the &lt;code>PoSecuritySettings&lt;/code> class, whose construction now follows the Fluent Builder pattern.&lt;/p>
&lt;p>All parameters are optional except the &lt;code>SamResource&lt;/code>.&lt;/p>
&lt;p>Here is an example of a complete &lt;code>PoSecuritySettings&lt;/code> build:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoSecuritySettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PoSecuritySettingsBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">samResource&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sessionDefaultKif&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SESSION_LVL_PERSO&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DEFAULT_KIF_PERSO&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sessionDefaultKif&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SESSION_LVL_LOAD&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DEFAULT_KIF_LOAD&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sessionDefaultKif&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SESSION_LVL_DEBIT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DEFAULT_KIF_DEBIT&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sessionDefaultKeyRecordNumber&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SESSION_LVL_PERSO&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DEFAULT_KEY_RECORD_NUMBER_PERSO&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sessionDefaultKeyRecordNumber&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SESSION_LVL_LOAD&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DEFAULT_KEY_RECORD_NUMBER_LOAD&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sessionDefaultKeyRecordNumber&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AccessLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SESSION_LVL_DEBIT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DEFAULT_KEY_RECORD_NUMBER_DEBIT&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sessionModificationMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ModificationMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ATOMIC&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ratificationMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RatificationMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CLOSE_RATIFIED&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sessionAuthorizedKvcList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">authKvcs&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="creation-of-the-potransaction-object">Creation of the PoTransaction object&lt;/h3>
&lt;p>Since PoSecuritySettings now integrates SamResource, the construction of PoTransaction has evolved slightly.&lt;/p>
&lt;p>Here is an example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">PoTransaction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">poReader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">poSecuritySettings&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="transaction-commands-preparation">Transaction commands preparation&lt;/h3>
&lt;p>Just as with the &amp;ldquo;prepare&amp;rdquo; commands used for selection, the &amp;ldquo;prepare&amp;rdquo; commands used for transactions no longer return indexes.&lt;/p>
&lt;p>The available commands in version 0.9 are:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareSelectFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SelectFileControl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">control&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareSelectFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">short&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lid&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareSelectFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lid&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sfi&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">recordNumber&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sfi&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">firstRecordNumber&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numberOfRecords&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">recordSize&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareReadCounterFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sfi&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">countersNumber&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareUpdateRecord&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sfi&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">recordNumber&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">recordData&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareWriteRecord&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sfi&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">recordNumber&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">recordData&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareAppendRecord&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sfi&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">recordData&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareIncreaseCounter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sfi&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">counterNumber&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">incValue&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">prepareDecreaseCounter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sfi&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">counterNumber&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">decValue&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="transaction-commands-processing">Transaction commands processing&lt;/h3>
&lt;p>The &amp;ldquo;process&amp;rdquo; commands have also been revised and simplified.&lt;/p>
&lt;p>They all return &lt;code>void&lt;/code>.&lt;/p>
&lt;p>In case of failure a exception is raised (see below).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processOpening&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PoTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SessionSetting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AccessLevel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">accessLevel&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>ModificationMode&lt;/code> is no longer required since it is integrated in the &lt;code>PoSecuritySettings&lt;/code>.&lt;/p>
&lt;p>Parameters previously used to specify that a file is read at login are removed.&lt;/p>
&lt;p>Instead, the first prepareReadFile command will be automatically taken into account.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processPoCommands&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processPoCommandsInSession&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processCancel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ChannelControl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">channelControl&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processClosing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ChannelControl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">channelControl&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="retrieving-data-read-from-pos">Retrieving data read from POs&lt;/h3>
&lt;p>This is a major evolution of the Keyple API. Previously, data read from Calyspo POs were retrieved by applications using &amp;ldquo;parser&amp;rdquo; methods.&lt;/p>
&lt;p>With Keyple API 0.9, Calypso PO data is made available in the CalypsoPo object obtained during selection and enriched all along the operations performed with PoTransaction.&lt;/p>
&lt;p>The public getter methods of CalypsoPo are:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getDfName&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getDfNameBytes&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getApplicationSerialNumber&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getApplicationSerialNumberBytes&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getAtr&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getStartupInfo&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PoRevision&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getRevision&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getSessionModification&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getApplicationType&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getApplicationSubtype&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getPlatform&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getSoftwareIssuer&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getSoftwareVersion&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getSoftwareRevision&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isDeselectRatificationSupported&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isConfidentialSessionModeSupported&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isPublicAuthenticationSupported&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isPinFeatureAvailable&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isSvFeatureAvailable&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isDfInvalidated&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isDfRatified&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DirectoryHeader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getDirectoryHeader&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sfi&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getFileByLid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">short&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lid&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Byte&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getAllFiles&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Four new classes &lt;code>DirectoryHeader&lt;/code>, &lt;code>ElementaryFile&lt;/code>, &lt;code>FileHeader&lt;/code> and &lt;code>FileData&lt;/code> have been added.&lt;/p>
&lt;h5 id="directoryheader">DirectoryHeader&lt;/h5>
&lt;p>The public getters for this class are:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">short&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getLid&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getAccessConditions&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getKeyIndexes&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getDfStatus&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getKif&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AccessLevel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">level&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getKvc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AccessLevel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">level&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">toString&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="elementaryfile">ElementaryFile&lt;/h5>
&lt;p>The public getters for this class are:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getSfi&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FileHeader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getHeader&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FileData&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getData&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">toString&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="fileheader">FileHeader&lt;/h5>
&lt;p>The public getters for this class are:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">short&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getLid&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getRecordsNumber&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getRecordSize&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FileType&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getType&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getDfStatus&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isShared&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Short&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getSharedReference&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getAccessConditions&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getKeyIndexes&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">toString&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="filedata">FileData&lt;/h5>
&lt;p>The public getters for this class are:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getContent&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getContent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numRecord&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getContent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numRecord&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataOffset&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataLength&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SortedMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getAllRecordsContent&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getContentAsCounterValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numCounter&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SortedMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getAllCountersValue&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">toString&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So, for example to extract the contents of contract files present in the PO, the code might look like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/* Read all 4 contracts command, record size set to 29 */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prepareReadRecordFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoClassicInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SFI_Contracts&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CalypsoClassicInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">RECORD_NUMBER_1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">29&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/* proceed with the sending of commands, don&amp;#39;t close the channel */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">poTransaction&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processPoCommandsInSession&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ElementaryFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">efContracts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calypsoPo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getFileBySfi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CalypsoClassicInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SFI_Contracts&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SortedMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">records&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">efContracts&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getData&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getAllRecordsContent&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Entry&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">entry&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">records&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">entrySet&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Contract #{}: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">entry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ByteArrayUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toHex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">entry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getValue&lt;/span>&lt;span class="p">()));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="error-handling">Error handling&lt;/h2>
&lt;p>Since version 0.9, all Keyple exceptions are of the RuntimeException type.&lt;/p>
&lt;p>Catching exceptions is therefore now optional.&lt;/p>
&lt;p>However, it is possible to selectively catch certain exceptions in order to deal with particular cases.&lt;/p>
&lt;p>The new hierarchy of Keyple exceptions is shown &lt;a href="https://keyple.atlassian.net/projects/KEYP/issues/KEYP-154?filter=allissues&amp;amp;orderby=priority%20DESC&amp;amp;keyword=exceptions" target="_blank" rel="noopener">here&lt;/a>&lt;/p></description></item><item><title>Java API reference</title><link>https://keyple.org/archives/docs-1.0/api-reference/java-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/api-reference/java-api/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot.
For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;p>The JavaDoc for the Keyple project is available online. The documentation is split into the following parts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="./keyple-java-api-1.0.0.zip">keyple-java-api-1.0.0.zip&lt;/a>&lt;/li>
&lt;li>&lt;a href="./keyple-java-api-0.9.0.zip">keyple-java-api-0.9.0.zip&lt;/a>&lt;/li>
&lt;li>&lt;a href="./keyple-java-api-0.8.1.zip">keyple-java-api-0.8.1.zip&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>C++ API reference</title><link>https://keyple.org/archives/docs-1.0/api-reference/cpp-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/archives/docs-1.0/api-reference/cpp-api/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
Version 1.0 of the documentation is no longer actively maintained. The site that you are currently viewing is an archived snapshot.
For up-to-date documentation, see the latest version.
&lt;/div>
&lt;/div>
&lt;p>The Doxygen document for the Keyple project is available online. The documentation is split into the following parts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="./keyple-cpp-api-0.9.0.zip">keyple-cpp-api-0.9.0.zip&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Keyple Selection JSON Specification 1.0 is available!</title><link>https://keyple.org/post/2025-03-06-selection-json-specification-1-0/</link><pubDate>Thu, 06 Mar 2025 00:00:00 +0100</pubDate><guid>https://keyple.org/post/2025-03-06-selection-json-specification-1-0/</guid><description>&lt;p>Published on March 06, 2025,
this guide describes how to implement early card selection on a non-Keyple terminal before requesting the server to
continue the card transaction, as well as the JSON format of the involved data.&lt;/p>
&lt;p>For more information, please visit the &lt;a href="https://keyple.org/learn/user-guide/non-keyple-client/">user guide&lt;/a>&lt;/p></description></item><item><title>Keyple supports Calypso Prime PKI cards!</title><link>https://keyple.org/post/pki-support/</link><pubDate>Wed, 29 May 2024 00:00:00 +0100</pubDate><guid>https://keyple.org/post/pki-support/</guid><description>&lt;p>Since April, Keyple supports sessions secured by public key cryptography on Calypso Prime PKI cards. This enables
strong authentication of both the card and the data read from it, without necessarily requiring a SAM.&lt;/p>
&lt;h4 id="keypop-apis-for-pki-based-ticketing-systems">Keypop APIs for PKI-based Ticketing Systems&lt;/h4>
&lt;p>The &lt;a href="https://keypop.org/apis/calypso-layer/calypso-card-api/" target="_blank" rel="noopener">Keypop Calypso Card API&lt;/a> now includes features for
managing Public Key Infrastructure (PKI) mode, offering integrators the flexibility to define any type of chain-of-trust
model for a PKI-based ticketing system.&lt;/p>
&lt;h4 id="extensible-certificate-format-support">Extensible Certificate Format Support&lt;/h4>
&lt;p>The Keyple libraries natively support the card (CardCert) and authority (CACert) certificate formats defined in the
Calypso Prime PKI specification. Moreover, they have been designed for easy extension to support any other
certificate format, ensuring seamless integration with various PKI implementations.&lt;/p>
&lt;h4 id="modular-cryptographic-processing">Modular Cryptographic Processing&lt;/h4>
&lt;p>Like most other Keyple components, Keyple’s internal interfaces for managing cryptographic processing are designed as
separate libraries. This modular design allows for upgrades and modifications independent of Keyple-based ticketing
terminal applications.&lt;/p>
&lt;p>For asymmetric cryptographic computations (ECC/RSA), Keyple provides a
&lt;a href="./components/card-extensions/keyple-card-calypso-crypto-pki-lib/">specific library&lt;/a> using Java Runtime
Environment libraries and the open-source “Bouncy Castle” libraries. Ticketing integrators can also opt to use Keyple
Calypso Card extensions with their own cryptographic engine implementations, supporting any certificate format.&lt;/p>
&lt;p>Keyple already supports such a scheme for secure card sessions with a SAM module and is prepared to seamlessly integrate
the future OpenSAM solution.&lt;/p></description></item><item><title>Keyple goes Java 8, Android 7.0!</title><link>https://keyple.org/post/java8-android7/</link><pubDate>Mon, 06 May 2024 00:00:00 +0100</pubDate><guid>https://keyple.org/post/java8-android7/</guid><description>&lt;p>All Keyple components have been updated to set the minimum API level to &lt;strong>Java 8&lt;/strong>
and &lt;strong>Android 7.0 Nougat (API Level 24)&lt;/strong>.&lt;/p>
&lt;p>This update was necessary to resolve compatibility issues with modern code analysis and continuous integration tools.
Many cutting-edge development tools like SonarCloud no longer support older Java versions.
Keyple components were still based on Java 6, causing errors and preventing complete code analysis when integrated
with these tools.&lt;/p>
&lt;p>The decision to update the Keyple project&amp;rsquo;s libraries to Java 8 and Android 7.0 Nougat reflects the evolving landscape
of development environments.
With the diminishing presence of Java 6 and Android versions prior to 7 in the installed base,
continuing support for these older platforms is no longer warranted.&lt;/p></description></item><item><title>Keyple Card Calypso Crypto Legacy SAM Java Lib (0.5.0) is available!</title><link>https://keyple.org/post/release-2024-01-10-java/</link><pubDate>Wed, 10 Jan 2024 12:00:00 +0100</pubDate><guid>https://keyple.org/post/release-2024-01-10-java/</guid><description>&lt;p>Published on January 10, 2024, this version implements the
&lt;a href="https://keypop.org/apis/calypso-layer/calypso-legacysam-api/" target="_blank" rel="noopener">Keypop Calypso Crypto Legacy SAM Java API (0.4.0)&lt;/a>
and therefore adds support for advanced SAM unlocking mechanisms (static and dynamic modes).&lt;/p>
&lt;p>For more information, please visit the component
&lt;a href="https://keyple.org/components/card-extensions/keyple-card-calypso-crypto-legacysam-lib/">page&lt;/a>.&lt;/p></description></item><item><title>Keyple adopts the Eclipse Keypop API!</title><link>https://keyple.org/post/keypop/</link><pubDate>Tue, 28 Nov 2023 12:00:00 +0100</pubDate><guid>https://keyple.org/post/keypop/</guid><description>&lt;p>The field of compliance management for ticketing terminals has recently seen a paradigm shift with the launch of the
&lt;a href="https://keypop.org" target="_blank" rel="noopener">Eclipse Keypop&lt;/a> project.
This initiative defines a series of UML-compliant interfaces established by
the &lt;a href="https://calypsonet.org" target="_blank" rel="noopener">Calypso Networks Association&lt;/a>.&lt;/p>
&lt;p>As a result, the Keyple SDK components are upgraded to a new version, which adopts the Keypop APIs in place of the CNA
Terminal APIs.
As well as implementing these new APIs, this upgrade removes classes and methods previously marked as deprecated and
brings a number of additional improvements.
The main enhancement is the processing of Calypso cards.&lt;/p>
&lt;p>Keypop introduces new APIs for managing cryptographic components, in particular SAMs and PKI service providers.&lt;/p>
&lt;p>These innovations pave the way for new solutions, particularly in view of the forthcoming &lt;strong>Open SAM&lt;/strong>
and &lt;strong>PKI-based card transactions&lt;/strong>.&lt;/p>
&lt;p>For this purpose, the &lt;strong>Calypso Card&lt;/strong> library and the new &lt;strong>Calypso Legacy SAM&lt;/strong> library are now based on these new
Keypop APIs.
Details of changes to Keyple components are described in the CHANGELOG files at the root of each corresponding
repository and the Keyple website has been updated accordingly.&lt;/p>
&lt;p>Here is the list of libraries affected by the Keypop update:&lt;/p>
&lt;ul>
&lt;li>Core
&lt;ul>
&lt;li>&lt;a href="./components/core/keyple-service-lib/">Service&lt;/a>&lt;/li>
&lt;li>&lt;a href="./components/core/keyple-service-resource-lib/">Service Resource&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Card extension add-ons
&lt;ul>
&lt;li>&lt;a href="./components/card-extensions/keyple-card-calypso-lib/">Calypso Card&lt;/a>&lt;/li>
&lt;li>&lt;a href="./components/card-extensions/keyple-card-calypso-crypto-legacysam-lib/">Calypso Legacy SAM&lt;/a>&lt;/li>
&lt;li>&lt;a href="./components/card-extensions/keyple-card-generic-lib/">Generic&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Reader plugin add-ons
&lt;ul>
&lt;li>&lt;a href="./components/standard-reader-plugins/keyple-plugin-cardresource-lib/">Card Resource&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Distributed add-ons
&lt;ul>
&lt;li>&lt;a href="./components/distributed/keyple-distributed-local-lib/">Local&lt;/a>&lt;/li>
&lt;li>&lt;a href="./components/distributed/keyple-distributed-network-lib/">Network&lt;/a>&lt;/li>
&lt;li>&lt;a href="./components/distributed/keyple-distributed-remote-lib/">Remote&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Keyple Service Java Lib (2.3.0) is available!</title><link>https://keyple.org/post/release-2023-05-22-java/</link><pubDate>Mon, 22 May 2023 12:00:00 +0100</pubDate><guid>https://keyple.org/post/release-2023-05-22-java/</guid><description>&lt;p>Published on May 22, 2023, this minor version implements the
&lt;a href="https://terminal-api.calypsonet.org/archives/apis/calypsonet-terminal-reader-api/" target="_blank" rel="noopener">Calypsonet Terminal Reader Java API (1.3.0)&lt;/a>
and therefore introduced a new capability to export a locally processed card selection scenario to be imported and
analyzed remotely by another card selection manager.&lt;/p>
&lt;p>For this purpose, the following two methods have been added to the &lt;code>CardSelectionManager&lt;/code> interface:&lt;/p>
&lt;ul>
&lt;li>&lt;code>exportProcessedCardSelectionScenario&lt;/code>&lt;/li>
&lt;li>&lt;code>importProcessedCardSelectionScenario&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>For more information, please visit the component
&lt;a href="./components/core/keyple-service-lib/">page&lt;/a>.&lt;/p></description></item><item><title>Introducing the Keyple components unified timeline!</title><link>https://keyple.org/post/2023-05-11-website-changelog-page/</link><pubDate>Thu, 11 May 2023 12:00:00 +0100</pubDate><guid>https://keyple.org/post/2023-05-11-website-changelog-page/</guid><description>&lt;p>We are pleased to announce a new addition to the Keyple website: the &lt;a href="https://keyple.org/community/changelog/">Changelog&lt;/a> page!&lt;/p>
&lt;p>This page serves as a centralized hub, bringing a dynamic chronological overview that showcases the progress and updates
across all Keyple components repositories.&lt;/p></description></item><item><title>Keyple Plugin Card Resource Java Lib (1.0.0) is available!</title><link>https://keyple.org/post/release-2023-04-26-java/</link><pubDate>Wed, 26 Apr 2023 12:00:00 +0100</pubDate><guid>https://keyple.org/post/release-2023-04-26-java/</guid><description>&lt;p>Published on April 26, 2023, this new component is a &lt;strong>PoolPlugin&lt;/strong> to manage readers provided by the
&lt;strong>Card Resource Service&lt;/strong>.&lt;/p>
&lt;p>The main role of the plugin is to allow remote access to the &lt;strong>Card Resource Service&lt;/strong> via the &lt;strong>Keyple Distributed
Solution&lt;/strong> components.
It provides an interface for allocating and deallocating readers by profiles that are part of those configured at the
&lt;strong>Card Resource Service&lt;/strong> level.&lt;/p>
&lt;p>A typical use would be for the realization of a server providing cryptographic services through a pool of SAMs, each
inserted in a dedicated PC/SC reader.&lt;/p>
&lt;p>To realize this plugin it was necessary to make evolve the following components:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="./components/core/keyple-plugin-api/">&lt;strong>Keyple Plugin Java API&lt;/strong>&lt;/a> (2.1.0)&lt;/li>
&lt;li>&lt;a href="./components/core/keyple-service-lib/">&lt;strong>Keyple Service Java Lib&lt;/strong>&lt;/a> (2.2.0)&lt;/li>
&lt;li>&lt;a href="./components/core/keyple-service-resource-lib/">&lt;strong>Keyple Service Resource Java Lib&lt;/strong>&lt;/a> (2.1.0)&lt;/li>
&lt;/ul>
&lt;p>For more information, please visit the component
&lt;a href="https://keyple.org/components/standard-reader-plugins/keyple-plugin-cardresource-lib/">page&lt;/a>.&lt;/p></description></item><item><title>Keyple Server JSON API 1.0 User Guide is available!</title><link>https://keyple.org/post/2023-04-04-website-guide-json-api/</link><pubDate>Tue, 04 Apr 2023 14:00:00 +0100</pubDate><guid>https://keyple.org/post/2023-04-04-website-guide-json-api/</guid><description>&lt;p>Published on April 04, 2023,
this guide is specifically designed for users who are not currently using Keyple in their terminals, but wish to connect
to a Keyple server.&lt;/p>
&lt;p>This allows the development of a distributed solution in which the client reader terminal delegates the entire
management of the card transaction to the server.&lt;/p>
&lt;p>For more information, please visit the &lt;a href="https://keyple.org/learn/user-guide/non-keyple-client/">user guide&lt;/a>&lt;/p></description></item><item><title>Keyple Card Calypso Crypto Legacy SAM Java Lib (0.3.0) is available!</title><link>https://keyple.org/post/release-2023-02-27-java/</link><pubDate>Mon, 27 Feb 2023 12:00:00 +0100</pubDate><guid>https://keyple.org/post/release-2023-02-27-java/</guid><description>&lt;p>Published on February 27, 2023, this version implements the
&lt;a href="https://terminal-api.calypsonet.org/archives/apis/calypsonet-terminal-calypso-crypto-legacysam-api/" target="_blank" rel="noopener">Calypsonet Terminal Calypso Crypto Legacy SAM Java API (0.2.0)&lt;/a>
and therefore adds the counters ceilings management feature in static mode.
This allows to update remotely the key ceilings of the reloading SAMs.&lt;/p>
&lt;p>For more information, please visit the component
&lt;a href="https://keyple.org/components/card-extensions/keyple-card-calypso-crypto-legacysam-lib/">page&lt;/a>.&lt;/p></description></item><item><title>Keyple Card Calypso Crypto Legacy SAM Java Lib (0.2.0) is in Beta!</title><link>https://keyple.org/post/release-2022-12-13-java/</link><pubDate>Tue, 13 Dec 2022 12:00:00 +0100</pubDate><guid>https://keyple.org/post/release-2022-12-13-java/</guid><description>&lt;p>Published on December 13, 2022, the &lt;strong>Keyple Card Calypso Crypto Legacy SAM Java Library&lt;/strong> is an add-on to manage
Calypso® legacy SAMs (SAM-C1, HSM-C1, etc&amp;hellip;).&lt;/p>
&lt;p>For more information, please visit the component
&lt;a href="https://keyple.org/components/card-extensions/keyple-card-calypso-crypto-legacysam-lib/">page&lt;/a>.&lt;/p></description></item><item><title>2 new adopters of Eclipse Keyple®</title><link>https://keyple.org/post/2-new-adopters-cts-and-cna/</link><pubDate>Tue, 21 Dec 2021 12:00:00 +0100</pubDate><guid>https://keyple.org/post/2-new-adopters-cts-and-cna/</guid><description>&lt;p>Dear Keyple friends,&lt;/p>
&lt;p>Eclipse Keyple is pleased to welcome 2 new adopters:&lt;/p>
&lt;ul>
&lt;li>CTS
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/external-logos/03_logo_CTS_RVB.png" alt="" loading="lazy" data-zoomable width="200px" />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;li>Calypso Networks Association
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./media/external-logos/OFFICIAL-LOGO%20CNA-Black%20&amp;amp;%20Blue%20RVB.png" alt="" loading="lazy" data-zoomable width="200px" />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;/ul>
&lt;p>You are interested in being listed as an adopter of Eclipse Keyple? Follow this link: &lt;a href="https://iot.eclipse.org/adopters/" target="_blank" rel="noopener">https://iot.eclipse.org/adopters/&lt;/a>&lt;/p>
&lt;p>You would like to get in touch with other Keyple friends, or to be informed of the latest news about Keyple?&lt;br>
If you are a Keyple contributor: first subscribe to the keyple-dev mailing list, then post a message to &lt;a href="mailto:keyple-dev@eclipse.org">keyple-dev@eclipse.org&lt;/a>&lt;br>
If you are a Keyple user: first subscribe to the keyple-user mailing list, then post a message to &lt;a href="mailto:keyple-user@eclipse.org">keyple-user@eclipse.org&lt;/a>.&lt;/p>
&lt;p>Moreover, everyone is welcome to &lt;a href="./community/contributing/">contribute&lt;/a> to the Eclipse Keyple project.&lt;/p>
&lt;p>In particular there is the possibility to include inside the Eclipse Keyple project additional &lt;a href="./components/specific-reader-plugins/">specific plugins&lt;/a>.&lt;br>
The Keyple project provides also the possibility to reference &lt;a href="./external-resources/">external add-ons&lt;/a>: open source or closed add-ons like additional plugins, card extensions, specific libraries.&lt;br>
Terminal manufacturers could also reference their &lt;a href="./external-resources/">terminal solutions&lt;/a> based on Keyple.&lt;/p>
&lt;p>Eclipse Keyple team&lt;/p></description></item><item><title>6 new adopters of Eclipse Keyple®</title><link>https://keyple.org/post/6-new-adopters/</link><pubDate>Thu, 09 Dec 2021 12:00:00 +0100</pubDate><guid>https://keyple.org/post/6-new-adopters/</guid><description>&lt;p>Dear Keyple friends,&lt;/p>
&lt;p>Eclipse Keyple is pleased to welcome 6 new adopters: Bluebird, Coppernic, Flowbird, Ile-de-France Mobilités, SNCF, SopraSteria.&lt;/p>
&lt;p>You are interested in being listed as an adopter of Eclipse Keyple? Follow this link: &lt;a href="https://iot.eclipse.org/adopters/" target="_blank" rel="noopener">https://iot.eclipse.org/adopters/&lt;/a>&lt;/p>
&lt;p>You would like to get in touch with other Keyple friends, or to be informed of the latest news about Keyple?&lt;br>
If you are a Keyple contributor: first subscribe to the keyple-dev mailing list, then post a message to &lt;a href="mailto:keyple-dev@eclipse.org">keyple-dev@eclipse.org&lt;/a>&lt;br>
If you are a Keyple user: first subscribe to the keyple-user mailing list, then post a message to &lt;a href="mailto:keyple-user@eclipse.org">keyple-user@eclipse.org&lt;/a>.&lt;/p>
&lt;p>Moreover, everyone is welcome to contribute (&lt;a href="https://keyple.org/community/contributing/" target="_blank" rel="noopener">https://keyple.org/community/contributing/&lt;/a>) to the Eclipse Keyple project.&lt;/p>
&lt;p>In particular there is the possibility to include inside the Eclipse Keyple project additional specific plugins (&lt;a href="https://keyple.org/components/specific-reader-plugins/%29" target="_blank" rel="noopener">https://keyple.org/components/specific-reader-plugins/)&lt;/a>.&lt;br>
The Keyple project provides also the possibility to reference external add-ons (&lt;a href="https://keyple.org/external-resources/%29" target="_blank" rel="noopener">https://keyple.org/external-resources/)&lt;/a>: open source or closed add-ons like additional plugins, card extensions, specific libraries.&lt;br>
Terminal manufacturers could also reference their terminal solutions based on Keyple (&lt;a href="https://keyple.org/external-resources/%29" target="_blank" rel="noopener">https://keyple.org/external-resources/)&lt;/a>.&lt;/p>
&lt;p>Eclipse Keyple team&lt;/p></description></item><item><title>Release 2.0.0 of Eclipse Keyple® Java</title><link>https://keyple.org/post/release-2-0-0-java/</link><pubDate>Wed, 06 Oct 2021 12:00:00 +0100</pubDate><guid>https://keyple.org/post/release-2-0-0-java/</guid><description>&lt;p>All the components of Eclipse Keyple Java have been release in version 2.0.0:&lt;/p>
&lt;ul>
&lt;li>at the core level: the &lt;a href="https://github.com/eclipse-keyple/keyple-service-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">Keyple Service&lt;/a>, the &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-java-api/releases/tag/2.0.0" target="_blank" rel="noopener">Plugin API&lt;/a>, the &lt;a href="https://github.com/eclipse-keyple/keyple-common-java-api/releases/tag/2.0.0" target="_blank" rel="noopener">shared references&lt;/a>, the &lt;a href="https://github.com/eclipse-keyple/keyple-util-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">helper functions&lt;/a>, and the &lt;a href="https://github.com/eclipse-keyple/keyple-service-resource-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">card resource manager&lt;/a>,&lt;/li>
&lt;li>the distribution module inluding: the &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-remote-java-api/releases/tag/2.0.0" target="_blank" rel="noopener">remote API&lt;/a>, the &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-remote-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">remote lib&lt;/a>, the &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-local-java-api/releases/tag/2.0.0" target="_blank" rel="noopener">local API&lt;/a>, the &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-local-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">local lib&lt;/a>, the &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-network-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">network messaging lib&lt;/a>,&lt;/li>
&lt;li>the card extension libraries for &lt;a href="https://github.com/eclipse-keyple/keyple-card-generic-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">generic card&lt;/a>, and &lt;a href="https://github.com/eclipse-keyple/keyple-card-calypso-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">Calypso card&lt;/a>,&lt;/li>
&lt;li>the standard plugins for &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-pcsc-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">PC/SC&lt;/a>, &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-stub-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">Stub reader&lt;/a>, &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-android-nfc-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">NFC Android&lt;/a>, and &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-android-omapi-java-lib/releases/tag/2.0.0" target="_blank" rel="noopener">OMAPI Android&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>The components have no longer dependency on each other and can evolve separately.
Keyple Java follows now the version 1.0 of the &lt;a href="https://terminal-api.calypsonet.org/" target="_blank" rel="noopener">Calypso terminal API&lt;/a> defined by the &lt;a href="https://calypsonet.org/" target="_blank" rel="noopener">Calypso Networks Association&lt;/a>.&lt;/p></description></item><item><title>Release 0.9.0 C++ on the field</title><link>https://keyple.org/post/release-0-9-0-cpp/</link><pubDate>Tue, 26 Jan 2021 14:57:56 +0200</pubDate><guid>https://keyple.org/post/release-0-9-0-cpp/</guid><description>&lt;p>We are pleased to announce that the version 0.9.0 of the C++ implementation of Eclipse Keyple® was released January 26th, 2021.&lt;/p>
&lt;p>This 0.9.0 C++ Keyple implementation follows the API design for the 0.9.0 Java Keyple implementation.&lt;/p>
&lt;ul>
&lt;li>New simplifications are introduced on the Calypso API. Keyple 0.8 had a high-level API for building map commands, but the map response data needed to be parsed with a low-level API. The Calypso 0.9.0 API provided a high-level API for retrieving map response data from a map image for which the file structure could be browsed.&lt;/li>
&lt;li>The Core 0.9.0 has also made the reader observation function more reliable in order to be notified in case of card withdrawal.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://keyple.org/archives/docs-1.0/api-reference/cpp-api/">C++ API reference&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://keyple.org/archives/docs-1.0/build-your-first-app/cpp-app/">Build your first C++ application&lt;/a>&lt;/p>
&lt;p>The source of Keyple C++ is available on &lt;a href="https://github.com/eclipse-keyple/keyple-cpp" target="_blank" rel="noopener">https://github.com/eclipse-keyple/keyple-cpp&lt;/a>.
Some dedicated support is provided on keyple.org:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/api-reference/cpp-api/">the documentation of the C++ API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://keyple.org/archives/docs-1.0/build-your-first-app/cpp-app/">a guide to Build a first C++ application&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Release 1.0.0 of Eclipse Keyple® Java</title><link>https://keyple.org/post/release-1-0-0-java/</link><pubDate>Thu, 17 Dec 2020 17:24:41 +0100</pubDate><guid>https://keyple.org/post/release-1-0-0-java/</guid><description>&lt;p>The &lt;a href="https://github.com/eclipse-keyple/keyple-java/releases/tag/1.0.0" target="_blank" rel="noopener">release 1.0.0 of Eclipse Keyple® Java&lt;/a> is available.&lt;/p>
&lt;p>Most of the improvements concerns the Keyple Core:&lt;/p>
&lt;ul>
&lt;li>the new Core extension to manage &amp;ldquo;distributed architecture&amp;rdquo; and operate remote smart card readers,&lt;/li>
&lt;li>some packages &amp;amp; classes renaming to facilitate the understanding,&lt;/li>
&lt;li>the setting of smart card reader has also been simplified.
The NFC &amp;amp; OMAPI Android plugins have been optimized for all Android versions from 4.4.&lt;/li>
&lt;/ul>
&lt;p>A new &lt;a href="https://keyple.org/" target="_blank" rel="noopener">Keyple website&lt;/a> provides the documentation and guides to handle the Keyple solution.&lt;/p></description></item><item><title>Webinar Eclipse Keyple® for Developers, Thursday, October 15, 2020</title><link>https://keyple.org/post/webinar-eclipse-keyple-developers-oct15-2020/</link><pubDate>Fri, 25 Sep 2020 14:57:23 +0200</pubDate><guid>https://keyple.org/post/webinar-eclipse-keyple-developers-oct15-2020/</guid><description>&lt;h2 id="are-you-a-mobility-aggregator-a-system-integrator-an-event-manager-a-developer-or-a-multi-mobility-startup">Are you a mobility aggregator, a system integrator, an event manager, a developer or a multi-mobility startup?&lt;/h2>
&lt;p>Do you want to have easy access to a highly secure and interoperable standard, Calypso®, to reduce your costs and
accelerate your developments, to move from a black box to an open and modular solution with access to multiple
hardware platforms, to enable partnerships with multimodal transport, building facilities including parking,
tourism and events… or just discover what Eclipse Keyple® is and how it works?&lt;/p>
&lt;p>On October 15, 2020, we organized a webinar Eclipse Keyple® for Developers!&lt;/p>
&lt;p>See the whole event on video:
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/v6EKq6ZwJUc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/p>
&lt;p>
&lt;i class="fas fa-file-pdf pr-1 fa-fw">&lt;/i> Discover the &lt;a href="https://drive.google.com/file/d/1HdrThZD70bFIun8jFLYKfgozyCvX9SQg/view" target="_blank" rel="noopener">presentation&lt;/a>.&lt;/p></description></item><item><title>Release 0.9.0 Java on the field</title><link>https://keyple.org/post/release-0-9-0-java/</link><pubDate>Fri, 18 Sep 2020 14:57:56 +0200</pubDate><guid>https://keyple.org/post/release-0-9-0-java/</guid><description>&lt;p>We are pleased to announce that the version 0.9.0 of the Java implementation of Eclipse Keyple® was released September 11th, 2020.&lt;/p>
&lt;p>The main improvement on the Calypso® extension is the addition of high-level API to manage the portable object response.
Now the APDU responses of the Calypso® cards are automatically parsed to fill card images.
Currently all the components of Eclipse Keyple® Java are following the same versioning.&lt;/p>
&lt;p>From the version 1.0.0 scheduled for November 2020, the components will be defined with their own versioning in order to stabilize as possible the different APIs.&lt;/p>
&lt;p>&lt;a href="https://keyple.org/archives/docs-1.0/">Documentation&lt;/a> currently available:&lt;/p>
&lt;ul>
&lt;li>the project plan,&lt;/li>
&lt;li>the guides of the different public API,&lt;/li>
&lt;li>and a guide to manage the migration between the release 0.8.1 &amp;amp; 0.9.0.&lt;/li>
&lt;/ul></description></item><item><title>First Meet Up Eclipse Keyple®</title><link>https://keyple.org/post/first-meetup-eclipse-keyple/</link><pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate><guid>https://keyple.org/post/first-meetup-eclipse-keyple/</guid><description>&lt;p>On October 17, 2019, we organized the first Meet Up Eclipse Keyple®!
Great moments of exchanges around the first Open Source Middleware for Ticketing with Benoît Boute,
Nicolas Generali, Pierre Terree, Hicham Elbizy, Benoist Laforge, Gaël Blondelle, Camille Moulin,
Philippe Vappereau, Valentina Zajackowski. Many thanks to them for their interventions and also
to Manon Chaix, Jean-Pierre Fortune, Olivier Delcroix, Ludovic Teixeira Costa and all the participants!&lt;/p>
&lt;p>See the whole event on video:
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/4j5rkvdXU7g" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/p>
&lt;p>
&lt;i class="fas fa-file-pdf pr-1 fa-fw">&lt;/i> Discover the &lt;a href="https://drive.google.com/file/d/1GAAhW-mv-E6kxqVySv8-KSjMJ15tZBkM/view" target="_blank" rel="noopener">presentation&lt;/a>.&lt;/p>
&lt;p>
&lt;i class="fas fa-images pr-1 fa-fw">&lt;/i> Discover the &lt;a href="https://drive.google.com/drive/folders/1StRgiAxKrn0mHsP9WwIQ_bopQW-eGVb8" target="_blank" rel="noopener">photos&lt;/a>.&lt;/p></description></item><item><title>Avantronics S.A De C.V.</title><link>https://keyple.org/suppliers/avantronics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/suppliers/avantronics/</guid><description/></item><item><title>Calypso Networks Association</title><link>https://keyple.org/suppliers/cna/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/suppliers/cna/</guid><description/></item><item><title>Secretaría de Movilidad (Mexico City)</title><link>https://keyple.org/suppliers/semovi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/suppliers/semovi/</guid><description/></item><item><title>SpringCard</title><link>https://keyple.org/suppliers/springcard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/suppliers/springcard/</guid><description>&lt;br>
&lt;p>SpringCard is happy to contribute to the Keyple project by providing a plugin that makes it possible to use SpringCard
PC/SC couplers from a stock Android tablet or mobile phone.&lt;/p>
&lt;p>The plugin works&lt;/p>
&lt;ul>
&lt;li>with all SpringCard PC/SC over USB devices.&lt;/li>
&lt;/ul>
&lt;p>This includes all the SpringCard Puck family (for instance SpringCard Puck One, featuring contactless+SAM:
&lt;a href="https://www.springcard.com/en/products/puck-one%29" target="_blank" rel="noopener">https://www.springcard.com/en/products/puck-one)&lt;/a>,
SpringCard Prox&amp;rsquo;N&amp;rsquo;Roll (&lt;a href="https://www.springcard.com/en/products/proxnroll-pcsc-hsp" target="_blank" rel="noopener">https://www.springcard.com/en/products/proxnroll-pcsc-hsp&lt;/a>)
and virtually all PC/SC over USB (CCID) devices.&lt;/p>
&lt;p>The Android host must be a complete USB host (&lt;a href="https://developer.android.com/guide/topics/connectivity/usb/host%29" target="_blank" rel="noopener">https://developer.android.com/guide/topics/connectivity/usb/host)&lt;/a>.
USB on-the-go (OTG) is not enough!
Pay attention that the Android host must also be able to provide enough power to the reader (more than 250mA),
which is not the case for many tablets and mobile phones. Using a USB 3 hub with power delivery is generally the solution.&lt;/p>
&lt;ul>
&lt;li>with SpringCard PC/SC over BLE (Bluetooth Low Energy) devices.&lt;/li>
&lt;/ul>
&lt;p>First BLE PC/SC reader in SpringCard&amp;rsquo;s portfolio is SpringCard Puck Blue (&lt;a href="https://www.springcard.com/en/products/puck-blue%29" target="_blank" rel="noopener">https://www.springcard.com/en/products/puck-blue)&lt;/a>.
Other devices will be introduced in the future. The Android host must support BLE (&lt;a href="https://developer.android.com/guide/topics/connectivity/bluetooth/ble-overview%29" target="_blank" rel="noopener">https://developer.android.com/guide/topics/connectivity/bluetooth/ble-overview)&lt;/a>.&lt;/p>
&lt;p>The plugin is hosted on GitHub: &lt;a href="https://github.com/springcard/android-keyple" target="_blank" rel="noopener">https://github.com/springcard/android-keyple&lt;/a>&lt;/p>
&lt;p>It is based on SpringCard&amp;rsquo;s PC/SC-Like for Android libraries (&lt;a href="https://github.com/springcard/android-pcsclike" target="_blank" rel="noopener">https://github.com/springcard/android-pcsclike&lt;/a>)
that connects to the reader in BLE or USB using only &amp;lsquo;user-land&amp;rsquo; methods.&lt;/p></description></item><item><title>Billettique Services</title><link>https://keyple.org/testimonials/billettique-services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/testimonials/billettique-services/</guid><description/></item><item><title>Adopters &amp; Testimonials</title><link>https://keyple.org/adopters-and-testimonials/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/adopters-and-testimonials/</guid><description/></item><item><title>Keyple Plugin Android NFC Library</title><link>https://keyple.org/components/standard-reader-plugins/keyple-plugin-android-nfc-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/standard-reader-plugins/keyple-plugin-android-nfc-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Plugin Android NFC Library&lt;/strong> is an add-on to manage &lt;strong>Android NFC&lt;/strong> readers.&lt;/p>
&lt;p>Therefore, it should be used only by application developers.&lt;/p>
&lt;p>It is compatible with &lt;strong>Android 4.4 minimum&lt;/strong>.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>3.0.0&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-android-nfc-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-android-nfc-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-plugin-android-nfc-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-plugin-android-nfc-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-1" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-1-0-tab" data-toggle="tab" href="#tabs-1-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-1-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-1-1-tab" data-toggle="tab" href="#tabs-1-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-1-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-1-2-tab" data-toggle="tab" href="#tabs-1-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-1-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-1', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-1-content">&lt;div class="tab-pane fade show active"
id="tabs-1-0" role="tabpanel" aria-labelled-by="tabs-1-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-plugin-android-nfc-java-lib:3.0.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-1" role="tabpanel" aria-labelled-by="tabs-1-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-plugin-android-nfc-java-lib:3.0.0&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-2" role="tabpanel" aria-labelled-by="tabs-1-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-android-nfc-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.0.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Plugin Android OMAPI Library</title><link>https://keyple.org/components/standard-reader-plugins/keyple-plugin-android-omapi-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/standard-reader-plugins/keyple-plugin-android-omapi-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Plugin Android OMAPI Library&lt;/strong> is an add-on to manage &lt;strong>Android OMAPI&lt;/strong> readers.&lt;/p>
&lt;p>Therefore, it should be used only by application developers.&lt;/p>
&lt;p>It is compatible with &lt;strong>Android 4.4 minimum&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>OMAPI (Open Mobile Application Programming Interface)&lt;/strong> is the mechanism which enables an authorized mobile app to communicate with applets within a &lt;strong>SE&lt;/strong> in a device.
This allows the app to benefit from enhanced SE-based security services.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>2.1.0&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-android-omapi-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-android-omapi-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-plugin-android-omapi-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-plugin-android-omapi-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-1" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-1-0-tab" data-toggle="tab" href="#tabs-1-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-1-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-1-1-tab" data-toggle="tab" href="#tabs-1-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-1-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-1-2-tab" data-toggle="tab" href="#tabs-1-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-1-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-1', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-1-content">&lt;div class="tab-pane fade show active"
id="tabs-1-0" role="tabpanel" aria-labelled-by="tabs-1-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-plugin-android-omapi-java-lib:2.1.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-1" role="tabpanel" aria-labelled-by="tabs-1-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-plugin-android-omapi-java-lib:2.1.0&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-2" role="tabpanel" aria-labelled-by="tabs-1-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-android-omapi-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.1.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Card Calypso Library</title><link>https://keyple.org/components/card-extensions/keyple-card-calypso-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/card-extensions/keyple-card-calypso-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Card Calypso Library&lt;/strong> is an add-on to manage Calypso® cards.&lt;/p>
&lt;p>Therefore, it should be used only by application developers.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
For card transactions that need to be secured by cryptographic calculations using symmetrical keys (SAM or HSM) or
asymmetrical keys (PKI), &lt;strong>it is mandatory to use one of the dedicated crypto libraries&lt;/strong> (Open SAM, Legacy SAM, PKI).
At present, only the &lt;a href="./components/card-extensions/keyple-card-calypso-crypto-legacysam-lib/">Calypso Crypto Legacy SAM&lt;/a> library is available.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>3.1.7&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-card-calypso-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-card-calypso-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-card-calypso-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="./learn/user-guide/calypso-application/">User guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-card-calypso-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-3" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-3-0-tab" data-toggle="tab" href="#tabs-3-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-3-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-3-1-tab" data-toggle="tab" href="#tabs-3-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-3-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-3-2-tab" data-toggle="tab" href="#tabs-3-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-3-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-3', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-3-content">&lt;div class="tab-pane fade show active"
id="tabs-3-0" role="tabpanel" aria-labelled-by="tabs-3-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-card-calypso-java-lib:3.1.7&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-3-1" role="tabpanel" aria-labelled-by="tabs-3-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-card-calypso-java-lib:3.1.7&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-3-2" role="tabpanel" aria-labelled-by="tabs-3-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-card-calypso-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.1.7&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Card Calypso Crypto Legacy SAM Library</title><link>https://keyple.org/components/card-extensions/keyple-card-calypso-crypto-legacysam-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/card-extensions/keyple-card-calypso-crypto-legacysam-lib/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
This library is currently in &lt;strong>Beta&lt;/strong> version as it implements the &lt;a href="https://keypop.org/apis/calypso-layer/calypso-legacysam-api/" target="_blank" rel="noopener">Keypop Calypso Crypto Legacy SAM API&lt;/a>,
which is also in &lt;strong>Beta&lt;/strong>.
While it&amp;rsquo;s nearly stable, future migration steps might be necessary. We aim to minimize any changes you&amp;rsquo;ll need to make.
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>The &lt;strong>Keyple Card Calypso Crypto Legacy SAM Library&lt;/strong> is an add-on to manage Calypso® legacy SAMs (SAM-C1, HSM-C1, etc.).&lt;/p>
&lt;p>Therefore, it should be used only by application developers.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>0.9.0&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-card-calypso-crypto-legacysam-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-card-calypso-crypto-legacysam-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-card-calypso-crypto-legacysam-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-card-calypso-crypto-legacysam-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-card-calypso-crypto-legacysam-java-lib:0.9.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-card-calypso-crypto-legacysam-java-lib:0.9.0&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-card-calypso-crypto-legacysam-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>0.9.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Card Calypso Crypto PKI Library</title><link>https://keyple.org/components/card-extensions/keyple-card-calypso-crypto-pki-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/card-extensions/keyple-card-calypso-crypto-pki-lib/</guid><description>&lt;div class="alert alert-warning">
&lt;div>
This library is currently in &lt;strong>Beta&lt;/strong> version.
While it&amp;rsquo;s nearly stable, future migration steps might be necessary. We aim to minimize any changes you&amp;rsquo;ll need to make.
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>The &lt;strong>Keyple Card Calypso Crypto PKI Library&lt;/strong> is an add-on to enable Calypso® PKI card transactions.&lt;/p>
&lt;p>Therefore, it should be used only by application developers.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>0.2.1&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-card-calypso-crypto-pki-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-card-calypso-crypto-pki-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-card-calypso-crypto-pki-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-card-calypso-crypto-pki-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-card-calypso-crypto-pki-java-lib:0.2.1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-card-calypso-crypto-pki-java-lib:0.2.1&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-card-calypso-crypto-pki-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>0.2.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Plugin Card Resource Library</title><link>https://keyple.org/components/standard-reader-plugins/keyple-plugin-cardresource-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/standard-reader-plugins/keyple-plugin-cardresource-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Plugin Card Resource Library&lt;/strong> is a &lt;strong>PoolPlugin&lt;/strong> to manage readers provided by the
&lt;a href="./components/core/keyple-service-resource-lib/">&lt;strong>Card Resource Service&lt;/strong>&lt;/a>.&lt;/p>
&lt;p>Therefore, it should be used only by application developers.&lt;/p>
&lt;p>The main role of the plugin is to allow remote access to the &lt;strong>Card Resource Service&lt;/strong> via the &lt;strong>Keyple Distributed
Solution&lt;/strong> components.
It provides an interface for allocating and deallocating readers by profiles that are part of those configured at the
&lt;strong>Card Resource Service&lt;/strong> level.&lt;/p>
&lt;p>A typical use would be for the realization of a server providing cryptographic services through a pool of SAMs, each
inserted in a dedicated PC/SC reader.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>2.0.1&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-plugin-cardresource-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i>
&lt;a href="https://github.com/eclipse-keyple/keyple-plugin-cardresource-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-plugin-cardresource-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the
&lt;a href="https://central.sonatype.com/search?q=keyple-plugin-cardresource-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one
of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-plugin-cardresource-java-lib:2.0.1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-plugin-cardresource-java-lib:2.0.1&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-cardresource-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.0.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Common API</title><link>https://keyple.org/components/core/keyple-common-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/core/keyple-common-api/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Common API&lt;/strong> defines the public elements shared between all Keyple libraries.&lt;/p>
&lt;p>Therefore, it must be used by all developers.&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
The third version number (x.y.&lt;strong>z&lt;/strong>) only concerns updates of the public API documentation because this component does not contain any implementation.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>2.0.1&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-common-java-api/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-common-java-api/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-common-java-api" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="./learn/user-guide/standalone-application/">User guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-common-java-api" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-3" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-3-0-tab" data-toggle="tab" href="#tabs-3-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-3-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-3-1-tab" data-toggle="tab" href="#tabs-3-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-3-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-3-2-tab" data-toggle="tab" href="#tabs-3-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-3-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-3', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-3-content">&lt;div class="tab-pane fade show active"
id="tabs-3-0" role="tabpanel" aria-labelled-by="tabs-3-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-common-java-api:2.0.1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-3-1" role="tabpanel" aria-labelled-by="tabs-3-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-common-java-api:2.0.1&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-3-2" role="tabpanel" aria-labelled-by="tabs-3-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-common-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.0.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Distributed Local API</title><link>https://keyple.org/components/core/keyple-distributed-local-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/core/keyple-distributed-local-api/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Distributed Local API&lt;/strong> defines the &lt;strong>internal API&lt;/strong> dedicated to the development of local services components of the Keyple distributed solution.&lt;/p>
&lt;p>Therefore, it must be used only by developers of custom local services.&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
The third version number (x.y.&lt;strong>z&lt;/strong>) only concerns updates of the public API documentation because this component does not contain any implementation.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>2.2.0&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-local-java-api/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-local-java-api/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-distributed-local-java-api" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-distributed-local-java-api" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-distributed-local-java-api:2.2.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-distributed-local-java-api:2.2.0&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-distributed-local-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.2.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Distributed Remote API</title><link>https://keyple.org/components/core/keyple-distributed-remote-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/core/keyple-distributed-remote-api/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Distributed Remote API&lt;/strong> defines the &lt;strong>internal API&lt;/strong> dedicated to the development of remote plugins components of the Keyple distributed solution.&lt;/p>
&lt;p>Therefore, it must be used only by developers of custom remote plugins.&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
The third version number (x.y.&lt;strong>z&lt;/strong>) only concerns updates of the public API documentation because this component does not contain any implementation.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>3.1.0&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-remote-java-api/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-remote-java-api/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-distributed-remote-java-api" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-distributed-remote-java-api" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-distributed-remote-java-api:3.1.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-distributed-remote-java-api:3.1.0&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-distributed-remote-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.1.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>External resources</title><link>https://keyple.org/external-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/external-resources/</guid><description/></item><item><title>Keyple Card Generic Library</title><link>https://keyple.org/components/card-extensions/keyple-card-generic-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/card-extensions/keyple-card-generic-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Card Generic Library&lt;/strong> is an add-on to manage cards with low-level API.&lt;/p>
&lt;p>Therefore, it should be used only by application developers.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>3.1.2&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-card-generic-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-card-generic-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-card-generic-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-card-generic-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-1" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-1-0-tab" data-toggle="tab" href="#tabs-1-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-1-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-1-1-tab" data-toggle="tab" href="#tabs-1-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-1-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-1-2-tab" data-toggle="tab" href="#tabs-1-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-1-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-1', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-1-content">&lt;div class="tab-pane fade show active"
id="tabs-1-0" role="tabpanel" aria-labelled-by="tabs-1-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-card-generic-java-lib:3.1.2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-1" role="tabpanel" aria-labelled-by="tabs-1-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-card-generic-java-lib:3.1.2&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-2" role="tabpanel" aria-labelled-by="tabs-1-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-card-generic-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.1.2&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Distributed Local Library</title><link>https://keyple.org/components/distributed/keyple-distributed-local-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/distributed/keyple-distributed-local-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Distributed Local Library&lt;/strong> is the part of the &lt;strong>Keyple Distributed&lt;/strong> solution which contains all the &lt;strong>local&lt;/strong> services.&lt;/p>
&lt;p>Therefore, it should be used only by developers of applications installed on the terminal having local access to the smart card reader but wishes to delegate all or part of the ticketing processing to a remote application.&lt;/p>
&lt;p>It is compatible with &lt;strong>Windows&lt;/strong>, &lt;strong>Linux&lt;/strong>, &lt;strong>macOS&lt;/strong> and &lt;strong>Android&lt;/strong> platforms.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>2.5.2&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-local-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-local-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-distributed-local-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="./learn/user-guide/distributed-application/">User guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-distributed-local-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-distributed-local-java-lib:2.5.2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-distributed-local-java-lib:2.5.2&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-distributed-local-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.5.2&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Distributed Network Library</title><link>https://keyple.org/components/distributed/keyple-distributed-network-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/distributed/keyple-distributed-network-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Distributed Network Library&lt;/strong> is the part of the &lt;strong>Keyple Distributed&lt;/strong> solution which contains the common network elements used by &lt;strong>Local&lt;/strong> and &lt;strong>Remote&lt;/strong> components.&lt;/p>
&lt;p>Therefore, it should be used only by developers of distributed applications.&lt;/p>
&lt;p>It is compatible with &lt;strong>Windows&lt;/strong>, &lt;strong>Linux&lt;/strong>, &lt;strong>macOS&lt;/strong> and &lt;strong>Android&lt;/strong> platforms.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>2.5.1&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-network-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-network-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-distributed-network-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="./learn/user-guide/distributed-application/">User guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-distributed-network-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-distributed-network-java-lib:2.5.1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-distributed-network-java-lib:2.5.1&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-distributed-network-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.5.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Plugin PC/SC Library</title><link>https://keyple.org/components/standard-reader-plugins/keyple-plugin-pcsc-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/standard-reader-plugins/keyple-plugin-pcsc-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Plugin PC/SC Library&lt;/strong> is an add-on to manage &lt;strong>PC/SC&lt;/strong> readers.&lt;/p>
&lt;p>Therefore, it should be used only by application developers.&lt;/p>
&lt;p>It is compatible with &lt;strong>PC/SC Reader&lt;/strong> (Windows PC/SC WinScard API, Unix PC/SC lite API) equipment.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>2.4.2&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-pcsc-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-pcsc-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-plugin-pcsc-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-plugin-pcsc-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-1" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-1-0-tab" data-toggle="tab" href="#tabs-1-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-1-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-1-1-tab" data-toggle="tab" href="#tabs-1-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-1-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-1-2-tab" data-toggle="tab" href="#tabs-1-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-1-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-1', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-1-content">&lt;div class="tab-pane fade show active"
id="tabs-1-0" role="tabpanel" aria-labelled-by="tabs-1-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-plugin-pcsc-java-lib:2.4.2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-1" role="tabpanel" aria-labelled-by="tabs-1-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-plugin-pcsc-java-lib:2.4.2&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-2" role="tabpanel" aria-labelled-by="tabs-1-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-pcsc-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.4.2&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Plugin API</title><link>https://keyple.org/components/core/keyple-plugin-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/core/keyple-plugin-api/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Plugin API&lt;/strong> defines the &lt;strong>internal API&lt;/strong> dedicated to the development of reader plugins components.&lt;/p>
&lt;p>Therefore, it must be used only by developers of custom reader plugins.&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
The third version number (x.y.&lt;strong>z&lt;/strong>) only concerns updates of the public API documentation because this component does not contain any implementation.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>2.3.1&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-java-api/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-java-api/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-plugin-java-api" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="./learn/developer-guide/reader-plugin-add-on/">Developer guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-plugin-java-api" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-3" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-3-0-tab" data-toggle="tab" href="#tabs-3-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-3-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-3-1-tab" data-toggle="tab" href="#tabs-3-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-3-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-3-2-tab" data-toggle="tab" href="#tabs-3-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-3-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-3', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-3-content">&lt;div class="tab-pane fade show active"
id="tabs-3-0" role="tabpanel" aria-labelled-by="tabs-3-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-plugin-java-api:2.3.1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-3-1" role="tabpanel" aria-labelled-by="tabs-3-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-plugin-java-api:2.3.1&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-3-2" role="tabpanel" aria-labelled-by="tabs-3-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-java-api&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.3.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Distributed Remote Library</title><link>https://keyple.org/components/distributed/keyple-distributed-remote-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/distributed/keyple-distributed-remote-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Distributed Remote Library&lt;/strong> is the part of the &lt;strong>Keyple Distributed&lt;/strong> solution which contains all the &lt;strong>remote&lt;/strong> plugins.&lt;/p>
&lt;p>Therefore, it should be used only by developers of applications installed on the terminal not having local access to the smart card reader and that wishes to control the reader remotely.&lt;/p>
&lt;p>It is compatible with &lt;strong>Windows&lt;/strong>, &lt;strong>Linux&lt;/strong>, &lt;strong>macOS&lt;/strong> and &lt;strong>Android&lt;/strong> platforms.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>2.5.1&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-remote-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-distributed-remote-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-distributed-remote-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="./learn/user-guide/distributed-application/">User guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-distributed-remote-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-distributed-remote-java-lib:2.5.1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-distributed-remote-java-lib:2.5.1&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-distributed-remote-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.5.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Service Library</title><link>https://keyple.org/components/core/keyple-service-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/core/keyple-service-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Service Library&lt;/strong> contains the implementation of the core Keyple components and services, such as the smart card service, the card selection manager or the card and reader event manager.&lt;/p>
&lt;p>Therefore, it must be used only by application developers.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>3.3.5&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-service-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-service-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-service-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="./learn/user-guide/standalone-application/">User guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-service-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-service-java-lib:3.3.5&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-service-java-lib:3.3.5&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-service-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.3.5&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Service Resource Library</title><link>https://keyple.org/components/core/keyple-service-resource-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/core/keyple-service-resource-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Service Resource Library&lt;/strong> is an &lt;strong>add-on&lt;/strong> providing profile-based card resource allocation mechanism.&lt;/p>
&lt;p>Therefore, it can be used by developers of applications or card extensions.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>3.1.0&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-service-resource-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-service-resource-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-service-resource-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="./learn/user-guide/card-resource-service/">User guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-service-resource-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-service-resource-java-lib:3.1.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-service-resource-java-lib:3.1.0&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-service-resource-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.1.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Plugin Stub Library</title><link>https://keyple.org/components/standard-reader-plugins/keyple-plugin-stub-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/standard-reader-plugins/keyple-plugin-stub-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Plugin Stub Library&lt;/strong> is an add-on to manage &lt;strong>virtual&lt;/strong> readers and cards.&lt;/p>
&lt;p>Therefore, it should be used only by application developers.&lt;/p>
&lt;p>It is compatible with &lt;strong>Windows&lt;/strong>, &lt;strong>Linux&lt;/strong>, &lt;strong>macOS&lt;/strong> and &lt;strong>Android&lt;/strong> platforms.&lt;/p>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>2.2.1&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-stub-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-plugin-stub-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-plugin-stub-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-plugin-stub-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-1" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-1-0-tab" data-toggle="tab" href="#tabs-1-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-1-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-1-1-tab" data-toggle="tab" href="#tabs-1-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-1-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-1-2-tab" data-toggle="tab" href="#tabs-1-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-1-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-1', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-1-content">&lt;div class="tab-pane fade show active"
id="tabs-1-0" role="tabpanel" aria-labelled-by="tabs-1-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-plugin-stub-java-lib:2.2.1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-1" role="tabpanel" aria-labelled-by="tabs-1-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-plugin-stub-java-lib:2.2.1&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-2" role="tabpanel" aria-labelled-by="tabs-1-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-plugin-stub-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.2.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Keyple Util Library</title><link>https://keyple.org/components/core/keyple-util-lib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/components/core/keyple-util-lib/</guid><description>&lt;br>
&lt;p>The &lt;strong>Keyple Util Library&lt;/strong> contains utility classes used by all Keyple libraries.&lt;/p>
&lt;p>Therefore, it can be used by all developers.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
Since this library is used by all Keyple libraries, it is recommended to import it explicitly.
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2 id="java-component">Java component&lt;/h2>
&lt;div class="alert alert-note">
&lt;div>
&lt;strong>&lt;code>2.4.0&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> &lt;a href="#download">Download&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-util-java-lib/" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fas fa-exchange-alt pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/eclipse-keyple/keyple-util-java-lib/blob/main/CHANGELOG.md" target="_blank" rel="noopener">Changelog&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.keyple.org/keyple-util-java-lib" target="_blank" rel="noopener">API documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="download">Download&lt;/h3>
&lt;p>All deliverables are available directly from the &lt;a href="https://central.sonatype.com/search?q=keyple-util-java-lib" target="_blank" rel="noopener">Maven Central Repository&lt;/a> or by using one of the project resource managers below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Gradle-Kotlin"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Gradle-Kotlin&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Gradle Kotlin
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Gradle-Groovy"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Gradle-Groovy&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Gradle Groovy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Maven"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Maven&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Maven
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="bd-clipboard">&lt;button type="button" class="btn btn-clipboard btn-outline-light" title="Copy to clipboard" onClick="javascript:copyTabContentToClipboard('tabs-2', this);">Copy&lt;/button>&lt;/div>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;org.eclipse.keyple:keyple-util-java-lib:2.4.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.eclipse.keyple:keyple-util-java-lib:2.4.0&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">
&lt;div class="code relative" id="">
&lt;div class="code-copy-content nt3">&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.eclipse.keyple&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>keyple-util-java-lib&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.4.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item></channel></rss>