<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>External Keyple add-ons | Eclipse Keyple</title><link>https://keyple.org/external-resources/external-add-ons/</link><atom:link href="https://keyple.org/external-resources/external-add-ons/index.xml" rel="self" type="application/rss+xml"/><description>External Keyple add-ons</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2020-2023 The Eclipse Keyple® project. All Rights Reserved.</copyright><image><url>https://keyple.org/media/logo.svg</url><title>External Keyple add-ons</title><link>https://keyple.org/external-resources/external-add-ons/</link></image><item><title>Android PC/SC plugin by SpringCard</title><link>https://keyple.org/external-resources/external-add-ons/terminal-plugin-by-springcard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/external-resources/external-add-ons/terminal-plugin-by-springcard/</guid><description>&lt;hr>
&lt;p>SpringCard is happy to contribute to the Keyple project by providing a plugin that makes it possible to use SpringCard PC/SC couplers from a stock Android tablet or mobile phone.&lt;/p>
&lt;p>The plugin works&lt;/p>
&lt;ul>
&lt;li>with all SpringCard PC/SC over USB devices.&lt;/li>
&lt;/ul>
&lt;p>This includes all the SpringCard Puck family (for instance SpringCard Puck One, featuring contactless+SAM: &lt;a href="https://www.springcard.com/en/products/puck-one%29," target="_blank" rel="noopener">https://www.springcard.com/en/products/puck-one),&lt;/a> SpringCard Prox&amp;rsquo;N&amp;rsquo;Roll (&lt;a href="https://www.springcard.com/en/products/proxnroll-pcsc-hsp" target="_blank" rel="noopener">https://www.springcard.com/en/products/proxnroll-pcsc-hsp&lt;/a>) and virtually all PC/SC over USB (CCID) devices.&lt;/p>
&lt;p>The Android host must be a complete USB host (&lt;a href="https://developer.android.com/guide/topics/connectivity/usb/host%29" target="_blank" rel="noopener">https://developer.android.com/guide/topics/connectivity/usb/host)&lt;/a>. USB on-the-go (OTG) is not enough!
Pay attention that the Android host must also be able to provide enough power to the reader (more than 250mA), which is not the case for many tablets and mobile phones. Using a USB 3 hub with power delivery is generally the solution.&lt;/p>
&lt;ul>
&lt;li>with SpringCard PC/SC over BLE (Bluetooth Low Energy) devices.&lt;/li>
&lt;/ul>
&lt;p>First BLE PC/SC reader in SpringCard&amp;rsquo;s portfolio is SpringCard Puck Blue (&lt;a href="https://www.springcard.com/en/products/puck-blue%29" target="_blank" rel="noopener">https://www.springcard.com/en/products/puck-blue)&lt;/a>. Other devices will be introduced in the future. The Android host must support BLE (&lt;a href="https://developer.android.com/guide/topics/connectivity/bluetooth/ble-overview%29" target="_blank" rel="noopener">https://developer.android.com/guide/topics/connectivity/bluetooth/ble-overview)&lt;/a>.&lt;/p>
&lt;p>The plugin is hosted on GitHub: &lt;a href="https://github.com/springcard/android-keyple" target="_blank" rel="noopener">https://github.com/springcard/android-keyple&lt;/a>&lt;/p>
&lt;p>It is based on SpringCard&amp;rsquo;s PC/SC-Like for Android libraries (&lt;a href="https://github.com/springcard/android-pcsclike" target="_blank" rel="noopener">https://github.com/springcard/android-pcsclike&lt;/a>) that connects to the reader in BLE or USB using only &amp;lsquo;user-land&amp;rsquo; methods.&lt;/p></description></item><item><title>Terminal plugins by the Calypso Networks Association</title><link>https://keyple.org/external-resources/external-add-ons/terminal-plugins-by-cna/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/external-resources/external-add-ons/terminal-plugins-by-cna/</guid><description>&lt;hr>
&lt;p>The Calypso Networks Association has implemented several plugins to integrate Keyple Java on different ticketing terminals.&lt;/p>
&lt;p>Some are fully provide as open source:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/calypsonet/keyple-plugin-cna-coppernic-cone2-java-lib" target="_blank" rel="noopener">plugin Coppernic for the terminal &amp;lsquo;C-One v2&amp;rsquo;&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/calypsonet/keyple-plugin-cna-famoco-se-communication-java-lib" target="_blank" rel="noopener">plugin Famoco for the terminals &amp;lsquo;FX100&amp;rsquo;, &amp;lsquo;FX105&amp;rsquo;, &amp;lsquo;FX200&amp;rsquo;, &amp;lsquo;FX205&amp;rsquo;, &amp;lsquo;FX300&amp;rsquo;, &amp;lsquo;FX915&amp;rsquo;, &amp;lsquo;FX920&amp;rsquo;&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Others have restricted access to respect the IP of the manufacturers (ask CNA on &lt;code>keyple @ calypsonet.org&lt;/code>):&lt;/p>
&lt;ul>
&lt;li>plugin HSM to interface the &amp;lsquo;Calypso HSM&amp;rsquo;&lt;/li>
&lt;li>plugin Flowbird to support all the Android terminals proposed by Flowbird (Axio Touch Validator/ MTBorne validator, Magnetic Axio Touch Validator, Axio 4 Validator, Infigo Driver Console, Voyager Embedded Ticketing Vending Machine, Coppernic C-One, Coppernic C-One V2, Zebra TC77, ACTIA PSDT)&lt;/li>
&lt;li>plugin Bluebird for the terminal &amp;lsquo;EF501&amp;rsquo;&lt;/li>
&lt;/ul></description></item><item><title>Advanced ticketing demos by the Calypso Networks Association</title><link>https://keyple.org/external-resources/external-add-ons/ticketing-demos-by-cna/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keyple.org/external-resources/external-add-ons/ticketing-demos-by-cna/</guid><description>&lt;hr>
&lt;p>The Calypso Networks Association has implemented several advanced demos to show the possibilities of ticketing terminals based on Keyple Java.&lt;/p>
&lt;p>Two Android applications to emulate:&lt;/p>
&lt;ul>
&lt;li>an &lt;a href="https://github.com/calypsonet/keyple-android-demo-validation" target="_blank" rel="noopener">autonomous validator&lt;/a> on Android-based ticketing terminals: the machine automatically starts a secure session when a contactless card is detected, the last transport event et the available ticketing contracts are checked, and if the access is granted a new event is written.&lt;/li>
&lt;li>a &lt;a href="https://github.com/calypsonet/keyple-android-demo-control" target="_blank" rel="noopener">hand-held inspection terminal&lt;/a> on Android portable terminals: an operator can check the content of a card.&lt;/li>
&lt;/ul>
&lt;p>Also proposed, the settings to integrate these two Android demos to terminals from Coppernic, Famoco, Flowbird, and Bluebird, using the &lt;a href="../../external-resources/external-add-ons/terminal-plugins-by-cna/">dedicated plugins&lt;/a> provided by CNA.&lt;/p>
&lt;p>The server and client applications to operate a &lt;a href="https://github.com/calypsonet/keyple-java-demo-remote" target="_blank" rel="noopener">remote sale and ticketing reload service&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>in the back-office side, a Java server application to process the ticketing sale and to manage the Calypso secure session to reload contracts in remote cards. The server manages a pool of Calypso SAM using the PC/SC plugin and the Calypso SAM resource manager.&lt;/li>
&lt;li>on the customer side, an Android application loaded in a common NFC phone provides the graphic user interface to request the ticket purchase. The Android NFC plugin is used to communicate with the contactless card. The Calypso card commands are relayed from the ticketing server using the Keyple distributed module.&lt;/li>
&lt;/ul>
&lt;p>More guides on these demos on the &lt;a href="https://calypsonet.org/keyple-resources/" target="_blank" rel="noopener">CNA website&lt;/a>.&lt;/p></description></item></channel></rss>